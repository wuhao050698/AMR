# The boy desires the girl to believe him.
instance(w,want-01)
instance(b,boy)
instance(b2,believe-01)
instance(g,girl)
ARG0(w,b)
ARG1(w,b2)
ARG0(b2,g)
ARG1(b2,b)

# ::snt Chapter 1 .
instance(c,chapter)
instance(1,1)
mod(c,1)

# ::snt Once when I was six years old I saw a magnificent picture in a book , called True Stories from Nature , about the primeval forest .
instance(s,see-01)
instance(i,i)
instance(p,picture)
instance(m,magnificent)
instance(b2,book)
instance(n,name)
instance(f,forest)
instance(p2,primeval)
instance(o,once)
instance(a,age-01)
instance(t,temporal-quantity)
instance(y,year)
ARG0(s,i)
ARG1(s,p)
mod(p,m)
location(p,b2)
name(b2,n)
topic(b2,f)
mod(f,p2)
mod(f,o)
time(f,a)
ARG1(a,i)
ARG2(i,t)
unit(t,y)

# ::snt It was a picture of a boa constrictor in the act of swallowing an animal .
instance(p,picture)
instance(i,it)
instance(b2,boa)
instance(c2,constrictor)
instance(s,swallow-01)
instance(a,animal)
domain(p,i)
topic(p,b2)
mod(b2,c2)
ARG0-of(b2,s)
ARG1(s,a)

# ::snt Here is a copy of the drawing .
instance(b,be-located-at-91)
instance(t2,thing)
instance(c,copy-01)
instance(p,picture)
instance(d,draw-01)
instance(h,here)
ARG1(b,t2)
ARG2-of(t2,c)
ARG1(c,p)
ARG1-of(p,d)
ARG2(p,h)

# ::snt In the book it said : " Boa constrictors swallow their prey whole , without chewing it .
instance(s2,say-01)
instance(b2,book)
instance(s,swallow-01)
instance(b,boa)
instance(c,constrictor)
instance(p,prey)
instance(w,whole)
instance(c2,chew-01)
ARG0(s2,b2)
ARG1(s2,s)
ARG0(s,b)
mod(b,c)
ARG1(b,p)
mod(p,w)
poss(p,b)
manner(p,c2)
ARG0(c2,b)
ARG1(b,p)

# ::snt After that they are not able to move , and they sleep through the six months that they need for digestion . "
instance(a,and)
instance(p,possible-01)
instance(m,move-01)
instance(t,they)
instance(a2,after)
instance(t3,that)
instance(s,sleep-01)
instance(t2,temporal-quantity)
instance(m2,month)
instance(n,need-01)
instance(d,digest-01)
op1(a,p)
ARG1(p,m)
ARG0(m,t)
time(m,a2)
op1(a2,t3)
op2(a2,s)
ARG0(s,t)
duration(t,t2)
unit(t2,m2)
ARG1-of(t2,n)
ARG0(n,t)
purpose(t,d)
ARG0(d,t)

# ::snt I pondered deeply , then , over the adventures of the jungle .
instance(p,ponder-01)
instance(i,i)
instance(a,adventure)
instance(j,jungle)
instance(d,deep-02)
instance(t,then)
ARG0(p,i)
ARG1(p,a)
location(a,j)
ARG1-of(a,d)
time(a,t)

# ::snt And after some work with a colored pencil I succeeded in making my first drawing .
instance(a2,and)
instance(s,succeed-01)
instance(i,i)
instance(m,make-01)
instance(p2,picture)
instance(d,draw-01)
instance(o,ordinal-entity)
instance(a,after)
instance(w,work-01)
instance(p,pencil)
instance(c,color)
instance(s2,some)
op2(a2,s)
ARG0(s,i)
ARG1(s,m)
ARG0(m,i)
ARG1(i,p2)
ARG1-of(p2,d)
ARG0(d,i)
ord(i,o)
time(i,a)
op1(a,w)
ARG0(w,i)
instrument(i,p)
mod(p,c)
mod(p,s2)

# ::snt My Drawing Number One .
instance(p,picture)
instance(n2,name)
instance(i,i)
name(p,n2)
poss(p,i)

# ::snt It looked like this : I showed my masterpiece to the grown - ups , and asked them whether the drawing frightened them .
instance(a,and)
instance(l,look-02)
instance(i,it)
instance(t,this)
instance(s,show-01)
instance(i2,i)
instance(m,masterpiece)
instance(g,grown-up)
instance(a2,ask-01)
instance(t2,truth-value)
instance(f,frighten-01)
instance(p,picture)
instance(d,draw-01)
op1(a,l)
ARG0(l,i)
ARG1(l,t)
op2(l,s)
ARG0(s,i2)
ARG1(s,m)
poss(m,i2)
ARG2(m,g)
op3(m,a2)
ARG0(a2,i2)
ARG1(i2,t2)
polarity-of(t2,f)
ARG0(f,p)
ARG1-of(p,d)
ARG1(p,g)
ARG2(p,g)

# ::snt But they answered : " Frighten ?
instance(c,contrast-01)
instance(a,answer-01)
instance(t,they)
instance(f,frighten-01)
instance(c2,cause-01)
instance(a2,amr-unknown)
ARG2(c,a)
ARG0(a,t)
ARG2(a,f)
ARG1-of(f,c2)
ARG0(c2,a2)

# ::snt Why should any one be frightened by a hat ? "
instance(f,frighten-01)
instance(h,hat)
instance(o,one)
instance(a,any)
instance(c,cause-01)
instance(a2,amr-unknown)
ARG0(f,h)
ARG1(f,o)
mod(o,a)
ARG1-of(o,c)
ARG0(c,a2)

# ::snt My drawing was not a picture of a hat .
instance(p,picture-01)
instance(p2,picture)
instance(d,draw-01)
instance(i,i)
instance(h,hat)
ARG0(p,p2)
ARG1-of(p2,d)
ARG0(d,i)
ARG1(d,h)

# ::snt It was a picture of a boa constrictor digesting an elephant .
instance(p,picture-01)
instance(i,it)
instance(b2,boa)
instance(c,constrictor)
instance(d,digest-01)
instance(e,elephant)
ARG0(p,i)
ARG1(p,b2)
mod(b2,c)
ARG0-of(b2,d)
ARG1(d,e)

# ::snt But since the grown - ups were not able to understand it , I made another drawing : I drew the inside of the boa constrictor , so that the grown - ups could see it clearly .
instance(c,contrast-01)
instance(a2,and)
instance(d3,draw-01)
instance(i,i)
instance(p2,picture)
instance(a,another)
instance(c3,cause-01)
instance(p3,possible-01)
instance(u,understand-01)
instance(g,grown-up)
instance(i2,it)
instance(d,draw-01)
instance(i3,inside)
instance(b2,boa)
instance(c4,constrictor)
instance(p,possible-01)
instance(s,see-01)
instance(c2,clear-06)
ARG2(c,a2)
op1(a2,d3)
ARG0(d3,i)
ARG1(d3,p2)
mod(p2,a)
ARG1-of(p2,c3)
ARG0(c3,p3)
ARG1(p3,u)
ARG0(u,g)
ARG1(u,i2)
op2(u,d)
ARG0(d,i)
ARG1(i,i3)
part-of(i3,b2)
mod(b2,c4)
purpose(b2,p)
ARG1(p,s)
ARG0(s,g)
ARG1(g,i2)
ARG1-of(i2,c2)

# ::snt They always need to have things explained .
instance(n,need-01)
instance(t,they)
instance(e,explain-01)
instance(a,always)
ARG0(n,t)
ARG1(n,e)
time(n,a)

# ::snt My Drawing Number Two looked like this : The grown - ups ' response , this time , was to advise me to lay aside my drawings of boa constrictors , whether from the inside or the outside , and devote myself instead to geography , history , arithmetic and grammar .
instance(a6,and)
instance(l,look-02)
instance(p,picture)
instance(i,i)
instance(t2,this)
instance(r,respond-01)
instance(g,grown-up)
instance(i,i)
instance(a,advise-01)
instance(a3,and)
instance(l2,lay-01)
instance(p2,picture)
instance(d2,draw-01)
instance(b2,boa)
instance(c2,constrictor)
instance(o,or)
instance(i2,inside)
instance(o2,outside)
instance(a2,aside)
instance(d3,devote-01)
instance(a4,and)
instance(g2,geography)
instance(h,history)
instance(a5,arithmetic)
instance(g3,grammar)
instance(i4,instead-of-91)
instance(t4,time)
instance(t5,this)
op1(a6,l)
ARG0(l,p)
poss(l,i)
ARG1(l,t2)
op2(l,r)
ARG0(r,g)
ARG1(r,i)
ARG2(r,a)
ARG0(a,g)
ARG1(g,i)
ARG2(i,a3)
op1(a3,l2)
ARG0(l2,i)
ARG1(i,p2)
ARG1-of(p2,d2)
ARG0(d2,i)
topic(d2,b2)
mod(b2,c2)
mod(b2,o)
op1(o,i2)
op2(o,o2)
ARG2(o,a2)
op2(o,d3)
ARG0(d3,i)
ARG1(i,i)
ARG2(i,a4)
op1(a4,g2)
op2(a4,h)
op3(a4,a5)
op4(a4,g3)
ARG1-of(a4,i4)
ARG2(i4,d2)
time(i4,t4)
mod(t4,t5)

# ::snt That is why , at the age of six , I gave up what might have been a magnificent career as a painter .
instance(c2,cause-01)
instance(t2,that)
instance(g,give-up-07)
instance(i,i)
instance(c,career)
instance(m,magnificent)
instance(p,person)
instance(p2,paint-02)
instance(a,age-01)
instance(t,temporal-quantity)
instance(y,year)
ARG0(c2,t2)
ARG1(c2,g)
ARG0(g,i)
ARG1(g,c)
mod(c,m)
topic(c,p)
ARG0-of(p,p2)
time(p,a)
ARG1(a,i)
ARG2(i,t)
unit(t,y)

# ::snt I had been disheartened by the failure of my Drawing Number One and my Drawing Number Two .
instance(d,dishearten-01)
instance(f,fail-01)
instance(a,and)
instance(p,picture)
instance(n,name)
instance(p2,picture)
instance(n2,name)
instance(i,i)
instance(i,i)
ARG0(d,f)
ARG1(f,a)
op1(a,p)
name(p,n)
op2(p,p2)
name(p2,n2)
poss(p2,i)
ARG1(p2,i)

# ::snt Grown - ups never understand anything by themselves , and it is tiresome for children to be always and forever explaining things to them .
instance(a,and)
instance(u,understand-01)
instance(g,grown-up)
instance(a3,anything)
instance(e2,ever)
instance(b,by-oneself)
instance(t,tire-03)
instance(e,explain-01)
instance(c,child)
instance(t2,thing)
instance(a4,always)
instance(f,forever)
op1(a,u)
ARG0(u,g)
ARG1(u,a3)
time(u,e2)
mod(u,b)
op2(u,t)
ARG0(t,e)
ARG0(e,c)
ARG1(e,t2)
ARG2(e,g)
time(g,a4)
mod(g,f)
ARG1(g,c)

# ::snt So then I chose another profession , and learned to pilot airplanes .
instance(c2,cause-01)
instance(a,and)
instance(c,choose-01)
instance(i,i)
instance(p,profession)
instance(a2,another)
instance(l,learn-01)
instance(p2,pilot-01)
instance(a3,airplane)
ARG1(c2,a)
op1(a,c)
ARG0(c,i)
ARG1(c,p)
mod(p,a2)
op2(p,l)
ARG0(l,i)
ARG1(i,p2)
ARG0(p2,i)
ARG1(i,a3)

# ::snt I have flown a little over all parts of the world ; and it is true that geography has been very useful to me .
instance(a,and)
instance(f,fly-01)
instance(i,i)
instance(o,over)
instance(p2,part)
instance(w,world)
instance(u,useful-05)
instance(i,i)
instance(g,geography)
instance(v,very)
op1(a,f)
ARG0(f,i)
location(i,o)
op1(o,p2)
part-of(p2,w)
op2(p2,u)
ARG0(u,i)
ARG1(u,g)
degree(u,v)

# ::snt At a glance I can distinguish China from Arizona .
instance(p,possible-01)
instance(d,distinguish-01)
instance(i,i)
instance(c,country)
instance(n,name)
instance(s,state)
instance(n2,name)
instance(g,glance-01)
ARG1(p,d)
ARG0(d,i)
ARG1(d,c)
name(c,n)
ARG2(c,s)
name(s,n2)
manner(s,g)
ARG0(g,i)

# ::snt If one gets lost in the night , such knowledge is valuable .
instance(v,value-02)
instance(k,knowledge)
instance(s,such)
instance(g,get-03)
instance(o,one)
instance(l,lost)
instance(d,date-entity)
ARG1(v,k)
mod(k,s)
condition(k,g)
ARG1(g,o)
ARG2(g,l)
time(l,d)

# ::snt In the course of this life I have had a great many encounters with a great many people who have been concerned with matters of consequence .
instance(e,encounter-01)
instance(i,i)
instance(p,person)
instance(m2,many)
instance(g2,great)
instance(c,concern-01)
instance(m3,matter)
instance(c2,consequential-01)
instance(m,many)
instance(g,great)
instance(c3,course)
instance(l,life)
instance(t,this)
ARG0(e,i)
ARG1(e,p)
quant(p,m2)
mod(m2,g2)
ARG1-of(m2,c)
ARG0(c,m3)
ARG1-of(m3,c2)
quant(m3,m)
mod(m,g)
time(m,c3)
poss(c3,l)
mod(l,t)

# ::snt I have lived a great deal among grown - ups .
instance(l,live-01)
instance(i,i)
instance(d,deal)
instance(g2,great)
instance(a,among)
instance(g,grown-up)
ARG0(l,i)
mod(l,d)
mod(d,g2)
location(d,a)
op1(a,g)

# ::snt I have seen them intimately , close at hand .
instance(s,see-01)
instance(i,i)
instance(t,they)
instance(c,close-10)
instance(a,at-hand-14)
instance(i2,intimate-02)
ARG0(s,i)
ARG1(s,t)
ARG1-of(s,c)
ARG2(c,a)
ARG1(a,t)
ARG2-of(a,i2)
ARG1(i2,i)

# ::snt And that has n't much improved my opinion of them .
instance(a,and)
instance(i,improve-01)
instance(t,that)
instance(t3,thing)
instance(o2,opine-01)
instance(i2,i)
instance(t2,they)
instance(m2,much)
op2(a,i)
ARG0(i,t)
ARG1(i,t3)
ARG1-of(t3,o2)
ARG0(o2,i2)
topic(o2,t2)
degree(o2,m2)

# ::snt Whenever I met one of them who seemed to me at all clear - sighted , I tried the experiment of showing him my Drawing Number One , which I have always kept .
instance(t,try-01)
instance(i,i)
instance(e,experiment-01)
instance(s,show-01)
instance(p2,picture)
instance(p,p)
instance(k,keep-01)
instance(a,always)
instance(m,meet-02)
instance(p,person)
instance(i2,include-91)
instance(t3,they)
instance(s3,see-01)
instance(c,clear-08)
instance(s4,seem-01)
instance(a3,at-all)
instance(a2,any)
ARG0(t,i)
ARG1(t,e)
ARG1(e,s)
ARG1(s,p2)
ARG2(s,p)
ARG1-of(p,k)
ARG0(k,i)
time(i,a)
time(i,m)
ARG0(m,i)
ARG1(i,p)
ARG1-of(p,i2)
ARG2(i2,t3)
ARG0-of(i2,s3)
ARG1-of(s3,c)
ARG1-of(s3,s4)
ARG2(s4,i)
degree(s4,a3)
mod(s4,a2)

# ::snt I would try to find out , so , if this was a person of true understanding .
instance(t,try-01)
instance(i,i)
instance(f,find-out-03)
instance(t4,truth-value)
instance(u2,understand-01)
instance(p,person)
instance(t2,this)
instance(t3,true-01)
ARG0(t,i)
ARG1(t,f)
ARG0(f,i)
ARG1(i,t4)
polarity-of(t4,u2)
ARG0(u2,p)
mod(p,t2)
ARG1-of(p,t3)

# ::snt But , whoever it was , he , or she , would always say : " That is a hat . "
instance(c,contrast-01)
instance(s,say-01)
instance(o,or)
instance(h,he)
instance(s2,she)
instance(h2,hat)
instance(t,that)
instance(a,always)
ARG2(c,s)
ARG0(s,o)
op1(o,h)
op2(o,s2)
ARG1(o,h2)
domain(h2,t)
time(h2,a)

# ::snt Then I would never talk to that person about boa constrictors , or primeval forests , or stars .
instance(t,talk-01)
instance(i,i)
instance(o,or)
instance(b,boa)
instance(c2,constrictor)
instance(f,forest)
instance(p2,primeval)
instance(s,star)
instance(p,person)
instance(t2,that)
instance(e,ever)
instance(-,-)
ARG0(t,i)
ARG1(t,o)
op1(o,b)
mod(b,c2)
op2(b,f)
mod(f,p2)
op3(f,s)
ARG2(f,p)
mod(p,t2)
time(p,e)
polarity(p,-)

# ::snt I would bring myself down to his level .
instance(b,bring-01)
instance(i,i)
instance(l,level)
instance(h,he)
instance(d,down)
ARG0(b,i)
ARG1(b,i)
ARG2(i,l)
poss(l,h)
ARG3(l,d)

# ::snt I would talk to him about bridge , and golf , and politics , and neckties .
instance(t,talk-01)
instance(i,i)
instance(a,and)
instance(b,bridge)
instance(g,golf)
instance(p,politics)
instance(n2,necktie)
instance(h,he)
ARG0(t,i)
ARG1(t,a)
op1(a,b)
op2(a,g)
op3(a,p)
op4(a,n2)
ARG2(a,h)

# ::snt And the grown - up would be greatly pleased to have met such a sensible man .
instance(a,and)
instance(p,please-01)
instance(m,meet-02)
instance(g,g)
instance(m2,man)
instance(s,sense-02)
instance(s2,such)
instance(g,grown-up)
instance(g2,great)
op2(a,p)
ARG0(p,m)
ARG0(m,g)
ARG1(g,m2)
ARG2-of(m2,s)
degree(s,s2)
ARG1(s,g)
degree(s,g2)

# ::snt Chapter 2 .
instance(c,chapter)
instance(2,2)
mod(c,2)

# ::snt So I lived my life alone , without anyone that I could really talk to , until I had an accident with my plane in the Desert of Sahara , six years ago .
instance(c,cause-01)
instance(l,live-01)
instance(i,i)
instance(t3,talk-01)
instance(a5,anyone)
instance(r,real-04)
instance(l2,life)
instance(a,alone)
instance(u,until)
instance(h,have-06)
instance(a3,accident)
instance(p,plane)
instance(d,desert)
instance(b,before)
instance(n2,now)
instance(t2,temporal-quantity)
instance(y,year)
ARG1(c,l)
ARG0(l,i)
ARG0-of(i,t3)
ARG2(t3,a5)
ARG1-of(t3,r)
ARG1(t3,l2)
poss(l2,i)
manner(l2,a)
duration(l2,u)
op1(u,h)
ARG0(h,i)
ARG1(i,a3)
mod(a3,p)
location(a3,d)
time(a3,b)
op1(b,n2)
quant(b,t2)
unit(t2,y)

# ::snt Something was broken in my engine .
instance(b,break-01)
instance(s,something)
instance(e,engine)
instance(i,i)
ARG1(b,s)
location(s,e)
poss(e,i)

# ::snt And as I had with me neither a mechanic nor any passengers , I set myself to attempt the difficult repairs all alone .
instance(a,and)
instance(c,cause-01)
instance(h,have-03)
instance(i,i)
instance(o,or)
instance(m,mechanic)
instance(p,passenger)
instance(i,i)
instance(-,-)
instance(a2,attempt-01)
instance(r,repair-01)
instance(d,difficult)
instance(a3,alone)
instance(a4,all)
op2(a,c)
ARG0(c,h)
ARG0(h,i)
ARG1(i,o)
op1(o,m)
op2(o,p)
accompanier(o,i)
polarity(o,-)
ARG1(o,a2)
ARG0(a2,i)
ARG1(i,r)
mod(r,d)
mod(r,a3)
degree(a3,a4)

# ::snt It was a question of life or death for me : I had scarcely enough drinking water to last a week .
instance(q,question-01)
instance(i,i)
instance(o,or)
instance(l,live-01)
instance(d,die-01)
instance(c,cause-01)
instance(h,have-03)
instance(i,i)
instance(w,water)
instance(d2,drink-01)
instance(h2,have-quant-91)
instance(e,enough)
instance(s,scarce)
instance(l2,last-03)
instance(t,temporal-quantity)
instance(w2,week)
ARG0(q,i)
ARG1(i,o)
op1(o,l)
op2(o,d)
ARG1-of(o,c)
ARG0(c,h)
ARG0(h,i)
ARG1(h,w)
purpose(w,d2)
ARG1-of(w,h2)
ARG3(h2,e)
mod(e,s)
ARG6(e,l2)
ARG2(l2,t)
unit(t,w2)
ARG3(t,i)

# ::snt The first night , then , I went to sleep on the sand , a thousand miles from any human habitation .
instance(s,sleep-01)
instance(i,i)
instance(s2,sand)
instance(d2,date-entity)
instance(n,night)
instance(o,ordinal-entity)
instance(r,relative-position)
instance(p,place)
instance(i2,inhabit-01)
instance(h,human)
instance(a2,any)
instance(d,distance-quantity)
instance(m,mile)
instance(a3,away)
ARG0(s,i)
location(s,s2)
time(s,d2)
dayperiod(d2,n)
ord(d2,o)
location(d2,r)
op1(r,p)
ARG1-of(p,i2)
ARG0(i2,h)
mod(i2,a2)
quant(i2,d)
unit(d,m)
direction(d,a3)

# ::snt I was more isolated than a shipwrecked sailor on a raft in the middle of the ocean .
instance(h,have-degree-91)
instance(i,i)
instance(i2,isolate-01)
instance(m,more)
instance(p,person)
instance(s,sail-01)
instance(s2,shipwreck-01)
instance(r,raft)
instance(o,ocean)
instance(m2,middle)
ARG1(h,i)
ARG2(h,i2)
ARG1(i2,i)
ARG3(i2,m)
ARG4(i2,p)
ARG0-of(p,s)
ARG1-of(p,s2)
location(p,r)
location(r,o)
part(o,m2)

# ::snt Thus you can imagine my amazement , at sunrise , when I was awakened by an odd little voice .
instance(c,cause-01)
instance(p,possible-01)
instance(i2,imagine-01)
instance(y,you)
instance(a,amaze-01)
instance(i,i)
instance(s,sunrise)
instance(w,wake-01)
instance(v,voice)
instance(o,odd)
instance(l,little)
ARG1(c,p)
ARG1(p,i2)
ARG0(i2,y)
ARG1(i2,a)
ARG1(a,i)
time(a,s)
time-of(s,w)
ARG0(w,v)
mod(v,o)
mod(v,l)
ARG1(v,i)

# ::snt It said : " If you please -- draw me a sheep ! "
instance(s,say-01)
instance(i,it)
instance(d,draw-01)
instance(y2,you)
instance(s2,sheep)
instance(i2,i)
ARG0(s,i)
ARG1(s,d)
ARG0(d,y2)
ARG1(d,s2)
ARG2(d,i2)

# ::snt " What ! "
instance(s,string-entity)

# ::snt " Draw me a sheep ! "
instance(d,draw-01)
instance(y,you)
instance(s,sheep)
instance(i,i)
instance(imperative,imperative)
ARG0(d,y)
ARG1(d,s)
ARG2(d,i)
mode(d,imperative)

# ::snt I jumped to my feet , completely thunderstruck .
instance(j,jump-03)
instance(i,i)
instance(t,thunderstruck)
instance(c,complete-02)
instance(f,foot)
ARG0(j,i)
mod(i,t)
ARG1-of(t,c)
destination(t,f)
part-of(f,i)

# ::snt I blinked my eyes hard .
instance(b,blink-01)
instance(i,i)
instance(e,eye)
instance(h,hard-04)
ARG0(b,i)
ARG1(b,e)
part-of(e,i)
ARG1-of(e,h)

# ::snt I looked carefully all around me .
instance(l,look-01)
instance(i,i)
instance(a,around)
instance(a2,all)
instance(c,careful)
ARG0(l,i)
direction(l,a)
op1(a,i)
mod(i,a2)
manner(i,c)

# ::snt And I saw a most extraordinary small person , who stood there examining me with great seriousness .
instance(a,and)
instance(s,see-01)
instance(i,i)
instance(p,person)
instance(h,have-degree-91)
instance(e,extraordinary)
instance(m,most)
instance(s2,small)
instance(s3,stand-01)
instance(t,there)
instance(e2,examine-01)
instance(s4,serious-01)
instance(g,great)
op2(a,s)
ARG0(s,i)
ARG1(s,p)
ARG1-of(p,h)
ARG2(h,e)
ARG3(h,m)
mod(h,s2)
ARG1-of(h,s3)
ARG2(s3,t)
ARG0-of(s3,e2)
ARG1(e2,i)
ARG2-of(i,s4)
degree(s4,g)

# ::snt Here you may see the best portrait that , later , I was able to make of him .
instance(p,possible-01)
instance(s,see-01)
instance(y,you)
instance(p2,portrait)
instance(h,he)
instance(h3,have-degree-91)
instance(g,good-02)
instance(m,most)
instance(p4,portrait)
instance(m2,make-01)
instance(i,i)
instance(p3,possible-01)
instance(a,after)
instance(h2,here)
ARG1(p,s)
ARG0(s,y)
ARG1(s,p2)
topic(p2,h)
ARG1-of(p2,h3)
ARG2(h3,g)
ARG1(g,p2)
ARG3(g,m)
ARG5(g,p4)
ARG1-of(p4,m2)
ARG0(m2,i)
ARG1-of(m2,p3)
time(m2,a)
location(m2,h2)

# ::snt But my drawing is certainly very much less charming than its model .
instance(c3,contrast-01)
instance(h,have-degree-91)
instance(p,picture)
instance(d,draw-01)
instance(i,i)
instance(c,charm-01)
instance(l,less)
instance(m,much)
instance(v,very)
instance(m2,model)
instance(c2,certain)
ARG2(c3,h)
ARG1(h,p)
ARG1-of(p,d)
ARG0(d,i)
ARG2(d,c)
ARG0(c,p)
ARG3(c,l)
quant(l,m)
degree(m,v)
ARG4(m,m2)
poss(m2,p)
mod(m2,c2)

# ::snt That , however , is not my fault .
instance(c,contrast-01)
instance(f,fault-01)
instance(i,i)
instance(t,that)
instance(-,-)
ARG2(c,f)
ARG1(f,i)
ARG2(f,t)
polarity(f,-)

# ::snt The grown - ups discouraged me in my painter 's career when I was six years old , and I never learned to draw anything , except boas from the outside and boas from the inside .
instance(d,discourage-01)
instance(g,grown-up)
instance(i,i)
instance(c,career)
instance(p,person)
instance(p2,paint-02)
instance(c2,cause-01)
instance(l,learn-01)
instance(d2,draw-01)
instance(a2,anything)
instance(e,ever)
instance(e2,except-01)
instance(a3,and)
instance(b,boa)
instance(f,from)
instance(o,outside)
instance(b2,boa)
instance(f2,from)
instance(i2,inside)
instance(a,age-01)
instance(t2,temporal-quantity)
instance(y,year)
ARG0(d,g)
ARG1(d,i)
ARG2(d,c)
topic(c,p)
ARG0-of(p,p2)
poss(p,i)
ARG0-of(p,c2)
ARG1(c2,l)
ARG0(l,i)
ARG1(i,d2)
ARG0(d2,i)
ARG1(i,a2)
time(i,e)
ARG2-of(i,e2)
ARG1(e2,a3)
op1(a3,b)
direction(b,f)
op1(f,o)
op2(f,b2)
direction(b2,f2)
op1(f2,i2)
time(f2,a)
ARG1(a,i)
ARG2(i,t2)
unit(t2,y)

# ::snt Now I stared at this sudden apparition with my eyes fairly starting out of my head in astonishment .
instance(s,stare-01)
instance(i,i)
instance(t,thing)
instance(a,appear-01)
instance(s2,sudden)
instance(t2,this)
instance(n,now)
instance(s3,start-03)
instance(e,eye)
instance(c,cause-01)
instance(a2,astonish-01)
instance(f,fair-04)
instance(o,out-06)
instance(h,head)
ARG0(s,i)
ARG1(s,t)
ARG1-of(t,a)
manner(a,s2)
mod(a,t2)
time(a,n)
manner(a,s3)
ARG0(s3,e)
part-of(e,i)
ARG1-of(e,c)
ARG0(c,a2)
ARG1(a2,i)
ARG1-of(a2,f)
manner(a2,o)
ARG1(o,e)
ARG2(e,h)
part-of(h,i)

# ::snt Remember , I had crashed in the desert a thousand miles from any inhabited region .
instance(r,remember-01)
instance(y,you)
instance(c,crash-01)
instance(i,i)
instance(d,desert)
instance(r3,relative-position)
instance(r2,region)
instance(i2,inhabit-01)
instance(a2,any)
instance(d2,distance-quantity)
instance(m,mile)
instance(1000,1000)
instance(a,away)
instance(imperative,imperative)
ARG0(r,y)
ARG1(r,c)
ARG1(c,i)
location(c,d)
location(c,r3)
op1(r3,r2)
ARG1-of(r2,i2)
mod(r2,a2)
quant(r2,d2)
unit(d2,m)
quant(d2,1000)
direction(d2,a)
mode(d2,imperative)

# ::snt And yet my little man seemed neither to be straying uncertainly among the sands , nor to be fainting from fatigue or hunger or thirst or fear .
instance(c3,contrast-01)
instance(s,seem-01)
instance(a,and)
instance(s2,stray-01)
instance(m,man)
instance(l,little)
instance(i,i)
instance(a3,among)
instance(s3,sand)
instance(c,certain)
instance(-,-)
instance(f,faint-01)
instance(c2,cause-01)
instance(o,or)
instance(f2,fatigue-01)
instance(h,hunger-01)
instance(t,thirst-01)
instance(f3,fear-01)
ARG2(c3,s)
ARG1(s,a)
op1(a,s2)
ARG0(s2,m)
mod(m,l)
poss(m,i)
ARG1(m,a3)
op1(a3,s3)
manner(a3,c)
polarity(c,-)
polarity(c,-)
op2(c,f)
ARG0(f,m)
ARG1-of(m,c2)
ARG0(c2,o)
op1(o,f2)
op2(o,h)
op3(o,t)
op4(o,f3)
polarity(o,-)

# ::snt Nothing about him gave any suggestion of a child lost in the middle of the desert , a thousand miles from any human habitation .
instance(s,suggest-01)
instance(n,nothing)
instance(h,he)
instance(c,child)
instance(l,lose-02)
instance(d,desert)
instance(m,middle)
instance(r,relative-position)
instance(t,thing)
instance(i,inhabit-01)
instance(h2,human)
instance(a3,any)
instance(d2,distance-quantity)
instance(m2,mile)
instance(1000,1000)
instance(a2,away)
ARG0(s,n)
topic(n,h)
ARG1(n,c)
ARG1-of(c,l)
location(l,d)
part(d,m)
location(d,r)
op1(r,t)
ARG1-of(t,i)
ARG0(i,h2)
mod(i,a3)
quant(i,d2)
unit(d2,m2)
quant(d2,1000)
direction(d2,a2)

# ::snt When at last I was able to speak , I said to him : " But -- what are you doing here ? "
instance(s,say-01)
instance(i,i)
instance(c,contrast-01)
instance(b2,be-located-at-91)
instance(y2,you)
instance(h2,here)
instance(c2,cause-01)
instance(a,amr-unknown)
instance(h,he)
instance(p,possible-01)
instance(s2,speak-01)
instance(a2,at-last)
ARG0(s,i)
ARG1(s,c)
ARG2(c,b2)
ARG1(b2,y2)
ARG2(b2,h2)
ARG1-of(b2,c2)
ARG0(c2,a)
ARG2(c2,h)
time(c2,p)
ARG1(p,s2)
ARG0(s2,i)
time(i,a2)

# ::snt And in answer he repeated , very slowly , as if he were speaking of a matter of great consequence : " If you please -- draw me a sheep ... "
instance(a,and)
instance(r,repeat-01)
instance(h,he)
instance(d,draw-01)
instance(y2,you)
instance(s3,sheep)
instance(i,i)
instance(a2,answer-01)
instance(s,slow-05)
instance(v,very)
instance(s2,speak-01)
instance(m,matter)
instance(c,consequential-01)
instance(g,great)
op2(a,r)
ARG0(r,h)
ARG1(r,d)
ARG0(d,y2)
ARG1(d,s3)
ARG2(d,i)
purpose(d,a2)
ARG0(a2,h)
ARG1-of(a2,s)
degree(s,v)
conj-as-if(s,s2)
ARG0(s2,h)
ARG1(h,m)
ARG1-of(m,c)
degree(c,g)

# ::snt When a mystery is too overpowering , one dare not disobey .
instance(d,dare-01)
instance(o,one)
instance(d2,disobey-01)
instance(h,have-quant-91)
instance(o2,overpower-01)
instance(m,mystery)
instance(t,too)
ARG0(d,o)
ARG2(d,d2)
ARG0(d2,o)
condition(d2,h)
ARG1(h,o2)
ARG0(o2,m)
ARG3(o2,t)

# ::snt Absurd as it might seem to me , a thousand miles from any human habitation and in danger of death , I took out of my pocket a sheet of paper and my fountain - pen .
instance(t,take-01)
instance(i,i)
instance(r,relative-position)
instance(p5,place)
instance(a3,any)
instance(i2,inhabit-01)
instance(h,human)
instance(d,distance-quantity)
instance(m,mile)
instance(a2,away)
instance(e,endanger-01)
instance(d2,die-01)
instance(a,and)
instance(p,paper)
instance(s,sheet)
instance(p2,pen)
instance(f,fountain)
instance(p3,pocket)
instance(p4,possible-01)
instance(s2,seem-01)
instance(a4,absurd)
ARG0(t,i)
location(i,r)
op1(r,p5)
mod(p5,a3)
ARG1-of(p5,i2)
ARG0(i2,h)
quant(i2,d)
unit(d,m)
direction(d,a2)
ARG1-of(d,e)
ARG0(e,d2)
ARG1(d2,i)
ARG1(d2,a)
op1(a,p)
quant(p,s)
op2(p,p2)
mod(p2,f)
poss(p2,i)
ARG2(p2,p3)
poss(p3,i)
concession(p3,p4)
ARG1(p4,s2)
ARG1(s2,a4)
ARG2(s2,i)

# ::snt But then I remembered how my studies had been concentrated on geography , history , arithmetic , and grammar , and I told the little chap ( a little crossly , too ) that I did not know how to draw .
instance(c4,contrast-01)
instance(a,and)
instance(r,remember-01)
instance(i,i)
instance(c,concentrate-01)
instance(a2,and)
instance(g,geography)
instance(h,history)
instance(a3,arithmetic)
instance(g2,grammar)
instance(s,study-01)
instance(t,then)
instance(t2,tell-01)
instance(k,know-03)
instance(d,draw-01)
instance(c2,chap)
instance(l,little)
instance(c3,cross)
instance(l2,little)
instance(a4,also)
ARG2(c4,a)
op1(a,r)
ARG0(r,i)
ARG1(r,c)
ARG1(c,a2)
op1(a2,g)
op2(a2,h)
op3(a2,a3)
op4(a2,g2)
ARG2(a2,s)
ARG0(s,i)
time(s,t)
op2(s,t2)
ARG0(t2,i)
ARG1(i,k)
ARG0(k,i)
ARG1(i,d)
ARG0(d,i)
ARG2(d,c2)
mod(c2,l)
manner(c2,c3)
mod(c3,l2)
mod(c3,a4)

# ::snt He answered me : " That does n't matter .
instance(a,answer-01)
instance(h,he)
instance(i,i)
instance(m2,matter-01)
instance(t,that)
instance(-,-)
ARG0(a,h)
ARG1(a,i)
ARG2(a,m2)
ARG1(m2,t)
polarity(m2,-)

# ::snt Draw me a sheep ... "
instance(d,draw-01)
instance(y,you)
instance(s,sheep)
instance(i,i)
instance(imperative,imperative)
ARG0(d,y)
ARG1(d,s)
ARG2(d,i)
mode(d,imperative)

# ::snt But I had never drawn a sheep .
instance(c,contrast-01)
instance(d,draw-01)
instance(i,i)
instance(s,sheep)
instance(e,ever)
instance(-,-)
ARG2(c,d)
ARG0(d,i)
ARG1(d,s)
time(d,e)
polarity(d,-)

# ::snt So I drew for him one of the two pictures I had drawn so often .
instance(c,cause-01)
instance(d,draw-01)
instance(i,i)
instance(p,picture)
instance(1,1)
instance(i2,include-91)
instance(p2,picture)
instance(2,2)
instance(d2,draw-01)
instance(o,often)
instance(s,so)
instance(h,he)
ARG1(c,d)
ARG0(d,i)
ARG1(d,p)
quant(p,1)
ARG1-of(1,i2)
ARG2(i2,p2)
quant(p2,2)
ARG1-of(2,d2)
ARG0(d2,i)
time(i,o)
degree(o,s)
ARG2(o,h)

# ::snt It was that of the boa constrictor from the outside .
instance(b,boa)
instance(c2,constrictor)
instance(f,from)
instance(o,outside)
mod(b,c2)
direction(b,f)
op1(f,o)

# ::snt And I was astounded to hear the little fellow greet it with , " No , no , no !
instance(a,and)
instance(a2,astound-01)
instance(h,hear-01)
instance(i,i)
instance(g,greet-01)
instance(f,f)
instance(i2,it)
instance(a3,and)
instance(n,no)
instance(n2,no)
instance(n3,no)
instance(f,fellow)
instance(l,little)
instance(i,i)
op2(a,a2)
ARG0(a2,h)
ARG0(h,i)
ARG1(i,g)
ARG0(g,f)
ARG1(f,i2)
ARG3(f,a3)
op1(a3,n)
op2(a3,n2)
op3(a3,n3)
ARG2(a3,f)
mod(f,l)
ARG1(f,i)

# ::snt I do not want an elephant inside a boa constrictor .
instance(w,want-01)
instance(i,i)
instance(e,elephant)
instance(i2,inside)
instance(b2,boa)
instance(c2,constrictor)
instance(-,-)
ARG0(w,i)
ARG1(w,e)
location(e,i2)
op1(i2,b2)
mod(b2,c2)
polarity(b2,-)

# ::snt A boa constrictor is a very dangerous creature , and an elephant is very cumbersome .
instance(a,and)
instance(c2,creature)
instance(d2,dangerous)
instance(b,boa)
instance(c,constrictor)
instance(c3,cumbersome)
instance(v2,very)
instance(e,elephant)
op1(a,c2)
mod(c2,d2)
domain(c2,b)
mod(b,c)
op2(b,c3)
degree(c3,v2)
domain(c3,e)

# ::snt Where I live , everything is very small .
instance(s,small)
instance(v,very)
instance(e,everything)
instance(l2,live-01)
instance(i,i)
degree(s,v)
domain(s,e)
location(s,l2)
ARG0(l2,i)

# ::snt What I need is a sheep .
instance(n,need-01)
instance(i,i)
instance(s,sheep)
ARG0(n,i)
ARG1(n,s)

# ::snt Draw me a sheep . "
instance(d,draw-01)
instance(y,you)
instance(s,sheep)
instance(i,i)
instance(imperative,imperative)
ARG0(d,y)
ARG1(d,s)
ARG2(d,i)
mode(d,imperative)

# ::snt So then I made a drawing .
instance(c,cause-01)
instance(d,draw-01)
instance(i,i)
instance(t2,then)
ARG1(c,d)
ARG0(d,i)
time(d,t2)

# ::snt He looked at it carefully , then he said : " No .
instance(a,and)
instance(l,look-01)
instance(h,he)
instance(i,it)
instance(c,careful)
instance(s,say-01)
instance(n,no)
instance(t,then)
op1(a,l)
ARG0(l,h)
ARG1(l,i)
manner(l,c)
op2(l,s)
ARG0(s,h)
ARG1(h,n)
time(h,t)

# ::snt This sheep is already very sickly .
instance(s2,sick-05)
instance(s,sheep)
instance(t,this)
instance(v,very)
instance(a,already)
ARG1(s2,s)
mod(s,t)
degree(s,v)
time(s,a)

# ::snt Make me another . "
instance(m,make-01)
instance(y,you)
instance(a,another)
instance(i,i)
instance(imperative,imperative)
ARG0(m,y)
ARG1(m,a)
ARG3(m,i)
mode(m,imperative)

# ::snt So I made another drawing .
instance(c,cause-01)
instance(m,make-01)
instance(i,i)
instance(p,picture)
instance(d,draw-01)
instance(a,another)
ARG1(c,m)
ARG0(m,i)
ARG1(m,p)
ARG1-of(p,d)
ARG0(d,i)
mod(d,a)

# ::snt My friend smiled gently and indulgently .
instance(s,smile-01)
instance(p,person)
instance(h,have-rel-role-91)
instance(i,i)
instance(f,friend)
instance(g,gentle)
instance(i2,indulgent)
ARG0(s,p)
ARG0-of(p,h)
ARG1(h,i)
ARG2(h,f)
manner(h,g)
manner(h,i2)

# ::snt " You see yourself , " he said , " that this is not a sheep .
instance(s,say-01)
instance(h,he)
instance(s2,see-01)
instance(y,you)
instance(s4,sheep)
instance(t2,this)
instance(-,-)
ARG0(s,h)
ARG1(s,s2)
ARG0(s2,y)
ARG1(s2,s4)
domain(s4,t2)
polarity(s4,-)

# ::snt This is a ram .
instance(r2,ram)
instance(t2,this)
domain(r2,t2)

# ::snt It has horns . "
instance(h,have-03)
instance(i,it)
instance(h2,horn)
ARG0(h,i)
ARG1(h,h2)

# ::snt So then I did my drawing over once more .
instance(c,cause-01)
instance(d,do-02)
instance(i,i)
instance(p,picture)
instance(d2,draw-01)
instance(o,over)
instance(a,again)
instance(o2,once)
instance(t2,then)
ARG1(c,d)
ARG0(d,i)
ARG1(d,p)
ARG1-of(p,d2)
ARG0(d2,i)
mod(d2,o)
mod(d2,a)
mod(a,o2)
time(a,t2)

# ::snt But it was rejected too , just like the others .
instance(c,contrast-01)
instance(r,reject-01)
instance(i,it)
instance(r2,resemble-01)
instance(o,other)
instance(t,too)
ARG1(c,r)
ARG1(r,i)
ARG1-of(r,r2)
ARG2(r2,o)
mod(r2,t)

# ::snt " This one is too old .
instance(h,have-degree-91)
instance(o,one)
instance(t,this)
instance(o2,old)
instance(t2,too)
ARG1(h,o)
mod(o,t)
ARG2(o,o2)
ARG3(o,t2)

# ::snt I want a sheep that will live a long time . "
instance(w,want-01)
instance(i,i)
instance(s,sheep)
instance(l,live-01)
instance(l2,long-03)
ARG0(w,i)
ARG1(w,s)
ARG0-of(s,l)
ARG1-of(l,l2)

# ::snt By this time my patience was exhausted , because I was in a hurry to start taking my engine apart .
instance(e,exhaust-01)
instance(p,patient-01)
instance(i,i)
instance(c,cause-01)
instance(h,hurry-01)
instance(s,start-01)
instance(d,disassemble-01)
instance(e2,engine)
instance(b,by)
instance(t,time)
instance(t2,this)
ARG1(e,p)
ARG1(p,i)
ARG1-of(p,c)
ARG0(c,h)
ARG1(h,i)
ARG2(i,s)
ARG0(s,i)
ARG1(i,d)
ARG0(d,i)
ARG1(i,e2)
poss(e2,i)
time(e2,b)
op1(b,t)
mod(t,t2)

# ::snt So I tossed off this drawing .
instance(c,cause-01)
instance(t,toss-out-02)
instance(i,i)
instance(p,picture)
instance(d,draw-01)
instance(t3,this)
instance(o,off)
ARG1(c,t)
ARG0(t,i)
ARG1(t,p)
ARG1-of(p,d)
ARG0(d,i)
mod(d,t3)
direction(d,o)

# ::snt And I threw out an explanation with it .
instance(a,and)
instance(e,explain-01)
instance(i,i)
instance(i3,it)
op2(a,e)
ARG0(e,i)
ARG1(e,i3)

# ::snt " This is only his box .
instance(b,box)
instance(h,he)
instance(t,this)
instance(o,only)
poss(b,h)
domain(b,t)
mod(b,o)

# ::snt The sheep you asked for is inside . "
instance(b,be-located-at-91)
instance(s2,sheep)
instance(a,ask-01)
instance(y,you)
instance(i2,inside)
ARG1(b,s2)
ARG1-of(s2,a)
ARG0(a,y)
ARG2(a,i2)

# ::snt I was very surprised to see a light break over the face of my young judge : " That is exactly the way I wanted it !
instance(a,and)
instance(s,surprise-01)
instance(s2,see-01)
instance(i,i)
instance(b,break-13)
instance(l,light)
instance(o,over)
instance(f,face)
instance(p,person)
instance(j,judge-01)
instance(y,young)
instance(i,i)
instance(v,very)
instance(s3,say-01)
instance(w,way)
instance(e,exact)
instance(w2,want-01)
instance(i2,it)
op1(a,s)
ARG0(s,s2)
ARG0(s2,i)
ARG1(i,b)
ARG1(b,l)
location(b,o)
op1(o,f)
part-of(f,p)
ARG0-of(p,j)
poss(p,i)
mod(i,y)
ARG1(i,i)
degree(i,v)
op2(i,s3)
ARG1(s3,w)
mod(w,e)
domain(w,w2)
ARG0(w2,p)
ARG1(p,i2)

# ::snt Do you think that this sheep will have to have a great deal of grass ? "
instance(t,think-01)
instance(y,you)
instance(o,obligate-01)
instance(h,have-03)
instance(s,sheep)
instance(t2,this)
instance(g,grass)
instance(d,deal)
instance(g2,great)
instance(a,amr-unknown)
ARG0(t,y)
ARG1(t,o)
ARG2(o,h)
ARG0(h,s)
mod(s,t2)
ARG1(s,g)
quant(g,d)
mod(d,g2)
polarity(d,a)

# ::snt " Why ? "
instance(c,cause-01)
instance(a,amr-unknown)
ARG0(c,a)

# ::snt " Because where I live everything is very small ... "
instance(c,cause-01)
instance(s,small)
instance(v,very)
instance(e,everything)
instance(l,live-01)
instance(i,i)
ARG0(c,s)
degree(s,v)
domain(s,e)
location(e,l)
ARG0(l,i)

# ::snt " There will surely be enough grass for him , "
instance(h,have-quant-91)
instance(g,grass)
instance(e,enough)
instance(s,sure-02)
instance(h2,he)
ARG1(h,g)
ARG3(h,e)
ARG1-of(e,s)
ARG6(e,h2)

# ::snt I said .
instance(s,say-01)
instance(i,i)
ARG0(s,i)

# ::snt " It is a very small sheep that I have given you . "
instance(g,give-01)
instance(i,i)
instance(s,sheep)
instance(s2,small)
instance(v,very)
instance(y,you)
ARG0(g,i)
ARG1(g,s)
mod(s,s2)
degree(s2,v)
ARG2(s2,y)

# ::snt He bent his head over the drawing : " Not so small that -- Look !
instance(a,and)
instance(b,bend-01)
instance(h2,head)
instance(o,over)
instance(p,picture)
instance(d,draw-01)
instance(h3,h3)
instance(s,say-01)
instance(h3,he)
instance(l,look-01)
instance(y,you)
instance(s2,small)
instance(s3,so)
instance(t2,that)
op1(a,b)
ARG1(b,h2)
location(h2,o)
op1(o,p)
ARG1-of(p,d)
part-of(p,h3)
op2(p,s)
ARG0(s,h3)
ARG1(s,l)
ARG0(l,y)
ARG1(l,s2)
degree(s2,s3)
domain(s2,t2)

# ::snt He has gone to sleep ... "
instance(s,sleep-01)
instance(h,he)
ARG0(s,h)

# ::snt And that is how I made the acquaintance of the little prince .
instance(a,and)
instance(a2,acquaint-01)
instance(i,i)
instance(p,prince)
instance(l,little)
instance(t,that)
op2(a,a2)
ARG1(a2,i)
ARG2(a2,p)
mod(p,l)
manner(p,t)

# ::snt Chapter 3 .
instance(c2,chapter)
instance(3,3)
mod(c2,3)

# ::snt It took me a long time to learn where he came from .
instance(t2,take-10)
instance(t,temporal-quantity)
instance(l,long-03)
instance(l2,learn-01)
instance(i,i)
instance(p,place)
instance(c,come-01)
instance(h,he)
ARG1(t2,t)
ARG2-of(t,l)
ARG1(l,l2)
ARG0(l2,i)
ARG1(l2,p)
ARG3-of(p,c)
ARG1(c,h)

# ::snt The little prince , who asked me so many questions , never seemed to hear the ones I asked him .
instance(s,seem-01)
instance(h,hear-01)
instance(p,prince)
instance(l,little)
instance(q,question-01)
instance(i,i)
instance(m,many)
instance(s2,so)
instance(o,one)
instance(a2,ask-01)
instance(e2,ever)
ARG1(s,h)
ARG0(h,p)
mod(p,l)
ARG0-of(p,q)
ARG2(q,i)
quant(q,m)
degree(m,s2)
ARG1(m,o)
ARG1-of(o,a2)
ARG0(a2,i)
ARG2(i,p)
time(i,e2)

# ::snt It was from words dropped by chance that , little by little , everything was revealed to me .
instance(r,reveal-01)
instance(w,word)
instance(d,drop-06)
instance(c,chance-02)
instance(e,everything)
instance(i,i)
instance(l,little-by-little)
ARG0(r,w)
ARG1-of(w,d)
ARG1-of(d,c)
ARG1(d,e)
ARG2(d,i)
manner(d,l)

# ::snt The first time he saw my airplane , for instance ( I shall not draw my airplane ; that would be much too complicated for me ) , he asked me : " What is that object ? "
instance(a4,and)
instance(a,ask-01)
instance(h,he)
instance(o,object)
instance(t,that)
instance(a2,amr-unknown)
instance(i,i)
instance(s,see-01)
instance(a3,airplane)
instance(o2,ordinal-entity)
instance(h2,have-polarity-91)
instance(d,draw-01)
instance(h3,have-degree-91)
instance(c2,complicate-01)
instance(t3,too)
instance(m,much)
instance(-,-)
op1(a4,a)
ARG0(a,h)
ARG1(a,o)
mod(o,t)
domain(o,a2)
ARG2(o,i)
time(o,s)
ARG0(s,h)
ARG1(h,a3)
poss(a3,i)
ord(a3,o2)
op2(a3,h2)
ARG1(h2,d)
ARG0(d,i)
ARG1(i,a3)
ARG1-of(a3,h3)
ARG2(h3,c2)
ARG1(c2,d)
ARG2(d,i)
ARG3(d,t3)
quant(t3,m)
ARG2(t3,-)

# ::snt " That is not an object .
instance(o,object)
instance(t,that)
instance(-,-)
domain(o,t)
polarity(o,-)

# ::snt It flies .
instance(f,fly-01)
instance(i,it)
ARG1(f,i)

# ::snt It is an airplane .
instance(a,airplane)
instance(i,it)
domain(a,i)

# ::snt It is my airplane . "
instance(a2,airplane)
instance(i2,i)
instance(i,it)
poss(a2,i2)
domain(a2,i)

# ::snt And I was proud to have him learn that I could fly .
instance(a,and)
instance(p,pride-01)
instance(i,i)
instance(l,learn-01)
instance(h2,he)
instance(p2,possible-01)
instance(f,fly-01)
op2(a,p)
ARG0(p,i)
ARG2(p,l)
ARG0(l,h2)
ARG1(l,p2)
ARG1(p2,f)
ARG1(f,i)

# ::snt He cried out , then : " What !
instance(c,cry-out-03)
instance(h,he)
instance(s,string-entity)
instance(t,then)
ARG0(c,h)
ARG1(c,s)
time(c,t)

# ::snt You dropped down from the sky ? "
instance(d,drop-01)
instance(y,you)
instance(s,sky)
instance(d2,down)
instance(a,amr-unknown)
ARG1(d,y)
ARG3(d,s)
direction(d,d2)
polarity(d,a)

# ::snt " Yes , "
instance(y2,yes)

# ::snt I answered , modestly .
instance(a,answer-01)
instance(i,i)
instance(m,modest)
ARG0(a,i)
manner(a,m)

# ::snt " Oh !
instance(o,oh)

# ::snt That is funny ! "
instance(f2,funny)
instance(t2,that)
domain(f2,t2)

# ::snt And the little prince broke into a lovely peal of laughter , which irritated me very much .
instance(a,and)
instance(b,break-in-17)
instance(p,prince)
instance(l,little)
instance(l2,laugh-01)
instance(p2,peal)
instance(l3,lovely)
instance(i,irritate-01)
instance(i2,i)
instance(m,much)
instance(v,very)
op2(a,b)
ARG0(b,p)
mod(p,l)
ARG1(p,l2)
quant(l2,p2)
mod(p2,l3)
ARG0-of(p2,i)
ARG1(i,i2)
degree(i,m)
degree(m,v)

# ::snt I like my misfortunes to be taken seriously .
instance(l,like-02)
instance(i,i)
instance(t,take-04)
instance(m,misfortune)
instance(s,serious-01)
ARG0(l,i)
ARG1(l,t)
ARG1(t,m)
poss(m,i)
manner(m,s)

# ::snt Then he added : " So you , too , come from the sky !
instance(a,add-01)
instance(h,he)
instance(c2,cause-01)
instance(c,come-01)
instance(y,you)
instance(s2,sky)
instance(t2,too)
instance(t,then)
ARG0(a,h)
ARG1(a,c2)
ARG1(c2,c)
ARG1(c,y)
ARG3(c,s2)
mod(c,t2)
time(c,t)

# ::snt Which is your planet ? "
instance(p,planet)
instance(y,you)
instance(a,amr-unknown)
poss(p,y)
domain(p,a)

# ::snt At that moment I caught a gleam of light in the impenetrable mystery of his presence ; and I demanded , abruptly : " Do you come from another planet ? "
instance(a,and)
instance(c,catch-03)
instance(i,i)
instance(g,gleam-01)
instance(l,light)
instance(m,mystery)
instance(p,present-02)
instance(h,he)
instance(p3,penetrate-01)
instance(p2,possible-01)
instance(m2,moment)
instance(t,that)
instance(d,demand-01)
instance(t2,truth-value)
instance(c2,come-01)
instance(y,you)
instance(p4,planet)
instance(a3,another)
instance(a2,abrupt)
op1(a,c)
ARG0(c,i)
ARG1(c,g)
ARG0(g,l)
location(g,m)
domain(m,p)
ARG1(p,h)
ARG1-of(p,p3)
ARG1-of(p3,p2)
time(p3,m2)
mod(m2,t)
op2(m2,d)
ARG0(d,i)
ARG1(i,t2)
polarity-of(t2,c2)
ARG1(c2,y)
ARG3(c2,p4)
mod(p4,a3)
manner(p4,a2)

# ::snt But he did not reply .
instance(c,contrast-01)
instance(r,reply-01)
instance(h,he)
instance(-,-)
ARG2(c,r)
ARG0(r,h)
polarity(r,-)

# ::snt He tossed his head gently , without taking his eyes from my plane : " It is true that on that you can n't have come from very far away ... "
instance(a,and)
instance(t,toss-01)
instance(h,he)
instance(h2,head)
instance(g,gentle)
instance(t2,take-away-05)
instance(e,eye)
instance(p2,plane)
instance(i,i)
instance(s,say-01)
instance(p,possible-01)
instance(c,come-01)
instance(y,you)
instance(a2,away)
instance(f,far)
instance(v,very)
op1(a,t)
ARG0(t,h)
ARG1(t,h2)
part-of(h2,h)
manner(h2,g)
manner(h2,t2)
ARG0(t2,h)
ARG1(h,e)
part-of(e,h)
source(e,p2)
poss(p2,i)
op2(p2,s)
ARG0(s,h)
ARG1(h,p)
ARG1(p,c)
ARG1(c,y)
ARG3(c,a2)
extent(a2,f)
degree(f,v)
manner(f,p2)

# ::snt And he sank into a reverie , which lasted a long time .
instance(a,and)
instance(s,sink-01)
instance(h,he)
instance(r,reverie)
instance(l,long-03)
op2(a,s)
ARG0(s,h)
ARG4(s,r)
ARG1-of(r,l)

# ::snt Then , taking my sheep out of his pocket , he buried himself in the contemplation of his treasure .
instance(b,bury-01)
instance(h,he)
instance(c,contemplate-01)
instance(t,treasure)
instance(t2,take-01)
instance(s,sheep)
instance(i,i)
instance(p,pocket)
instance(t3,then)
ARG0(b,h)
ARG1(b,h)
ARG2(h,c)
ARG0(c,h)
ARG1(h,t)
poss(t,h)
time(t,t2)
ARG0(t2,h)
ARG1(h,s)
poss(s,i)
ARG2(s,p)
poss(p,h)
time(p,t3)

# ::snt You can imagine how my curiosity was aroused by this half - confidence about the " other planets . "
instance(p,possible-01)
instance(i2,imagine-01)
instance(y,you)
instance(a,arouse-01)
instance(c4,confidence)
instance(h2,half)
instance(p3,planet)
instance(o2,other)
instance(h,he)
instance(c,curious-01)
instance(i,i)
ARG1(p,i2)
ARG0(i2,y)
ARG1(i2,a)
ARG0(a,c4)
degree(c4,h2)
topic(c4,p3)
mod(p3,o2)
poss(p3,h)
ARG1(p3,c)
ARG1(c,i)

# ::snt I made a great effort , therefore , to find out more on this subject .
instance(c,cause-01)
instance(e,effort-01)
instance(i,i)
instance(f,find-out-03)
instance(i2,information)
instance(m2,more)
instance(s,subject)
instance(t2,this)
instance(g,great)
ARG1(c,e)
ARG0(e,i)
ARG1(e,f)
ARG0(f,i)
ARG1(i,i2)
quant(i2,m2)
topic(i2,s)
mod(s,t2)
mod(s,g)

# ::snt " My little man , where do you come from ?
instance(s,say-01)
instance(c,come-01)
instance(y,you)
instance(a,amr-unknown)
instance(m,man)
instance(l,little)
instance(i,i)
ARG1(s,c)
ARG1(c,y)
ARG3(c,a)
ARG2(c,m)
mod(m,l)
poss(m,i)

# ::snt What is this ' where I live , ' of which you speak ?
instance(l,live-01)
instance(y,you)
instance(p,place)
instance(s,speak-01)
instance(a,amr-unknown)
ARG0(l,y)
location(l,p)
ARG1-of(p,s)
ARG0(s,y)
domain(s,a)

# ::snt Where do you want to take your sheep ? "
instance(w,want-01)
instance(y,you)
instance(t,take-01)
instance(s,sheep)
instance(a,amr-unknown)
ARG0(w,y)
ARG1(w,t)
ARG0(t,y)
ARG1(y,s)
poss(s,y)
ARG3(s,a)

# ::snt After a reflective silence he answered : " The thing that is so good about the box you have given me is that at night he can use it as his house . "
instance(a,answer-01)
instance(h,he)
instance(h4,have-degree-91)
instance(b,box)
instance(g2,give-01)
instance(y,you)
instance(g,good-02)
instance(s2,so)
instance(p,possible-01)
instance(u,use-01)
instance(h2,he)
instance(h3,house)
instance(d,date-entity)
instance(n,night)
instance(a2,after)
instance(s,silent)
instance(r,reflect-02)
ARG0(a,h)
ARG1(a,h4)
ARG1(h4,b)
ARG1-of(b,g2)
ARG0(g2,y)
ARG2(g2,h)
ARG2(g2,g)
ARG1(g,b)
ARG3(g,s2)
ARG6(g,p)
ARG1(p,u)
ARG0(u,h2)
ARG1(u,b)
ARG2(b,h3)
poss(h3,h2)
time(h3,d)
dayperiod(d,n)
time(d,a2)
op1(a2,s)
mod(s,r)

# ::snt " That is so .
instance(s,so)
instance(t,that)
domain(s,t)

# ::snt And if you are good I will give you a string , too , so that you can tie him during the day , and a post to tie him to . "
instance(a,and)
instance(g,give-01)
instance(i,i)
instance(a2,and)
instance(s,string)
instance(t,tie-01)
instance(y,y)
instance(h,he)
instance(d,date-entity)
instance(d2,day)
instance(p2,post)
instance(t3,tie-01)
instance(y,you)
instance(g2,good-02)
op2(a,g)
ARG0(g,i)
ARG1(g,a2)
op1(a2,s)
ARG3-of(s,t)
ARG0(t,y)
ARG1(y,h)
time(y,d)
dayperiod(d,d2)
op2(d,p2)
purpose(p2,t3)
ARG0(t3,y)
ARG1(y,h)
ARG2(y,y)
condition(y,g2)
ARG1(g2,y)

# ::snt But the little prince seemed shocked by this offer : " Tie him !
instance(c,contrast-01)
instance(s,seem-01)
instance(s2,shock-01)
instance(o,offer)
instance(t,this)
instance(p,prince)
instance(l,little)
instance(s3,say-01)
instance(t2,tie-01)
instance(h,he)
ARG2(c,s)
ARG1(s,s2)
ARG0(s2,o)
mod(o,t)
ARG1(o,p)
mod(p,l)
ARG0-of(p,s3)
ARG1(s3,t2)
ARG0(t2,p)
ARG1(p,h)

# ::snt What a queer idea ! "
instance(q,queer)
instance(i,idea)
domain(q,i)

# ::snt " But if you do n't tie him , "
instance(c,contrast-01)
instance(t,tie-01)
instance(y,you)
instance(h,he)
instance(t2,thing)
ARG2(c,t)
ARG0(t,y)
ARG1(t,h)
condition-of(t,t2)

# ::snt I said , " he will wander off somewhere , and get lost . "
instance(s,say-01)
instance(i,i)
instance(a,and)
instance(w,wander-01)
instance(h,he)
instance(s2,somewhere)
instance(g,get-03)
instance(l,lost)
ARG0(s,i)
ARG1(s,a)
op1(a,w)
ARG0(w,h)
ARG1(w,s2)
op2(w,g)
ARG1(g,h)
ARG2(h,l)

# ::snt My friend broke into another peal of laughter : " But where do you think he would go ? "
instance(b,break-in-17)
instance(p2,person)
instance(h2,have-rel-role-91)
instance(i,i)
instance(f,friend)
instance(s,say-01)
instance(c,contrast-01)
instance(t,think-01)
instance(y,you)
instance(g,go-02)
instance(h,he)
instance(a2,amr-unknown)
instance(l,laugh-01)
instance(p,peal)
instance(a,another)
ARG0(b,p2)
ARG0-of(p2,h2)
ARG1(h2,i)
ARG2(h2,f)
ARG0-of(h2,s)
ARG1(s,c)
ARG2(c,t)
ARG0(t,y)
ARG1(t,g)
ARG0(g,h)
ARG4(g,a2)
ARG1(g,l)
quant(l,p)
mod(p,a)

# ::snt " Anywhere .
instance(a,anywhere)

# ::snt Straight ahead of him . "
instance(a,ahead)
instance(h,he)
instance(s,straight-04)
op1(a,h)
ARG1-of(a,s)

# ::snt Then the little prince said , earnestly : " That does n't matter .
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(m,matter-01)
instance(t2,that)
instance(e,earnest-01)
instance(t,then)
ARG0(s,p)
mod(p,l)
ARG1(p,m)
ARG1(m,t2)
manner(m,e)
time(m,t)

# ::snt Where I live , everything is so small ! "
instance(s,small)
instance(s2,so)
instance(e,everything)
instance(l,live-01)
instance(i,i)
degree(s,s2)
domain(s,e)
location(e,l)
ARG0(l,i)

# ::snt And , with perhaps a hint of sadness , he added : " Straight ahead of him , nobody can go very far ... "
instance(a,and)
instance(a2,add-01)
instance(h,he)
instance(g,go-02)
instance(s2,somebody)
instance(f,far)
instance(v,very)
instance(a3,ahead)
instance(s3,straight-04)
instance(s,sad-02)
instance(h2,hint)
instance(p,possible-01)
op2(a,a2)
ARG0(a2,h)
ARG1(a2,g)
ARG0(g,s2)
ARG4(g,f)
degree(f,v)
direction(f,a3)
op1(a3,s2)
ARG1-of(s2,s3)
manner(s2,s)
quant(s,h2)
ARG1-of(s,p)

# ::snt Chapter 4 .
instance(c,chapter)
instance(4,4)
mod(c,4)

# ::snt I had thus learned a second fact of great importance : this was that the planet the little prince came from was scarcely any larger than a house !
instance(c2,cause-01)
instance(l,learn-01)
instance(i,i)
instance(f,fact)
instance(o,ordinal-entity)
instance(i2,important-01)
instance(g,great)
instance(h2,have-degree-91)
instance(p,planet)
instance(c,come-01)
instance(p2,prince)
instance(l3,little)
instance(l2,large)
instance(m,more)
instance(s2,scarce)
instance(h,house)
ARG1(c2,l)
ARG0(l,i)
ARG1(l,f)
ord(f,o)
ARG1-of(f,i2)
degree(i2,g)
domain(i2,h2)
ARG1(h2,p)
ARG3-of(p,c)
ARG1(c,p2)
mod(p2,l3)
ARG2(p2,l2)
ARG3(p2,m)
quant(m,s2)
ARG4(m,h)

# ::snt But that did not really surprise me much .
instance(c,contrast-01)
instance(s,surprise-01)
instance(t,that)
instance(i,i)
instance(m,much)
instance(r,real-04)
ARG2(c,s)
ARG0(s,t)
ARG1(s,i)
degree(s,m)
ARG1-of(s,r)

# ::snt I knew very well that in addition to the great planets -- such as the Earth , Jupiter , Mars , Venus -- to which we have given names , there are also hundreds of others , some of which are so small that one has a hard time seeing them through the telescope .
instance(k,know-01)
instance(i,i)
instance(e,exist-01)
instance(a2,and)
instance(p,planet)
instance(g,great)
instance(p2,planet)
instance(p3,planet)
instance(p4,planet)
instance(p5,planet)
instance(n5,name-01)
instance(w3,we)
instance(p7,planet)
instance(i2,include-91)
instance(p6,planet)
instance(h,have-degree-91)
instance(s2,small)
instance(s3,so)
instance(d,difficult)
instance(s4,see-01)
instance(t,telescope)
instance(o,other)
instance(m,multiple)
instance(a,also)
instance(w,well)
instance(v,very)
ARG0(k,i)
ARG1(k,e)
ARG1(e,a2)
op1(a2,p)
mod(p,g)
example(p,p2)
example(p,p3)
example(p,p4)
example(p,p5)
ARG1-of(p,n5)
ARG0(n5,w3)
op2(n5,p7)
ARG2-of(p7,i2)
ARG1(i2,p6)
ARG1-of(p6,h)
ARG2(h,s2)
ARG3(h,s3)
ARG6(h,d)
domain(d,s4)
ARG1(s4,p6)
instrument(p6,t)
mod(p6,o)
quant(p6,m)
mod(p6,a)
mod(p6,w)
degree(w,v)

# ::snt When an astronomer discovers one of these he does not give it a name , but only a number .
instance(g,give-01)
instance(a,astronomer)
instance(n2,number)
instance(t,thing)
instance(i,include-91)
instance(t2,this)
instance(o2,only)
instance(d,discover-01)
instance(i2,instead-of-91)
instance(n3,name-01)
ARG0(g,a)
ARG1(g,n2)
ARG2(g,t)
ARG1-of(t,i)
ARG2(i,t2)
mod(i,o2)
time(i,d)
ARG0(d,a)
ARG1(a,t)
ARG1-of(a,i2)
ARG2(i2,n3)
ARG0(n3,a)
ARG1(a,t)

# ::snt He might call it , for example , " Asteroid 325 . "
instance(p,possible-01)
instance(c,call-01)
instance(h,he)
instance(i,it)
instance(n2,name)
instance(e,exemplify-01)
ARG1(p,c)
ARG0(c,h)
ARG1(c,i)
ARG2(c,n2)
ARG0-of(c,e)

# ::snt I have serious reason to believe that the planet from which the little prince came is the asteroid known as B-612 .
instance(c,cause-01)
instance(r,reason)
instance(s,serious-02)
instance(b,believe-01)
instance(i,i)
instance(c2,come-01)
instance(p2,prince)
instance(l,little)
instance(a,asteroid)
instance(p,planet)
ARG0(c,r)
ARG1-of(r,s)
ARG1(r,b)
ARG0(b,i)
ARG1(b,c2)
ARG1(c2,p2)
mod(p2,l)
ARG3(p2,a)
domain(p2,p)

# ::snt This asteroid has only once been seen through the telescope .
instance(s,see-01)
instance(a,asteroid)
instance(t,this)
instance(t2,telescope)
instance(h,have-frequency-91)
instance(1,1)
instance(o,only)
ARG1(s,a)
mod(a,t)
instrument(a,t2)
ARG1-of(a,h)
ARG2(h,1)
mod(1,o)

# ::snt That was by a Turkish astronomer , in 1909 .
instance(s,see-01)
instance(a,astronomer)
instance(c,country)
instance(n,name)
instance(d,date-entity)
ARG0(s,a)
mod(a,c)
name(c,n)
time(c,d)

# ::snt On making his discovery , the astronomer had presented it to the International Astronomical Congress , in a great demonstration .
instance(p,present-01)
instance(a,a)
instance(i,it)
instance(o,organization)
instance(d2,demonstrate-01)
instance(g,great)
instance(d3,discover-01)
instance(a,astronomer)
ARG0(p,a)
ARG1(a,i)
ARG2(a,o)
manner(a,d2)
ARG0(d2,a)
mod(a,g)
time(a,d3)
ARG0(d3,a)

# ::snt But he was in Turkish costume , and so nobody would believe what he said .
instance(c4,contrast-01)
instance(c,costume-01)
instance(h,he)
instance(c2,country)
instance(n,name)
instance(c3,cause-01)
instance(b2,believe-01)
instance(s,somebody)
instance(t,thing)
instance(s2,say-01)
ARG2(c4,c)
ARG1(c,h)
manner(c,c2)
name(c2,n)
ARG0-of(c2,c3)
ARG1(c3,b2)
ARG0(b2,s)
ARG1(b2,t)
ARG1-of(t,s2)
ARG0(s2,h)

# ::snt Grown - ups are like that ...
instance(r,resemble-01)
instance(g,grown-up)
instance(t,that)
ARG1(r,g)
ARG2(r,t)

# ::snt Fortunately , however , for the reputation of Asteroid B-612 , a Turkish dictator made a law that his subjects , under pain of death , should change to European costume .
instance(c5,contrast-01)
instance(m,make-01)
instance(p3,person)
instance(h,have-org-role-91)
instance(c,country)
instance(d,dictator)
instance(l,law)
instance(c2,change-01)
instance(s,subject)
instance(c3,costume)
instance(c4,continent)
instance(t,threaten-01)
instance(p,penalize-01)
instance(d2,die-01)
instance(f,fortunate-01)
instance(r,reputation)
instance(p2,planet)
ARG2(c5,m)
ARG0(m,p3)
ARG0-of(p3,h)
ARG1(h,c)
ARG2(h,d)
ARG1(h,l)
topic(l,c2)
ARG0(c2,s)
poss(s,p3)
ARG3(s,c3)
mod(c3,c4)
manner(c3,t)
ARG0(t,d)
ARG1(d,p)
ARG1(p,s)
topic(s,d2)
ARG1(d2,s)
ARG2(d2,s)
ARG2-of(d2,f)
ARG1(f,r)
poss(r,p2)

# ::snt So in 1920 the astronomer gave his demonstration all over again , dressed with impressive style and elegance .
instance(c,cause-01)
instance(d4,demonstrate-01)
instance(a,astronomer)
instance(d2,dress-01)
instance(a4,and)
instance(s,style)
instance(e,elegance)
instance(i,impress-01)
instance(d3,date-entity)
instance(a3,again)
instance(a2,all-over)
ARG1(c,d4)
ARG0(d4,a)
ARG1-of(a,d2)
ARG2(d2,a4)
op1(a4,s)
op2(a4,e)
ARG0-of(a4,i)
time(a4,d3)
mod(a4,a3)
mod(a3,a2)

# ::snt And this time everybody accepted his report .
instance(a,and)
instance(a2,accept-01)
instance(e,everybody)
instance(t3,thing)
instance(r,report-01)
instance(h2,he)
instance(t,time)
instance(t2,this)
op2(a,a2)
ARG0(a2,e)
ARG1(a2,t3)
ARG1-of(t3,r)
ARG0(r,h2)
time(r,t)
mod(t,t2)

# ::snt If I have told you these details about the asteroid , and made a note of its number for you , it is on account of the grown - ups and their ways .
instance(a,account-01)
instance(a3,a3)
instance(a2,and)
instance(g,grown-up)
instance(w,way)
instance(a3,and)
instance(t,tell-01)
instance(i,i)
instance(d,detail)
instance(t2,this)
instance(a4,asteroid)
instance(y,you)
instance(n3,note-01)
instance(n4,number)
ARG1(a,a3)
ARG2(a3,a2)
op1(a2,g)
op2(a2,w)
poss(w,g)
condition(w,a3)
op1(a3,t)
ARG0(t,i)
ARG1(t,d)
mod(d,t2)
topic(d,a4)
ARG2(d,y)
op2(d,n3)
ARG0(n3,i)
ARG1(i,n4)
poss(n4,a4)
ARG2(n4,y)

# ::snt WHen you tell them that you have made a new friend , they never ask you any questions about essential matters .
instance(q2,question-01)
instance(t,t)
instance(m,matter)
instance(e,essential)
instance(y,you)
instance(t3,tell-01)
instance(m2,make-01)
instance(h,have-rel-role-91)
instance(p,person)
instance(f,friend)
instance(n,new-01)
instance(t,they)
instance(e2,ever)
instance(a2,any)
ARG0(q2,t)
ARG1(t,m)
mod(m,e)
ARG2(m,y)
time(m,t3)
ARG0(t3,y)
ARG1(y,m2)
ARG0(m2,y)
ARG1(y,h)
ARG0(h,p)
ARG1(h,y)
ARG2(y,f)
ARG1-of(y,n)
ARG2(y,t)
time(y,e2)
mod(y,a2)

# ::snt They never say to you , " What does his voice sound like ?
instance(s,say-01)
instance(t,they)
instance(s2,sound-01)
instance(v,voice)
instance(h,he)
instance(a2,amr-unknown)
instance(y,you)
instance(e,ever)
instance(-,-)
ARG0(s,t)
ARG1(s,s2)
ARG1(s2,v)
poss(v,h)
ARG2(v,a2)
ARG2(v,y)
time(v,e)
polarity(v,-)

# ::snt What games does he love best ?
instance(l,love-01)
instance(h,he)
instance(a2,amr-unknown)
instance(g2,game)
instance(h2,have-degree-91)
instance(g,good-02)
instance(m,most)
ARG0(l,h)
ARG1(l,a2)
mod(a2,g2)
ARG1-of(a2,h2)
ARG2(h2,g)
ARG3(h2,m)

# ::snt Does he collect butterflies ? "
instance(c,collect-01)
instance(h,he)
instance(b,butterfly)
instance(a,amr-unknown)
ARG0(c,h)
ARG1(c,b)
polarity(c,a)

# ::snt Instead , they demand : " How old is he ?
instance(d,demand-01)
instance(t,they)
instance(a2,age-01)
instance(h2,he)
instance(a3,amr-unknown)
instance(i2,instead-of-91)
ARG0(d,t)
ARG1(d,a2)
ARG1(a2,h2)
ARG2(a2,a3)
ARG1-of(a2,i2)

# ::snt How many brothers has he ?
instance(h,have-rel-role-91)
instance(p,person)
instance(a,amr-unknown)
instance(h2,he)
instance(b,brother)
ARG0(h,p)
quant(p,a)
ARG1(p,h2)
ARG2(p,b)

# ::snt How much does he weigh ?
instance(w,weigh-01)
instance(h,he)
instance(a,amr-unknown)
ARG1(w,h)
ARG3(w,a)

# ::snt How much money does his father make ? "
instance(m,make-05)
instance(p,person)
instance(h2,have-rel-role-91)
instance(h,he)
instance(f,father)
instance(m2,monetary-quantity)
instance(a,amr-unknown)
ARG0(m,p)
ARG0-of(p,h2)
ARG1(h2,h)
ARG2(h2,f)
ARG1(h2,m2)
quant(m2,a)

# ::snt Only from these figures do they think they have learned anything about him .
instance(t,think-01)
instance(t2,they)
instance(l,learn-01)
instance(a,anything)
instance(h,he)
instance(f,figure)
instance(t3,this)
instance(o,only)
ARG0(t,t2)
ARG1(t,l)
ARG0(l,t2)
ARG1(t2,a)
topic(a,h)
source(a,f)
mod(f,t3)
mod(t3,o)

# ::snt If you were to say to the grown - ups : " I saw a beautiful house made of rosy brick , with geraniums in the windows and doves on the roof , " they would not be able to get any idea of that house at all .
instance(p,possible-01)
instance(g,get-01)
instance(g2,g2)
instance(i,idea)
instance(a,any)
instance(a2,at-all)
instance(h2,h2)
instance(s,say-01)
instance(y,you)
instance(s2,see-01)
instance(h2,house)
instance(m,make-01)
instance(b,brick)
instance(r,rosy)
instance(a4,and)
instance(g3,geranium)
instance(w,window)
instance(d,dove)
instance(r2,roof)
instance(b2,beautiful-02)
instance(g2,grown-up)
ARG1(p,g)
ARG0(g,g2)
ARG1(g2,i)
mod(i,a)
mod(i,a2)
topic(i,h2)
condition(i,s)
ARG0(s,y)
ARG1(s,s2)
ARG0(s2,y)
ARG1(y,h2)
ARG1-of(h2,m)
ARG2(m,b)
mod(b,r)
accompanier(b,a4)
op1(a4,g3)
location(g3,w)
op2(g3,d)
location(d,r2)
ARG1-of(d,b2)
ARG2(d,g2)

# ::snt You would have to say to them : " I saw a house that cost $ 20,000 . "
instance(o,obligate-01)
instance(y,y)
instance(s,say-01)
instance(y,you)
instance(s2,see-01)
instance(h,house)
instance(c,cost-01)
instance(m,monetary-quantity)
instance(d,dollar)
instance(20000,20000)
instance(t,they)
ARG1(o,y)
ARG2(y,s)
ARG0(s,y)
ARG1(s,s2)
ARG0(s2,y)
ARG1(y,h)
ARG1-of(h,c)
ARG2(c,m)
unit(m,d)
quant(m,20000)
ARG2(m,t)

# ::snt Then they would exclaim : " Oh , what a pretty house that is ! "
instance(e,exclaim-01)
instance(t,they)
instance(p2,pretty)
instance(h2,house)
instance(t4,that)
instance(t3,then)
ARG0(e,t)
ARG1(e,p2)
domain(p2,h2)
mod(h2,t4)
time(h2,t3)

# ::snt Just so , you might say to them : " The proof that the little prince existed is that he was charming , that he laughed , and that he was looking for a sheep .
instance(p,possible-01)
instance(s2,say-01)
instance(y,you)
instance(p2,prove-01)
instance(a,and)
instance(c,charm-01)
instance(h,he)
instance(l,laugh-01)
instance(l2,look-01)
instance(s3,sheep)
instance(e,exist-01)
instance(p3,prince)
instance(l3,little)
instance(t,they)
instance(j,just-so)
ARG1(p,s2)
ARG0(s2,y)
ARG1(s2,p2)
ARG0(p2,a)
op1(a,c)
ARG0(c,h)
op2(c,l)
ARG0(l,h)
op3(l,l2)
ARG0(l2,h)
ARG1(h,s3)
ARG1(h,e)
ARG1(e,p3)
mod(p3,l3)
ARG2(p3,t)
manner(p3,j)

# ::snt If anybody wants a sheep , that is a proof that he exists . "
instance(p,prove-01)
instance(w,want-01)
instance(a,anybody)
instance(s,sheep)
instance(e,exist-01)
ARG0(p,w)
ARG0(w,a)
ARG1(w,s)
ARG1(w,e)
ARG1(e,a)

# ::snt And what good would it do to tell them that ?
instance(a,and)
instance(d,do-02)
instance(t,tell-01)
instance(t3,that)
instance(t2,they)
instance(g,good-04)
instance(a2,amr-unknown)
op2(a,d)
ARG0(d,t)
ARG1(t,t3)
ARG2(t,t2)
ARG1(t,g)
ARG1(g,a2)

# ::snt They would shrug their shoulders , and treat you like a child .
instance(a,and)
instance(s,shrug-01)
instance(t,they)
instance(s2,shoulder)
instance(t2,treat-01)
instance(y,you)
instance(c,child)
op1(a,s)
ARG0(s,t)
ARG1(s,s2)
poss(s2,t)
op2(s2,t2)
ARG0(t2,t)
ARG1(t,y)
ARG2(t,c)

# ::snt But if you said to them : " The planet he came from is Asteroid B-612 , " then they would be convinced , and leave you in peace from their questions .
instance(c3,contrast-01)
instance(a,and)
instance(c,convince-01)
instance(t,they)
instance(l,leave-14)
instance(p2,peace)
instance(q2,question-01)
instance(y,y)
instance(s,say-01)
instance(y,you)
instance(c2,come-01)
instance(h,he)
instance(p,planet)
ARG2(c3,a)
op1(a,c)
ARG1(c,t)
op2(c,l)
ARG0(l,t)
ARG1(t,p2)
topic(p2,q2)
ARG0(q2,t)
domain(q2,y)
condition(q2,s)
ARG0(s,y)
ARG1(s,c2)
ARG1(c2,h)
ARG3(c2,p)
ARG2(c2,t)

# ::snt They are like that .
instance(r,resemble-01)
instance(t,they)
instance(t2,that)
ARG1(r,t)
ARG2(r,t2)

# ::snt One must not hold it against them .
instance(o,obligate-01)
instance(o2,one)
instance(h,hold-01)
instance(i,it)
instance(a,against)
instance(t,they)
ARG1(o,o2)
ARG2(o,h)
ARG0(h,o2)
ARG1(o2,i)
ARG2(o2,a)
op1(a,t)

# ::snt Children should always show great forbearance toward grown - up people .
instance(r,recommend-01)
instance(s,show-01)
instance(c,child)
instance(f,forbearance)
instance(g,great)
instance(g2,grown-up)
instance(a,always)
ARG1(r,s)
ARG0(s,c)
ARG1(s,f)
mod(f,g)
ARG2(f,g2)
time(f,a)

# ::snt But certainly , for us who understand life , figures are a matter of indifference .
instance(c2,contrast-01)
instance(c,certain)
instance(i2,indifferent-01)
instance(w2,we)
instance(u,understand-01)
instance(l,life)
instance(f2,figure)
ARG2(c2,c)
domain(c,i2)
ARG1(i2,w2)
ARG0-of(w2,u)
ARG1(u,l)
ARG2(u,f2)

# ::snt I should have liked to begin this story in the fashion of the fairy - tales .
instance(l,like-02)
instance(i,i)
instance(b,begin-01)
instance(s,story)
instance(t,this)
instance(f,fashion)
instance(t2,tale)
instance(f2,fairy)
ARG0(l,i)
ARG1(l,b)
ARG0(b,i)
ARG1(i,s)
mod(s,t)
manner(s,f)
mod(f,t2)
mod(t2,f2)

# ::snt I should have like to say : " Once upon a time there was a little prince who lived on a planet that was scarcely any bigger than himself , and who had need of a sheep ... "
instance(l,like-02)
instance(i,i)
instance(s,say-01)
instance(p,prince)
instance(l2,little)
instance(l3,live-01)
instance(p2,planet)
instance(h,have-degree-91)
instance(b,big)
instance(m,more)
instance(s2,scarce)
instance(n,need-01)
instance(s3,sheep)
instance(o,once-upon-a-time)
ARG0(l,i)
ARG1(l,s)
ARG0(s,i)
ARG1(i,p)
mod(p,l2)
ARG0-of(p,l3)
location(l3,p2)
ARG1-of(p2,h)
ARG2(h,b)
ARG3(h,m)
quant(m,s2)
ARG4(m,p)
ARG0-of(m,n)
ARG1(n,s3)
time(n,o)

# ::snt To those who understand life , that would have given a much greater air of truth to my story .
instance(g,give-01)
instance(t,that)
instance(t3,truth)
instance(a,air)
instance(h,have-degree-91)
instance(g2,great)
instance(m,more)
instance(m2,much)
instance(s,story)
instance(i,i)
instance(p,person)
instance(u,understand-01)
instance(l,life)
ARG0(g,t)
ARG1(g,t3)
quant(t3,a)
ARG1-of(a,h)
ARG2(h,g2)
ARG3(h,m)
quant(m,m2)
ARG2(m,s)
poss(s,i)
beneficiary(s,p)
ARG0-of(p,u)
ARG1(u,l)

# ::snt For I do not want any one to read my book carelessly .
instance(c,cause-01)
instance(w,want-01)
instance(i,i)
instance(r,read-01)
instance(a,anyone)
instance(b,book)
instance(c2,care-04)
ARG0(c,w)
ARG0(w,i)
ARG1(w,r)
ARG0(r,a)
ARG1(r,b)
poss(b,i)
manner(b,c2)
ARG0(c2,a)

# ::snt I have suffered too much grief in setting down these memories .
instance(h,have-quant-91)
instance(g,grief)
instance(s,suffer-01)
instance(i,i)
instance(c,cause-01)
instance(s2,set-down-09)
instance(m2,memory)
instance(t2,this)
instance(m,much)
instance(t,too)
ARG1(h,g)
ARG1-of(g,s)
ARG0(s,i)
ARG1-of(s,c)
ARG0(c,s2)
ARG0(s2,i)
ARG1(i,m2)
mod(m2,t2)
ARG2(m2,m)
ARG3(m2,t)

# ::snt Six years have already passed since my friend went away from me , with his sheep .
instance(g,go-02)
instance(p,person)
instance(h,have-rel-role-91)
instance(i,i)
instance(f,friend)
instance(a,away)
instance(s,sheep)
instance(b,before)
instance(n,now)
instance(t,temporal-quantity)
instance(y,year)
instance(a3,already)
ARG0(g,p)
ARG0-of(p,h)
ARG1(h,i)
ARG2(h,f)
direction(h,a)
op1(a,i)
accompanier(a,s)
poss(s,p)
time(s,b)
op1(b,n)
quant(b,t)
unit(t,y)
time(t,a3)

# ::snt If I try to describe him here , it is to make sure that I shall not forget him .
instance(e,ensure-01)
instance(f,forget-01)
instance(i,i)
instance(h,h)
instance(t,try-01)
instance(i,i)
instance(d,describe-01)
instance(h,he)
instance(h2,here)
ARG1(e,f)
ARG0(f,i)
ARG1(i,h)
condition(i,t)
ARG0(t,i)
ARG1(t,d)
ARG0(d,i)
ARG1(i,h)
location(i,h2)

# ::snt To forget a friend is sad .
instance(s,sad-02)
instance(f3,forget-01)
instance(p,person)
instance(h,have-rel-role-91)
instance(f,friend)
ARG0(s,f3)
ARG1(f3,p)
ARG0-of(p,h)
ARG2(h,f)

# ::snt Not every one has had a friend .
instance(h,have-03)
instance(e,everyone)
instance(p,person)
instance(h2,have-rel-role-91)
instance(f,friend)
ARG0(h,e)
ARG1(h,p)
ARG0-of(p,h2)
ARG1(h2,e)
ARG2(e,f)

# ::snt And if I forget him , I may become like the grown - ups who are no longer interested in anything but figures ...
instance(a,and)
instance(p,possible-01)
instance(r,resemble-01)
instance(i,i)
instance(g,grown-up)
instance(i2,interest-01)
instance(a2,anything)
instance(e,except-01)
instance(f,figure)
instance(n,no-longer)
instance(f2,forget-01)
instance(h,he)
op2(a,p)
ARG1(p,r)
ARG1(r,i)
ARG2(r,g)
ARG1-of(g,i2)
ARG2(i2,a2)
ARG2-of(a2,e)
ARG1(e,f)
time(e,n)
condition(e,f2)
ARG0(f2,i)
ARG1(i,h)

# ::snt It is for that purpose , again , that I have bought a box of paints and some pencils .
instance(b,buy-01)
instance(i,i)
instance(a,and)
instance(b2,box)
instance(c,contain-01)
instance(p,paint)
instance(p2,pencil)
instance(s,some)
instance(t2,that)
ARG0(b,i)
ARG1(b,a)
op1(a,b2)
ARG0-of(b2,c)
ARG1(c,p)
op2(c,p2)
quant(p2,s)
purpose(p2,t2)

# ::snt It is hard to take up drawing again at my age , when I have never made any pictures except those of the boa constrictor from the outside and the boa constrictor from the inside , since I was six .
instance(h,hard-02)
instance(t,take-up-31)
instance(i,i)
instance(t4,temporal-quantity)
instance(m,make-01)
instance(p,picture)
instance(a5,any)
instance(e2,except-01)
instance(a6,and)
instance(p2,picture)
instance(b,boa)
instance(c2,constrictor)
instance(f,from)
instance(o,outside)
instance(p3,picture)
instance(b2,boa)
instance(c3,constrictor)
instance(f2,from)
instance(i2,inside)
instance(e,ever)
instance(s,since)
instance(a3,age-01)
instance(t6,temporal-quantity)
instance(y2,year)
instance(d,draw-01)
instance(a,again)
instance(c,cause-01)
ARG1(h,t)
ARG0(t,i)
age(i,t4)
duration-of(t4,m)
ARG1(m,p)
mod(p,a5)
ARG2-of(p,e2)
ARG1(e2,a6)
op1(a6,p2)
topic(p2,b)
mod(b,c2)
direction(b,f)
op1(f,o)
op2(f,p3)
topic(p3,b2)
mod(b2,c3)
direction(b2,f2)
op1(f2,i2)
time(f2,e)
time(f2,s)
op1(s,a3)
ARG1(a3,i)
ARG2(i,t6)
unit(t6,y2)
ARG1(t6,d)
mod(t6,a)
ARG1-of(t6,c)

# ::snt I shall certainly try to make my portraits as true to life as possible .
instance(t,try-01)
instance(i,i)
instance(m,make-02)
instance(h,have-degree-91)
instance(p,portrait)
instance(t2,true-02)
instance(l,life)
instance(e,equal)
instance(p2,possible-01)
instance(c,certain)
ARG0(t,i)
ARG1(t,m)
ARG0(m,i)
ARG1(i,h)
ARG1(h,p)
topic(p,i)
ARG2(p,t2)
ARG1(t2,p)
ARG2(p,l)
ARG3(p,e)
ARG4(p,p2)
ARG1(p2,t2)
mod(p2,c)

# ::snt But I am not at all sure of success .
instance(c,contrast-01)
instance(s,sure-02)
instance(i,i)
instance(a,at-all)
instance(s2,succeed-01)
ARG2(c,s)
ARG0(s,i)
degree(s,a)
ARG1-of(s,s2)
ARG0(s2,i)

# ::snt One drawing goes along all right , and another has no resemblance to its subject .
instance(a,and)
instance(g,go-06)
instance(p2,picture)
instance(d,draw-01)
instance(a2,along)
instance(a3,all-right)
instance(r2,resemble-01)
instance(p,picture)
instance(d2,draw-01)
instance(a4,another)
instance(s,subject)
op1(a,g)
ARG1(g,p2)
ARG1-of(p2,d)
ARG2(p2,a2)
mod(p2,a3)
op2(p2,r2)
ARG1(r2,p)
ARG1-of(p,d2)
mod(p,a4)
ARG2(p,s)
poss(s,p)

# ::snt I make some errors , too , in the little prince 's height : in one place he is too tall and in another too short .
instance(e,err-01)
instance(i,i)
instance(h,high-02)
instance(p,prince)
instance(l,little)
instance(t,too)
instance(a,and)
instance(h2,have-degree-91)
instance(t2,tall)
instance(t3,too)
instance(p2,place)
instance(o,one)
instance(h3,have-degree-91)
instance(s,short-07)
instance(t4,too)
instance(p3,place)
instance(a2,another)
instance(s2,some)
ARG0(e,i)
topic(e,h)
ARG1(h,p)
mod(p,l)
mod(p,t)
example(p,a)
op1(a,h2)
ARG1(h2,p)
ARG2(p,t2)
ARG3(p,t3)
location(p,p2)
mod(p2,o)
op2(p2,h3)
ARG1(h3,p)
ARG2(p,s)
ARG1(s,p)
ARG3(s,t4)
location(s,p3)
mod(p3,a2)
mod(p3,s2)

# ::snt And I feel some doubts about the color of his costume .
instance(a,and)
instance(f,feel-01)
instance(i,i)
instance(d,doubt-01)
instance(c,color)
instance(c2,costume)
instance(h,he)
instance(s,some)
op2(a,f)
ARG0(f,i)
ARG1(f,d)
ARG0(d,i)
ARG1(i,c)
poss(c,c2)
poss(c2,h)
quant(c2,s)

# ::snt So I fumble along as best I can , now good , now bad , and I hope generally fair - to - middling .
instance(c,cause-01)
instance(h2,have-degree-91)
instance(f,fumble-01)
instance(i,i)
instance(a,along)
instance(g,good-03)
instance(e,equal)
instance(p,possible-01)
instance(g2,good-03)
instance(n,now)
instance(b,bad-02)
instance(n2,now)
instance(b2,between)
instance(f2,fair-04)
instance(m2,middling)
instance(g3,general-02)
instance(h,hope-01)
ARG1(c,h2)
ARG1(h2,f)
ARG0(f,i)
ARG1(f,a)
ARG2(f,g)
ARG1(g,i)
ARG2(i,f)
ARG3(i,e)
ARG4(i,p)
ARG1(p,f)
example(p,g2)
time(g2,n)
example(g2,b)
time(b,n2)
example(b,b2)
op1(b2,f2)
op2(b2,m2)
ARG1-of(b2,g3)
ARG1-of(b2,h)
ARG0(h,i)

# ::snt In certain more important details I shall make mistakes , also .
instance(m2,mistake-02)
instance(i,i)
instance(d,detail)
instance(c,certain)
instance(h,have-degree-91)
instance(i2,important-01)
instance(m3,more)
instance(a,also)
ARG0(m2,i)
ARG1(m2,d)
mod(d,c)
ARG1-of(d,h)
ARG2(h,i2)
ARG1(i2,d)
ARG3(i2,m3)
mod(i2,a)

# ::snt But that is something that will not be my fault .
instance(c,contrast-01)
instance(f2,fault-01)
instance(i,i)
instance(s2,something)
instance(t2,that)
instance(-,-)
ARG2(c,f2)
ARG1(f2,i)
ARG2(f2,s2)
mod(s2,t2)
polarity(s2,-)

# ::snt My friend never explained anything to me .
instance(e,explain-01)
instance(p,person)
instance(h,have-rel-role-91)
instance(i,i)
instance(f,friend)
instance(a,anything)
instance(i,i)
instance(e2,ever)
ARG0(e,p)
ARG0-of(p,h)
ARG1(h,i)
ARG2(i,f)
ARG1(i,a)
ARG2(i,i)
time(i,e2)

# ::snt He thought , perhaps , that I was like himself .
instance(t,think-01)
instance(h,he)
instance(r,resemble-01)
instance(i,i)
instance(p,perhaps)
ARG0(t,h)
ARG1(t,r)
ARG1(r,i)
ARG2(r,h)
mod(r,p)

# ::snt But I , alas , do not know how to see sheep through the walls of boxes .
instance(c,contrast-01)
instance(k,know-01)
instance(i,i)
instance(t2,thing)
instance(s,see-01)
instance(s2,sheep)
instance(t,through)
instance(w,wall)
instance(b2,box)
instance(a,alas)
ARG2(c,k)
ARG0(k,i)
ARG1(k,t2)
manner-of(t2,s)
ARG1(s,s2)
path(s,t)
op1(t,w)
consist-of(w,b2)
mod(w,a)

# ::snt Perhaps I am a little like the grown - ups .
instance(r,resemble-01)
instance(i,i)
instance(g,grown-up)
instance(p,perhaps)
instance(l,little)
ARG1(r,i)
ARG2(r,g)
mod(r,p)
quant(r,l)

# ::snt I have had to grow old .
instance(o,obligate-01)
instance(i,i)
instance(g,grow-02)
instance(o2,old)
ARG1(o,i)
ARG2(o,g)
ARG1(g,i)
ARG2(i,o2)

# ::snt Chapter 5 .
instance(c,chapter)

# ::snt As each day passed I would learn , in our talk , something about the little prince 's planet , his departure from it , his journey .
instance(l,learn-01)
instance(i,i)
instance(a,and)
instance(s,something)
instance(p2,planet)
instance(p3,prince)
instance(l2,little)
instance(d2,depart-01)
instance(j,journey-01)
instance(p,pass-03)
instance(d,day)
instance(e,each)
instance(t,talk-01)
instance(w,we)
ARG0(l,i)
ARG1(l,a)
op1(a,s)
topic(s,p2)
poss(p2,p3)
mod(p3,l2)
op2(p3,d2)
ARG0(d2,p3)
ARG1(p3,p2)
op3(p3,j)
ARG0(j,p3)
time(j,p)
ARG1(p,d)
mod(d,e)
source(d,t)
ARG0(t,w)

# ::snt The information would come very slowly , as it might chance to fall from his thoughts .
instance(c,come-01)
instance(i,information)
instance(s,slow-05)
instance(v,very)
instance(f,fall-01)
instance(t,thing)
instance(t2,think-01)
instance(h,he)
instance(c2,chance-01)
ARG1(c,i)
ARG1-of(c,s)
degree(s,v)
time(s,f)
ARG1(f,i)
ARG3(i,t)
ARG1-of(t,t2)
ARG0(t2,h)
ARG1-of(t2,c2)

# ::snt It was in this way that I heard , on the third day , about the catastrophe of the baobabs .
instance(h,hear-01)
instance(i,i)
instance(c,catastrophe)
instance(b,baobab)
instance(t,this)
instance(d,day)
instance(o,ordinal-entity)
ARG0(h,i)
ARG1(h,c)
poss(c,b)
manner(c,t)
time(c,d)
ord(d,o)

# ::snt This time , once more , I had the sheep to thank for it .
instance(o,obligate-01)
instance(t,thank-01)
instance(i,i)
instance(s,sheep)
instance(i2,it)
instance(t2,time)
instance(t3,this)
instance(a,again)
ARG2(o,t)
ARG0(t,i)
ARG1(t,s)
ARG2(t,i2)
time(t,t2)
mod(t2,t3)
mod(t2,a)

# ::snt For the little prince asked me abruptly -- as if seized by a grave doubt -- " It is true , is n't it , that sheep eat little bushes ? "
instance(r2,request-confirmation-91)
instance(p,prince)
instance(l2,little)
instance(e,eat-01)
instance(s,sheep)
instance(b,bush)
instance(l,little)
instance(i2,i)
instance(a2,abrupt)
instance(s2,seize-01)
instance(d,doubt-01)
instance(g,grave)
ARG0(r2,p)
mod(p,l2)
ARG1(p,e)
ARG0(e,s)
ARG1(e,b)
mod(b,l)
ARG2(b,i2)
manner(b,a2)
conj-as-if(b,s2)
ARG0(s2,d)
ARG0(d,p)
mod(p,g)
ARG1(p,p)

# ::snt " Yes , that is true . "
instance(t,true-01)
instance(t2,that)
ARG1(t,t2)

# ::snt " Ah !
instance(a,ah)

# ::snt I am glad ! "
instance(g,glad-02)
instance(i,i)
ARG1(g,i)

# ::snt I did not understand why it was so important that sheep should eat little bushes .
instance(u,understand-01)
instance(i,i)
instance(i2,important-01)
instance(s2,so)
instance(r,recommend-01)
instance(e,eat-01)
instance(s,sheep)
instance(b,bush)
instance(l,little)
instance(c,cause-01)
instance(a,amr-unknown)
ARG0(u,i)
ARG1(u,i2)
mod(i2,s2)
ARG1(i2,r)
ARG1(r,e)
ARG0(e,s)
ARG1(e,b)
mod(b,l)
ARG1-of(b,c)
ARG0(c,a)

# ::snt But the little prince added : " Then it follows that they also eat baobabs ? "
instance(c,contrast-01)
instance(a,add-01)
instance(p,prince)
instance(l,little)
instance(f,follow-05)
instance(e,eat-01)
instance(t,they)
instance(b,baobab)
instance(a2,also)
instance(h,have-condition-91)
instance(r,request-confirmation-91)
ARG1(c,a)
ARG0(a,p)
mod(p,l)
ARG1(p,f)
ARG1(f,e)
ARG0(e,t)
ARG1(e,b)
mod(e,a2)
ARG1-of(e,h)
ARG1-of(e,r)

# ::snt I pointed out to the little prince that baobabs were not little bushes , but , on the contrary , trees as big as castles ; and that even if he took a whole herd of elephants away with him , the herd would not eat up one single baobab .
instance(p2,point-out-02)
instance(i,i)
instance(a,and)
instance(t2,tree)
instance(h2,have-degree-91)
instance(b5,big)
instance(e4,equal)
instance(c,castle)
instance(b2,baobab)
instance(i2,instead-of-91)
instance(b3,bush)
instance(l3,little)
instance(e,eat-up-02)
instance(h,h)
instance(b,baobab)
instance(s,single-02)
instance(e3,even-if)
instance(t,take-01)
instance(p,p)
instance(h,herd)
instance(e2,elephant)
instance(w,whole)
instance(a2,away)
instance(p,prince)
instance(l2,little)
ARG0(p2,i)
ARG1(p2,a)
op1(a,t2)
ARG1-of(t2,h2)
ARG2(h2,b5)
ARG3(h2,e4)
ARG4(h2,c)
domain(h2,b2)
ARG1-of(h2,i2)
ARG2(i2,b3)
mod(b3,l3)
domain(b3,b2)
op2(b3,e)
ARG0(e,h)
ARG1(h,b)
ARG1-of(b,s)
concession(b,e3)
op1(e3,t)
ARG0(t,p)
ARG1(p,h)
consist-of(h,e2)
mod(h,w)
ARG3(h,a2)
beneficiary(h,p)
mod(p,l2)

# ::snt The idea of the herd of elephants made the little prince laugh .
instance(m,make-02)
instance(i,idea)
instance(h,herd)
instance(e,elephant)
instance(l,laugh-01)
instance(p,prince)
instance(l2,little)
ARG0(m,i)
topic(i,h)
consist-of(h,e)
ARG1(h,l)
ARG0(l,p)
mod(p,l2)

# ::snt " We would have to put them one on top of the other , " he said .
instance(s,say-01)
instance(h,he)
instance(o,obligate-01)
instance(s2,stack-01)
instance(w,we)
instance(t,they)
ARG0(s,h)
ARG1(s,o)
ARG2(o,s2)
ARG0(s2,w)
ARG1(s2,t)

# ::snt But he made a wise comment : " Before they grow so big , the baobabs start out by being little . "
instance(c2,contrast-01)
instance(c,comment-01)
instance(h,he)
instance(s,start-out-05)
instance(b2,baobab)
instance(l,little)
instance(b4,before)
instance(g,grow-02)
instance(b5,big)
instance(s2,so)
instance(w,wise)
ARG2(c2,c)
ARG0(c,h)
ARG1(c,s)
ARG0(s,b2)
ARG2(s,l)
time(s,b4)
op1(b4,g)
ARG1(g,b2)
ARG2(b2,b5)
degree(b5,s2)
manner(b5,w)

# ::snt " That is strictly correct , "
instance(c,correct-02)
instance(t,that)
instance(s,strict)
ARG1(c,t)
mod(c,s)

# ::snt I said .
instance(s,say-01)
instance(i,i)
ARG0(s,i)

# ::snt " But why do you want the sheep to eat the little baobabs ? "
instance(c,contrast-01)
instance(c2,cause-01)
instance(a,amr-unknown)
instance(w,want-01)
instance(y,you)
instance(e,eat-01)
instance(s,sheep)
instance(b,baobab)
instance(l,little)
ARG2(c,c2)
ARG0(c2,a)
ARG1(c2,w)
ARG0(w,y)
ARG1(w,e)
ARG0(e,s)
ARG1(e,b)
mod(b,l)

# ::snt He answered me at once , " Oh , come , come ! " , as if he were speaking of something that was self - evident .
instance(a,answer-01)
instance(h,he)
instance(i2,i)
instance(c,come-on-25)
instance(a2,at-once-01)
instance(s,speak-01)
instance(s2,something)
instance(e,evidence-01)
ARG0(a,h)
ARG1(a,i2)
ARG2(a,c)
time(a,a2)
conj-as-if(a,s)
ARG0(s,h)
ARG1(h,s2)
ARG0-of(s2,e)
ARG1(e,s2)

# ::snt And I was obliged to make a great mental effort to solve this problem , without any assistance .
instance(a,and)
instance(o,oblige-02)
instance(i,i)
instance(e,effort-01)
instance(s,solve-01)
instance(p,problem)
instance(t,this)
instance(a2,assist-01)
instance(m2,mental)
instance(g,great)
op1(a,o)
ARG1(o,i)
ARG2(o,e)
ARG0(e,i)
ARG1(i,s)
ARG0(s,i)
ARG1(i,p)
mod(p,t)
ARG2-of(p,a2)
ARG1(a2,i)
manner(a2,m2)
mod(a2,g)

# ::snt Indeed , as I learned , there were on the planet where the little prince lived -- as on all planets -- good plants and bad plants .
instance(b2,be-located-at-91)
instance(a3,and)
instance(p,plant)
instance(g,good-02)
instance(p2,plant)
instance(b,bad-07)
instance(i,indeed)
instance(a,and)
instance(p3,planet)
instance(l,live-01)
instance(p4,prince)
instance(l2,little)
instance(p5,planet)
instance(a2,all)
instance(l3,learn-01)
instance(i2,i)
ARG1(b2,a3)
op1(a3,p)
ARG1-of(p,g)
op2(p,p2)
ARG1-of(p2,b)
mod(p2,i)
ARG2(p2,a)
op1(a,p3)
location-of(p3,l)
ARG0(l,p4)
mod(p4,l2)
op2(p4,p5)
mod(p5,a2)
ARG1-of(p5,l3)
ARG0(l3,i2)

# ::snt In consequence , there were good seeds from good plants , and bad seeds from bad plants .
instance(c,consequence-03)
instance(a,and)
instance(s,seed)
instance(g,good-02)
instance(p,plant)
instance(g2,good-02)
instance(s2,seed)
instance(b,bad-07)
instance(p2,plant)
instance(b2,bad-07)
ARG2(c,a)
op1(a,s)
ARG1-of(s,g)
source(s,p)
ARG1-of(p,g2)
op2(p,s2)
ARG1-of(s2,b)
source(s2,p2)
ARG1-of(p2,b2)

# ::snt But seeds are invisible .
instance(c,contrast-01)
instance(p,possible-01)
instance(s2,see-01)
instance(s,seed)
ARG2(c,p)
ARG1(p,s2)
ARG1(s2,s)

# ::snt They sleep deep in the heart of the earth 's darkness , until some one among them is seized with the desire to awaken .
instance(s,sleep-01)
instance(t,they)
instance(h,heart)
instance(d,deep-02)
instance(d2,darkness)
instance(e,earth)
instance(u,until)
instance(s2,seize-01)
instance(d3,desire-01)
instance(w,wake-01)
instance(s3,someone)
instance(i,include-91)
ARG0(s,t)
location(s,h)
ARG2-of(h,d)
part-of(h,d2)
poss(d2,e)
time(d2,u)
op1(u,s2)
ARG0(s2,d3)
ARG1(d3,w)
ARG1(w,s)
ARG1(w,s3)
ARG1-of(s3,i)
ARG2(i,t)

# ::snt Then this little seed will stretch itself and begin -- timidly at first -- to push a charming little sprig inoffensively upward toward the sun .
instance(a,and)
instance(s,stretch-01)
instance(s2,seed)
instance(l,little)
instance(t2,this)
instance(b,begin-01)
instance(p,push-01)
instance(s3,sprig)
instance(l2,little)
instance(c,charm-01)
instance(u,upward)
instance(s4,sun)
instance(o,offensive)
instance(t3,timid)
instance(a2,at-first)
instance(t,then)
op1(a,s)
ARG0(s,s2)
mod(s2,l)
mod(s2,t2)
ARG1(s2,s2)
op2(s2,b)
ARG0(b,s2)
ARG1(s2,p)
ARG0(p,s2)
ARG1(s2,s3)
mod(s3,l2)
ARG0-of(s3,c)
ARG2(s3,u)
direction(u,s4)
manner(u,o)
manner(u,t3)
time(t3,a2)
time(t3,t)

# ::snt If it is only a sprout of radish or the sprig of a rose - bush , one would let it grow wherever it might wish .
instance(a,allow-01)
instance(o,one)
instance(g,grow-01)
instance(i,i)
instance(w2,wish-01)
instance(p,possible-01)
instance(o2,or)
instance(s,sprout)
instance(r,radish)
instance(s2,sprig)
instance(b2,bush)
instance(r2,rose)
instance(o3,only)
instance(i,it)
ARG0(a,o)
ARG1(a,g)
ARG1(g,i)
location(i,w2)
ARG0(w2,i)
ARG1-of(i,p)
condition(i,o2)
op1(o2,s)
part-of(s,r)
op2(s,s2)
part-of(s2,b2)
mod(b2,r2)
mod(b2,o3)
domain(b2,i)

# ::snt But when it is a bad plant , one must destroy it as soon as possible , the very first instant that one recognizes it .
instance(c,contrast-01)
instance(o,obligate-01)
instance(d,destroy-01)
instance(o2,one)
instance(i2,i2)
instance(i,instant)
instance(r,recognize-01)
instance(o3,ordinal-entity)
instance(v,very)
instance(s,soon)
instance(h,have-degree-91)
instance(e,equal)
instance(p2,possible-01)
instance(p,plant)
instance(b,bad-07)
instance(i2,it)
ARG2(c,o)
ARG2(o,d)
ARG0(d,o2)
ARG1(d,i2)
time(i2,i)
time-of(i,r)
ARG0(r,o2)
ARG1(o2,i2)
ord(o2,o3)
degree(o3,v)
time(o3,s)
ARG2-of(s,h)
ARG1(h,d)
ARG3(d,e)
ARG4(d,p2)
ARG1(p2,d)
condition(p2,p)
ARG1-of(p,b)
domain(p,i2)

# ::snt Now there were some terrible seeds on the planet that was the home of the little prince ; and these were the seeds of the baobab .
instance(b2,be-located-at-91)
instance(s,seed)
instance(t,terrible-01)
instance(s2,some)
instance(b,baobab)
instance(p,planet)
instance(h,home)
instance(p2,prince)
instance(l,little)
instance(n,now)
ARG1(b2,s)
ARG1-of(s,t)
quant(s,s2)
poss(s,b)
ARG2(s,p)
location-of(p,h)
poss(h,p2)
mod(p2,l)
time(p2,n)

# ::snt The soil of that planet was infested with them .
instance(i,infest-01)
instance(s,soil)
instance(p,planet)
instance(t2,that)
instance(t,they)
ARG1(i,s)
poss(s,p)
mod(p,t2)
ARG2(p,t)

# ::snt A baobab is something you will never , never be able to get rid of if you attend to it too late .
instance(p,possible-01)
instance(e,eliminate-01)
instance(y,you)
instance(b,baobab)
instance(e2,ever)
instance(a,attend-02)
instance(h,have-degree-91)
instance(l,late)
instance(t,too)
ARG1(p,e)
ARG0(e,y)
ARG1(e,b)
time(e,e2)
condition(e,a)
ARG0(a,y)
ARG1(y,b)
ARG1-of(b,h)
ARG2(h,l)
ARG3(h,t)

# ::snt It spreads over the entire planet .
instance(s,spread-01)
instance(i,it)
instance(p,planet)
instance(e,entire)
ARG1(s,i)
ARG2(s,p)
mod(p,e)

# ::snt It bores clear through it with its roots .
instance(b,bore-01)
instance(i,it)
instance(t2,through)
instance(i2,it)
instance(c,clear-03)
instance(r,root)
ARG0(b,i)
ARG2(b,t2)
op1(t2,i2)
mod(t2,c)
ARG3(t2,r)
poss(r,i)

# ::snt And if the planet is too small , and the baobabs are too many , they split it in pieces ...
instance(a,and)
instance(s,split-01)
instance(b,b)
instance(p2,p2)
instance(p,piece)
instance(a2,and)
instance(h,have-degree-91)
instance(p2,planet)
instance(s2,small)
instance(t2,too)
instance(h2,have-quant-91)
instance(b,baobab)
instance(m,many)
instance(t3,too)
op1(a,s)
ARG0(s,b)
ARG1(b,p2)
ARG2(p2,p)
condition(p2,a2)
op1(a2,h)
ARG1(h,p2)
ARG2(h,s2)
ARG3(h,t2)
op2(h,h2)
ARG1(h2,b)
ARG2(h2,m)
ARG3(h2,t3)

# ::snt " It is a question of discipline , " the little prince said to me later on .
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(q,question)
instance(d,discipline)
instance(i,it)
instance(i2,i)
instance(a,after)
ARG0(s,p)
mod(p,l)
ARG1(p,q)
topic(q,d)
domain(q,i)
ARG2(q,i2)
time(q,a)

# ::snt " When you 've finished your own toilet in the morning , then it is time to attend to the toilet of your planet , just so , with the greatest care .
instance(a,attend-02)
instance(y,you)
instance(t2,toilet)
instance(p,planet)
instance(r,resemble-01)
instance(t,t)
instance(c,care-04)
instance(h,have-degree-91)
instance(g,great)
instance(m2,most)
instance(f,finish-01)
instance(t,toilet)
instance(d,date-entity)
instance(m,morning)
ARG0(a,y)
ARG1(a,t2)
poss(t2,p)
poss(p,y)
ARG1-of(p,r)
ARG2(r,t)
manner(r,c)
ARG1-of(c,h)
ARG2(h,g)
ARG3(h,m2)
time(h,f)
ARG0(f,y)
ARG1(y,t)
poss(t,y)
time(t,d)
dayperiod(d,m)

# ::snt You must see to it that you pull up regularly all the baobabs , at the very first moment when they can be distinguished from the rosebushes which they resemble so closely in their earliest youth .
instance(o2,obligate-01)
instance(p,pull-01)
instance(y,you)
instance(b,baobab)
instance(a,all)
instance(r,regular-02)
instance(m,moment)
instance(o,ordinal-entity)
instance(v,very)
instance(p2,possible-01)
instance(d,distinguish-01)
instance(r2,rosebush)
instance(r3,resemble-01)
instance(c,close-10)
instance(s,so)
instance(e,early)
instance(y2,youth)
instance(v2,very)
ARG1(o2,p)
ARG0(p,y)
ARG1(p,b)
mod(b,a)
ARG1-of(b,r)
time(b,m)
ord(m,o)
degree(o,v)
time-of(o,p2)
ARG1(p2,d)
ARG1(d,b)
ARG2(b,r2)
ARG2-of(r2,r3)
ARG1(r3,b)
ARG1-of(b,c)
degree(c,s)
time(c,e)
op1(e,y2)
poss(y2,b)
degree(y2,v2)

# ::snt It is very tedious work , " the little prince added , " but very easy . "
instance(a,add-01)
instance(p,prince)
instance(l,little)
instance(c,contrast-01)
instance(t,tedious)
instance(v,very)
instance(w,work-01)
instance(e,easy-05)
instance(v2,very)
ARG0(a,p)
mod(p,l)
ARG1(p,c)
ARG1(c,t)
degree(t,v)
domain(t,w)
ARG2(t,e)
degree(e,v2)
ARG1(e,w)

# ::snt And one day he said to me : " You ought to make a beautiful drawing , so that the children where you live can see exactly how all this is .
instance(a,and)
instance(s,say-01)
instance(h,he)
instance(r,recommend-01)
instance(d3,draw-01)
instance(i,i)
instance(p2,picture)
instance(b,beautiful-02)
instance(p,possible-01)
instance(s2,see-01)
instance(c,child)
instance(l,live-01)
instance(t,this)
instance(a2,all)
instance(e,exact)
instance(i,i)
instance(d,day)
instance(o,one)
op1(a,s)
ARG0(s,h)
ARG1(s,r)
ARG0(r,h)
ARG1(h,d3)
ARG0(d3,i)
ARG1(i,p2)
ARG1-of(p2,b)
purpose(p2,p)
ARG1(p,s2)
ARG0(s2,c)
location(c,l)
ARG0(l,i)
ARG1(l,t)
mod(t,a2)
manner(t,e)
ARG2(t,i)
ARG2(t,i)
time(t,d)
mod(d,o)

# ::snt That would be very useful to them if they were to travel some day .
instance(u,useful-05)
instance(t2,they)
instance(t,that)
instance(v,very)
instance(t3,travel-01)
instance(d,day)
instance(s,some)
ARG0(u,t2)
ARG1(u,t)
degree(u,v)
condition(u,t3)
ARG0(t3,t2)
time(t2,d)
mod(d,s)

# ::snt Sometimes , " he added , " there is no harm in putting off a piece of work until another day .
instance(a,add-01)
instance(h,he)
instance(h2,harm-01)
instance(p,put-off-06)
instance(t,thing)
instance(w,work-01)
instance(p3,piece)
instance(d,day)
instance(a2,another)
instance(s,sometimes)
ARG0(a,h)
ARG1(a,h2)
ARG0(h2,p)
ARG1(p,t)
ARG1-of(t,w)
quant(t,p3)
ARG2(t,d)
mod(d,a2)
time(d,s)

# ::snt But when it is a matter of baobabs , that always means a catastrophe .
instance(c2,contrast-01)
instance(m3,mean-01)
instance(t,that)
instance(c,catastrophe)
instance(a,always)
instance(b,baobab)
ARG2(c2,m3)
ARG1(m3,t)
ARG2(m3,c)
time(m3,a)
condition(m3,b)

# ::snt I knew a planet that was inhabited by a lazy man .
instance(k,know-02)
instance(i,i)
instance(p,planet)
instance(i2,inhabit-01)
instance(m,man)
instance(l,lazy)
ARG0(k,i)
ARG1(k,p)
ARG1-of(p,i2)
ARG0(i2,m)
mod(m,l)

# ::snt He neglected three little bushes ... "
instance(n,neglect-01)
instance(h,he)
instance(b,bush)
instance(l,little)
instance(3,3)
ARG0(n,h)
ARG1(n,b)
mod(b,l)
quant(b,3)

# ::snt So , as the little prince described it to me , I have made a drawing of that planet .
instance(d,draw-01)
instance(i,i)
instance(p,planet)
instance(t,that)
instance(d2,describe-01)
instance(p2,prince)
instance(l,little)
instance(c,cause-01)
ARG0(d,i)
ARG1(d,p)
mod(p,t)
manner(p,d2)
ARG0(d2,p2)
mod(p2,l)
ARG1(p2,p)
beneficiary(p,i)
ARG1-of(p,c)

# ::snt I do not much like to take the tone of a moralist .
instance(d,dislike-01)
instance(i,i)
instance(t,take-01)
instance(t2,tone)
instance(m2,moralist)
instance(m,much)
ARG0(d,i)
ARG1(d,t)
ARG0(t,i)
ARG1(i,t2)
poss(t2,m2)
degree(t2,m)

# ::snt But the danger of the baobabs is so little understood , and such considerable risks would be run by anyone who might get lost on an asteroid , that for once I am breaking through my reserve .
instance(c2,contrast-01)
instance(c3,cause-01)
instance(a,and)
instance(u,understand-01)
instance(d,danger)
instance(b2,baobab)
instance(l,little)
instance(s,so)
instance(r,risk-01)
instance(a2,anyone)
instance(l2,lose-02)
instance(a3,asteroid)
instance(p,possible-01)
instance(c,considerable)
instance(s2,such)
instance(b3,break-away-14)
instance(i,i)
instance(r3,reserve)
instance(f,for-once)
ARG2(c2,c3)
ARG0(c3,a)
op1(a,u)
ARG1(u,d)
poss(d,b2)
degree(d,l)
degree(l,s)
op2(l,r)
ARG0(r,a2)
ARG1-of(a2,l2)
location(l2,a3)
ARG1-of(l2,p)
degree(l2,c)
mod(c,s2)
ARG1(c,b3)
ARG0(b3,i)
ARG1(b3,r3)
poss(r3,i)
mod(r3,f)

# ::snt " Children , "
instance(c2,child)

# ::snt I say plainly , " watch out for the baobabs ! "
instance(s,say-01)
instance(i,i)
instance(w,watch-out-02)
instance(y,you)
instance(b,baobab)
instance(p,plain)
ARG0(s,i)
ARG1(s,w)
ARG0(w,y)
ARG1(w,b)
manner(w,p)

# ::snt My friends , like myself , have been skirting this danger for a long time , without ever knowing it ; and so it is for them that I have worked so hard over this drawing .
instance(c,cause-01)
instance(s,skirt-02)
instance(a,and)
instance(p2,person)
instance(h2,have-rel-role-91)
instance(i,i)
instance(f,friend)
instance(d,danger)
instance(t,this)
instance(k,know-01)
instance(e,ever)
instance(l,long-03)
instance(w,work-01)
instance(p,picture)
instance(d2,draw-01)
instance(t3,this)
instance(h,hard-02)
instance(s2,so)
ARG0(c,s)
ARG0(s,a)
op1(a,p2)
ARG0-of(p2,h2)
ARG1(h2,i)
ARG2(h2,f)
op2(h2,i)
ARG1(h2,d)
mod(d,t)
ARG1-of(d,k)
ARG0(k,p2)
time(p2,e)
ARG1-of(p2,l)
ARG1(p2,w)
ARG0(w,i)
ARG1(i,p)
ARG1-of(p,d2)
mod(p,t3)
ARG1-of(p,h)
degree(h,s2)
beneficiary(h,p2)

# ::snt The lesson which I pass on by this means is worth all the trouble it has cost me .
instance(w,worth-02)
instance(l,lesson)
instance(p,pass-on-09)
instance(i,i)
instance(t2,this)
instance(t,trouble-05)
instance(c,cost-01)
instance(a,all)
ARG1(w,l)
ARG1-of(l,p)
ARG0(p,i)
manner(p,t2)
ARG2(p,t)
ARG2-of(t,c)
ARG1(c,l)
ARG3(l,i)
mod(l,a)

# ::snt Perhaps you will ask me , " Why are there no other drawing in this book as magnificent and impressive as this drawing of the baobabs ? "
instance(p,possible-01)
instance(a,ask-01)
instance(y,you)
instance(p2,picture)
instance(d,draw-01)
instance(o,other)
instance(b,book)
instance(t,this)
instance(c,cause-01)
instance(a2,amr-unknown)
instance(h,have-degree-91)
instance(m,magnificent)
instance(e,equal)
instance(p3,picture)
instance(d2,draw-01)
instance(t2,this)
instance(b2,baobab)
instance(h2,have-degree-91)
instance(i3,impress-01)
instance(e2,equal)
instance(i2,i)
ARG1(p,a)
ARG0(a,y)
ARG1(a,p2)
ARG1-of(p2,d)
mod(p2,o)
location(p2,b)
mod(b,t)
ARG0-of(b,c)
ARG1(c,a2)
ARG1-of(c,h)
ARG2(h,m)
ARG3(h,e)
ARG4(h,p3)
ARG1-of(p3,d2)
mod(p3,t2)
topic(p3,b2)
ARG1-of(p3,h2)
ARG2(h2,i3)
ARG0(i3,p2)
ARG3(i3,e2)
ARG4(i3,p3)
ARG2(i3,i2)

# ::snt The reply is simple .
instance(s,simple-02)
instance(t,thing)
instance(r,reply-01)
ARG1(s,t)
ARG2-of(t,r)

# ::snt I have tried .
instance(t,try-01)
instance(i,i)
ARG0(t,i)

# ::snt But with the others I have not been successful .
instance(c,contrast-01)
instance(s,succeed-01)
instance(i,i)
instance(o,other)
ARG2(c,s)
ARG0(s,i)
ARG1(s,o)

# ::snt When I made the drawing of the baobabs I was carried beyond myself by the inspiring force of urgent necessity .
instance(c,carry-01)
instance(f,force-01)
instance(n,necessity)
instance(u,urgent)
instance(i2,inspire-01)
instance(i,i)
instance(b,beyond)
instance(d,draw-01)
instance(b2,baobab)
ARG0(c,f)
ARG0(f,n)
mod(n,u)
ARG0-of(n,i2)
ARG1(n,i)
destination(n,b)
op1(b,i)
time(b,d)
ARG0(d,i)
ARG1(i,b2)

# ::snt Chapter 6 .
instance(c,chapter)

# ::snt Oh , little prince !
instance(p,prince)
instance(l,little)
mod(p,l)

# ::snt Bit by bit I came to understand the secrets of your sad little life ...
instance(u,understand-01)
instance(i,i)
instance(s,secret)
instance(l,life)
instance(y,you)
instance(l2,little)
instance(s2,sad-02)
instance(b,bit-by-bit)
ARG0(u,i)
ARG1(u,s)
poss(s,l)
poss(l,y)
mod(l,l2)
ARG1-of(l,s2)
manner(l,b)

# ::snt For a long time you had found your only entertainment in the quiet pleasure of looking at the sunset .
instance(f,find-01)
instance(y,you)
instance(e,entertain-01)
instance(l2,look-01)
instance(s,sunset)
instance(p,pleasure)
instance(q,quiet-04)
instance(o,only)
instance(l,long-03)
ARG0(f,y)
ARG1(f,e)
ARG0(e,l2)
ARG0(l2,y)
ARG1(y,s)
mod(y,p)
ARG1-of(p,q)
ARG1(p,y)
mod(y,o)
ARG1-of(y,l)

# ::snt I learned that new detail on the morning of the fourth day , when you said to me : " I am very fond of sunsets .
instance(l,learn-01)
instance(i,i)
instance(d,detail)
instance(n,new-01)
instance(t,that)
instance(d3,date-entity)
instance(m,morning)
instance(d2,day)
instance(o,ordinal-entity)
instance(s,say-01)
instance(y,you)
instance(l2,like-01)
instance(s2,sunset)
instance(v,very)
ARG0(l,i)
ARG1(l,d)
ARG1-of(d,n)
mod(d,t)
time(d,d3)
dayperiod(d3,m)
mod(d3,d2)
ord(d2,o)
time(d2,s)
ARG0(s,y)
ARG1(s,l2)
ARG0(l2,y)
ARG1(y,s2)
degree(y,v)
ARG2(y,i)

# ::snt Come , let us go look at a sunset now . "
instance(a,and)
instance(c,come-01)
instance(y,you)
instance(g,go-05)
instance(w,w)
instance(l,look-01)
instance(w,we)
instance(s,sunset)
instance(n,now)
op1(a,c)
ARG1(c,y)
op2(c,g)
ARG0(g,w)
ARG1(w,l)
ARG0(l,w)
ARG1(l,s)
time(l,n)

# ::snt " But we must wait , "
instance(c,contrast-01)
instance(o,obligate-01)
instance(w2,wait-01)
instance(w,we)
ARG2(c,o)
ARG2(o,w2)
ARG1(w2,w)

# ::snt I said .
instance(s,say-01)
instance(i,i)
ARG0(s,i)

# ::snt " Wait ?
instance(w,wait-01)

# ::snt For what ? "
instance(w,wait-01)
instance(a,amr-unknown)
ARG2(w,a)

# ::snt " For the sunset .
instance(w,wait-01)
instance(s,sunset)
ARG2(w,s)

# ::snt We must wait until it is time . "
instance(o,obligate-01)
instance(w2,wait-01)
instance(w,we)
instance(u,until)
instance(t,time)
ARG2(o,w2)
ARG1(w2,w)
duration(w2,u)
op1(u,t)

# ::snt At first you seemed to be very much surprised .
instance(s,seem-01)
instance(s2,surprise-01)
instance(y,you)
instance(m,much)
instance(v,very)
instance(a,at-first)
ARG1(s,s2)
ARG1(s2,y)
degree(s2,m)
degree(m,v)
time(m,a)

# ::snt And then you laughed to yourself .
instance(a,and)
instance(l,laugh-01)
instance(y,you)
instance(t,then)
op1(a,l)
ARG0(l,y)
ARG2(l,y)
time(y,t)

# ::snt You said to me : " I am always thinking that I am at home ! "
instance(s,say-01)
instance(y,you)
instance(t,think-01)
instance(b,be-located-at-91)
instance(h,home)
instance(a,always)
instance(i,i)
ARG0(s,y)
ARG1(s,t)
ARG0(t,y)
ARG1(y,b)
ARG1(b,y)
ARG2(y,h)
time(y,a)
ARG2(y,i)

# ::snt Just so .
instance(j,just-so)

# ::snt Everybody knows that when it is noon in the United States the sun is setting over France .
instance(k,know-01)
instance(e,everybody)
instance(s,set-11)
instance(s2,sun)
instance(c2,country)
instance(n3,name)
instance(d,date-entity)
instance(c,country)
instance(n2,name)
ARG0(k,e)
ARG1(k,s)
ARG1(s,s2)
location(s,c2)
name(c2,n3)
time(c2,d)
location(d,c)
name(c,n2)

# ::snt If you could fly to France in one minute , you could go straight into the sunset , right from noon .
instance(p,possible-01)
instance(g,go-02)
instance(y,y)
instance(d,date-entity)
instance(s,sunset)
instance(s2,straight-04)
instance(p2,possible-01)
instance(f,fly-01)
instance(y,you)
instance(t,temporal-quantity)
instance(m,minute)
instance(c,country)
ARG1(p,g)
ARG0(g,y)
ARG3(y,d)
ARG4(y,s)
ARG1-of(y,s2)
condition(y,p2)
ARG1(p2,f)
ARG1(f,y)
duration(f,t)
unit(t,m)
destination(t,c)

# ::snt Unfortunately , France is too far away for that .
instance(f,fortunate-01)
instance(b,be-located-at-91)
instance(c,country)
instance(a,away)
instance(h,have-degree-91)
instance(f2,far)
instance(t,too)
instance(t2,that)
ARG2(f,b)
ARG1(b,c)
ARG2(b,a)
ARG1-of(a,h)
ARG2(h,f2)
ARG3(h,t)
ARG6(h,t2)

# ::snt But on your tiny planet , my little prince , all you need do is move your chair a few steps .
instance(s2,say-01)
instance(c2,contrast-01)
instance(o,obligate-01)
instance(m,move-01)
instance(p2,p2)
instance(c,chair)
instance(s,step)
instance(f,few)
instance(o2,only)
instance(p,planet)
instance(t,tiny)
instance(p2,prince)
instance(l,little)
instance(i,i)
ARG1(s2,c2)
ARG2(c2,o)
ARG2(o,m)
ARG0(m,p2)
ARG1(p2,c)
poss(c,p2)
extent(c,s)
quant(s,f)
mod(s,o2)
location(s,p)
mod(p,t)
poss(p,p2)
mod(p2,l)
poss(p2,i)
ARG2(p2,p2)

# ::snt You can see the day end and the twilight falling whenever you like ...
instance(p,possible-01)
instance(s,see-01)
instance(y,you)
instance(a,and)
instance(e,end-01)
instance(d,day)
instance(f,fall-04)
instance(t,twilight)
instance(l,like-02)
instance(a2,any)
ARG1(p,s)
ARG0(s,y)
ARG1(s,a)
op1(a,e)
ARG1(e,d)
op2(e,f)
ARG1(f,t)
time(f,l)
ARG0(l,y)
ARG1(y,s)
mod(s,a2)

# ::snt " One day , " you said to me , " I saw the sunset forty - four times ! "
instance(s,say-01)
instance(y,you)
instance(s2,see-01)
instance(s3,sunset)
instance(d,day)
instance(o,one)
instance(i,i)
ARG0(s,y)
ARG1(s,s2)
ARG0(s2,y)
ARG1(y,s3)
time(y,d)
mod(d,o)
ARG2(d,i)

# ::snt And a little later you added : " You know -- one loves the sunset , when one is so sad ... "
instance(a,and)
instance(a2,add-01)
instance(y,you)
instance(l3,love-01)
instance(o,one)
instance(s,sunset)
instance(s2,sad-02)
instance(s3,so)
instance(a3,after)
instance(l2,little)
op1(a,a2)
ARG0(a2,y)
ARG1(a2,l3)
ARG0(l3,o)
ARG1(l3,s)
time(l3,s2)
ARG1(s2,o)
mod(o,s3)
time(o,a3)
quant(a3,l2)

# ::snt " Were you so sad , then ? "
instance(s,sad-02)
instance(y,you)
instance(t,then)
instance(s2,so)
ARG1(s,y)
time(s,t)
degree(s,s2)

# ::snt I asked , " on the day of the forty - four sunsets ? "
instance(a,ask-01)
instance(i,i)
instance(t,truth-value)
instance(b,be-temporally-at-91)
instance(d,day)
instance(h,have-03)
instance(s,sunset)
ARG0(a,i)
ARG1(a,t)
polarity-of(t,b)
ARG2(b,d)
ARG0-of(d,h)
ARG1(h,s)

# ::snt But the little prince made no reply .
instance(c,contrast-01)
instance(r,reply-01)
instance(p,prince)
instance(l,little)
ARG2(c,r)
ARG0(r,p)
mod(p,l)

# ::snt Chapter 7 .
instance(c,chapter)

# ::snt On the fifth day -- again , as always , it was thanks to the sheep -- the secret of the little prince 's life was revealed to me .
instance(r,reveal-01)
instance(s,sheep)
instance(t,thank-01)
instance(s2,secret)
instance(l,life)
instance(p,prince)
instance(l2,little)
instance(i,i)
instance(d,day)
instance(o,ordinal-entity)
instance(a,again)
instance(a2,always)
ARG0(r,s)
ARG1-of(s,t)
ARG1(s,s2)
poss(s2,l)
poss(l,p)
mod(p,l2)
ARG2(p,i)
time(p,d)
ord(d,o)
mod(d,a)
time(d,a2)

# ::snt Abruptly , without anything to lead up to it , and as if the question had been born of long and silent meditation on his problem , he demanded : " A sheep -- if it eats little bushes , does it eat flowers , too ? "
instance(d,demand-01)
instance(h,he)
instance(t3,truth-value)
instance(e,eat-01)
instance(s,sheep)
instance(f,flower)
instance(t,too)
instance(e2,eat-01)
instance(b,bush)
instance(l,little)
instance(a,abrupt)
instance(b2,bear-02)
instance(m,meditate-01)
instance(p,problem)
instance(l3,long-03)
instance(s2,silent)
instance(t2,thing)
instance(q,question-01)
instance(l2,lead-up-05)
instance(a2,anything)
ARG0(d,h)
ARG1(d,t3)
polarity-of(t3,e)
ARG0(e,s)
ARG1(e,f)
mod(f,t)
condition(f,e2)
ARG0(e2,s)
ARG1(s,b)
mod(b,l)
manner(b,a)
conj-as-if(b,b2)
ARG0(b2,m)
ARG1(m,p)
poss(p,h)
ARG1-of(p,l3)
manner(p,s2)
ARG1(p,t2)
ARG1-of(t2,q)
ARG2-of(t2,l2)
ARG1(l2,a2)

# ::snt " A sheep , "
instance(s,sheep)

# ::snt I answered , " eats anything it finds in its reach . "
instance(a,answer-01)
instance(i,i)
instance(e,eat-01)
instance(a2,anything)
instance(f,find-01)
instance(i2,it)
instance(r,reach-03)
ARG0(a,i)
ARG1(a,e)
ARG1(e,a2)
ARG1-of(a2,f)
ARG0(f,i2)
location(f,r)
ARG0(r,i2)

# ::snt " Even flowers that have thorns ? "
instance(f,flower)
instance(e,even)
instance(h,have-03)
instance(t,thorn)
mod(f,e)
ARG0-of(f,h)
ARG1(h,t)

# ::snt " Yes , even flowers that have thorns . "
instance(f,flower)
instance(e,even)
instance(h,have-03)
instance(t,thorn)
mod(f,e)
ARG0-of(f,h)
ARG1(h,t)

# ::snt " Then the thorns -- what use are they ? "
instance(h,have-purpose-91)
instance(t,thorn)
instance(a,amr-unknown)
instance(h2,have-condition-91)
ARG1(h,t)
ARG2(h,a)
ARG1-of(h,h2)

# ::snt I did not know .
instance(k,know-01)
instance(i,i)
instance(-,-)
ARG0(k,i)
polarity(k,-)

# ::snt At that moment I was very busy trying to unscrew a bolt that had got stuck in my engine .
instance(t,try-01)
instance(i,i)
instance(b2,busy-01)
instance(v,very)
instance(u,unscrew-01)
instance(b,bolt)
instance(s,stick-01)
instance(e,engine)
instance(m,moment)
instance(t2,that)
ARG0(t,i)
ARG1-of(i,b2)
degree(b2,v)
ARG1(b2,u)
ARG0(u,i)
ARG1(i,b)
ARG1-of(b,s)
ARG2(s,e)
poss(e,i)
time(e,m)
mod(m,t2)

# ::snt I was very much worried , for it was becoming clear to me that the breakdown of my plane was extremely serious .
instance(c2,cause-01)
instance(c,clear-06)
instance(s,serious-02)
instance(b,break-down-12)
instance(p,plane)
instance(i,i)
instance(e,extreme)
instance(i,i)
instance(w,worry-01)
instance(m,much)
instance(v,very)
ARG0(c2,c)
ARG1(c,s)
ARG1(s,b)
ARG1(b,p)
poss(p,i)
degree(p,e)
ARG2(p,i)
ARG1(p,w)
ARG1(w,i)
quant(i,m)
degree(m,v)

# ::snt And I had so little drinking - water left that I had to fear for the worst .
instance(a,and)
instance(h3,have-degree-91)
instance(w,water)
instance(d,drink-01)
instance(l2,leave-17)
instance(h,have-03)
instance(i,i)
instance(l,little)
instance(s,so)
instance(o,obligate-01)
instance(f,fear-01)
instance(t,thing)
instance(h2,have-degree-91)
instance(b,bad-07)
instance(m,most)
op1(a,h3)
ARG1(h3,w)
purpose(w,d)
ARG1-of(w,l2)
ARG1-of(w,h)
ARG0(h,i)
ARG2(h,l)
ARG3(h,s)
ARG6(h,o)
ARG1(o,i)
ARG2(i,f)
ARG0(f,i)
ARG1(i,t)
ARG1-of(t,h2)
ARG2(h2,b)
ARG3(h2,m)

# ::snt " The thorns - - what use are they ? "
instance(u,use-01)
instance(t,thorn)
instance(a,amr-unknown)
ARG1(u,t)
ARG2(u,a)

# ::snt The little prince never let go of a question , once he had asked it .
instance(l,let-01)
instance(p,prince)
instance(l2,little)
instance(g,go-01)
instance(t,thing)
instance(q,question-01)
instance(o,once)
instance(a,ask-01)
ARG0(l,p)
mod(p,l2)
ARG1(p,g)
ARG1(g,t)
ARG1-of(t,q)
ARG0(q,p)
time(q,o)
op1(o,a)
ARG0(a,p)
ARG1(p,q)

# ::snt As for me , I was upset over that bolt .
instance(u,upset-01)
instance(b,bolt)
instance(t,that)
instance(i,i)
ARG0(u,b)
mod(b,t)
ARG1(b,i)

# ::snt And I answered with the first thing that came into my head : " The thorns are of no use at all .
instance(a,and)
instance(a2,answer-01)
instance(i,i)
instance(t,thing)
instance(o,ordinal-entity)
instance(c,come-01)
instance(h,head)
instance(u,use-01)
instance(t2,thorn)
instance(a3,at-all)
op1(a,a2)
ARG0(a2,i)
ARG2(a2,t)
ord(t,o)
ARG1-of(t,c)
ARG4(c,h)
part-of(h,i)
domain(h,u)
ARG1(u,t2)
ARG2(u,a3)

# ::snt Flowers have thorns just for spite ! "
instance(h,have-03)
instance(f,flower)
instance(t,thorn)
instance(s,spite)
instance(j,just)
ARG0(h,f)
ARG1(h,t)
purpose(h,s)
mod(h,j)

# ::snt " Oh ! "
instance(o,oh)

# ::snt There was a moment of complete silence .
instance(m,moment)
instance(c,compose-01)
instance(s,silent)
instance(c2,complete-02)
ARG1-of(m,c)
ARG2(c,s)
ARG1-of(s,c2)

# ::snt Then the little prince flashed back at me , with a kind of resentfulness : " I do n't believe you !
instance(f,flash-01)
instance(p,prince)
instance(l,little)
instance(b,believe-01)
instance(i,i)
instance(i,i)
instance(t,then)
instance(r,resent-01)
instance(k,kind)
instance(b2,back)
ARG0(f,p)
mod(p,l)
ARG1(p,b)
ARG0(b,p)
ARG1(p,i)
ARG2(p,i)
time(p,t)
manner(p,r)
ARG0(r,p)
mod(p,k)
direction(p,b2)

# ::snt Flowers are weak creatures .
instance(c,creature)
instance(w,weak-02)
instance(f,flower)
ARG1-of(c,w)
domain(c,f)

# ::snt They are naïve .
instance(n,naive)
instance(t,they)
domain(n,t)

# ::snt They reassure themselves as best they can .
instance(h,have-degree-91)
instance(r,reassure-01)
instance(t,they)
instance(g,good-03)
instance(e,equal)
instance(p2,possible-01)
instance(r2,reassure-01)
ARG1(h,r)
ARG0(r,t)
ARG1(r,t)
ARG2(r,g)
ARG1(g,t)
ARG2(t,r)
ARG3(t,e)
ARG4(t,p2)
ARG1(p2,r2)
ARG0(r2,t)
ARG1(t,t)

# ::snt They believe that their thorns are terrible weapons ... "
instance(b2,believe-01)
instance(t,they)
instance(w,weapon)
instance(t2,thorn)
instance(t3,terrible-01)
ARG0(b2,t)
ARG1(b2,w)
domain(w,t2)
poss(t2,t)
ARG1-of(t2,t3)

# ::snt I did not answer .
instance(a,answer-01)
instance(i,i)
instance(-,-)
ARG0(a,i)
polarity(a,-)

# ::snt At that instant I was saying to myself : " If this bolt still will n't turn , I am going to knock it out with the hammer . "
instance(s,say-01)
instance(i,i)
instance(k,knock-out-03)
instance(b,b)
instance(h,hammer)
instance(t2,turn-01)
instance(b,bolt)
instance(t3,this)
instance(s2,still)
instance(i2,instant)
instance(t,that)
ARG0(s,i)
ARG1(s,k)
ARG0(k,i)
ARG1(i,b)
ARG2(b,h)
condition(b,t2)
ARG1(t2,b)
mod(b,t3)
mod(b,s2)
ARG2(b,i)
time(i,i2)
mod(i2,t)

# ::snt Again the little prince disturbed my thoughts .
instance(d,disturb-01)
instance(p,prince)
instance(l,little)
instance(t,think-01)
instance(i,i)
instance(a,again)
ARG0(d,p)
mod(p,l)
ARG1(p,t)
ARG0(t,i)
mod(t,a)

# ::snt " And you actually believe that the flowers - - "
instance(a,and)
instance(b,believe-01)
instance(y,you)
instance(d,do-02)
instance(f,flower)
instance(a2,actual-02)
op1(a,b)
ARG0(b,y)
ARG1(b,d)
ARG0(d,f)
ARG1-of(d,a2)

# ::snt " Oh , no ! "
instance(n,no)
instance(o,oh)
mod(n,o)

# ::snt I cried .
instance(c,cry-01)
instance(i,i)
ARG0(c,i)

# ::snt " No , no no !
instance(n,no)

# ::snt I do n't believe anything .
instance(b2,believe-01)
instance(i,i)
instance(a2,anything)
ARG0(b2,i)
ARG1(b2,a2)

# ::snt I answered you with the first thing that came into my head .
instance(a,answer-01)
instance(i,i)
instance(y,you)
instance(t,thing)
instance(o,ordinal-entity)
instance(c,come-01)
instance(h,head)
ARG0(a,i)
ARG1(a,y)
ARG2(a,t)
ord(t,o)
ARG1-of(t,c)
ARG4(c,h)
part-of(h,i)

# ::snt Do n't you see - - I am very busy with matters of consequence ! "
instance(s,see-01)
instance(y,you)
instance(b,busy-01)
instance(i,i)
instance(m,matter)
instance(c,consequential-01)
instance(v,very)
instance(r,request-confirmation-91)
ARG0(s,y)
ARG1(s,b)
ARG1(b,i)
ARG2(b,m)
ARG1-of(m,c)
degree(m,v)
ARG1-of(m,r)

# ::snt He stared at me , thunderstruck .
instance(s,stare-01)
instance(h,he)
instance(t,thunderstruck)
instance(i,i)
ARG0(s,h)
mod(h,t)
ARG1(h,i)

# ::snt " Matters of consequence ! "
instance(m,matter)
instance(c,consequential-01)
ARG1-of(m,c)

# ::snt He looked at me there , with my hammer in my hand , my fingers black with engine - grease , bending down over an object which seemed to him extremely ugly ...
instance(l,look-01)
instance(h,he)
instance(i,i)
instance(b2,bend-01)
instance(d,down)
instance(o,object)
instance(u,ugly)
instance(s,seem-01)
instance(e2,extreme)
instance(h4,have-03)
instance(h2,hammer)
instance(h3,hand)
instance(h5,have-03)
instance(f,finger)
instance(b,black-04)
instance(g,grease)
instance(e,engine)
instance(t,there)
ARG0(l,h)
ARG1(l,i)
ARG0-of(i,b2)
destination(b2,d)
location(b2,o)
mod(o,u)
mod(u,s)
ARG2(s,h)
degree(s,e2)
ARG0-of(s,h4)
ARG1(h4,h2)
poss(h2,i)
location(h2,h3)
part-of(h3,i)
ARG0-of(h3,h5)
ARG1(h5,f)
part-of(f,i)
ARG1-of(i,b)
ARG0(b,g)
mod(g,e)
location(g,t)

# ::snt " You talk just like the grown - ups ! "
instance(t2,talk-01)
instance(y,you)
instance(r,resemble-01)
instance(g2,grown-up)
instance(j2,just)
ARG0(t2,y)
ARG1-of(t2,r)
ARG2(r,g2)
mod(r,j2)

# ::snt That made me a little ashamed .
instance(s,shame-01)
instance(t,that)
instance(i,i)
instance(l,little)
ARG0(s,t)
ARG1(s,i)
degree(s,l)

# ::snt But he went on , relentlessly : " You mix everything up together ...
instance(c,contrast-01)
instance(g,go-on-25)
instance(h,he)
instance(m,mix-up-02)
instance(y,you)
instance(e,everything)
instance(t,together)
instance(r,relentless)
ARG2(c,g)
ARG0(g,h)
ARG1(g,m)
ARG0(m,y)
ARG1(m,e)
ARG3(m,t)
manner(m,r)

# ::snt You confuse everything ... "
instance(c2,confuse-01)
instance(y2,you)
instance(e2,everything)
ARG0(c2,y2)
ARG2(c2,e2)

# ::snt He was really very angry .
instance(a,angry)
instance(h,he)
instance(v,very)
instance(r,real-04)
domain(a,h)
degree(a,v)
ARG1-of(a,r)

# ::snt He tossed his golden curls in the breeze .
instance(t,toss-01)
instance(h,he)
instance(c,curl)
instance(g,golden)
instance(b,breeze)
ARG0(t,h)
ARG1(t,c)
poss(c,h)
mod(h,g)
location(h,b)

# ::snt " I know a planet where there is a certain red - faced gentleman .
instance(k,know-02)
instance(i,i)
instance(p,planet)
instance(g2,gentleman)
instance(c,certain)
instance(f,face)
instance(r,red-02)
ARG0(k,i)
ARG1(k,p)
location-of(p,g2)
mod(g2,c)
part(g2,f)
ARG1-of(f,r)

# ::snt He has never smelled a flower .
instance(s,smell-01)
instance(h,he)
instance(f,flower)
instance(e,ever)
ARG0(s,h)
ARG1(s,f)
time(s,e)

# ::snt He has never looked at a star .
instance(l,look-01)
instance(h,he)
instance(s,star)
instance(e,ever)
ARG0(l,h)
ARG1(l,s)
time(l,e)

# ::snt He has never loved any one .
instance(l2,love-01)
instance(h3,he)
instance(a2,anyone)
instance(e,ever)
ARG0(l2,h3)
ARG1(l2,a2)
time(l2,e)

# ::snt He has never done anything in his life but add up figures .
instance(d,do-02)
instance(h,he)
instance(a2,anything)
instance(l,live-01)
instance(e,ever)
instance(e2,except-01)
instance(a,add-up-04)
instance(f,figure)
ARG0(d,h)
ARG1(d,a2)
time(d,l)
ARG0(l,h)
time(l,e)
ARG2-of(l,e2)
ARG1(e2,a)
ARG0(a,h)
ARG1(h,f)

# ::snt And all day he says over and over , just like you : ' I am busy with matters of consequence ! ' And that makes him swell up with pride .
instance(m2,multi-sentence)
instance(a,and)
instance(s,say-01)
instance(h,he)
instance(b,busy-01)
instance(m,matter)
instance(c,consequential-01)
instance(d,day)
instance(a2,all)
instance(o,over-and-over)
instance(r,resemble-01)
instance(y,you)
instance(j,just)
instance(c3,cause-01)
instance(a3,and)
instance(m3,make-02)
instance(t,that)
instance(s2,swell-01)
instance(h2,h2)
instance(p,pride-01)
instance(h2,he)
snt1(m2,a)
op1(a,s)
ARG0(s,h)
ARG1(s,b)
ARG1(b,h)
ARG2(h,m)
ARG1-of(m,c)
time(m,d)
mod(d,a2)
frequency(d,o)
manner(d,r)
ARG2(r,y)
mod(r,j)
ARG0-of(r,c3)
snt2(r,a3)
op1(a3,m3)
ARG0(m3,t)
ARG1(m3,s2)
ARG0(s2,t)
ARG1(t,h2)
manner(h2,p)
ARG0(p,h2)
ARG2(p,t)

# ::snt But he is not a man - - he is a mushroom ! "
instance(c,contrast-01)
instance(a,and)
instance(m,man)
instance(h,h)
instance(m2,mushroom)
instance(h,he)
ARG2(c,a)
op1(a,m)
domain(m,h)
op2(m,m2)
domain(m2,h)

# ::snt " A what ? "
instance(a,amr-unknown)

# ::snt " A mushroom ! "
instance(m,mushroom)

# ::snt The little prince was now white with rage .
instance(w,white-03)
instance(p,prince)
instance(l,little)
instance(n,now)
instance(c,cause-01)
instance(e,enrage-01)
ARG1(w,p)
mod(p,l)
time(p,n)
ARG1-of(p,c)
ARG0(c,e)
ARG1(e,p)

# ::snt " The flowers have been growing thorns for millions of years .
instance(g,grow-03)
instance(f,flower)
instance(t,thorn)
instance(m,multiple)
instance(t2,temporal-quantity)
instance(y,year)
ARG0(g,f)
ARG1(g,t)
duration(g,m)
op1(m,t2)
unit(t2,y)

# ::snt For millions of years the sheep have been eating them just the same .
instance(e,eat-01)
instance(s,sheep)
instance(t,they)
instance(m,multiple)
instance(t2,temporal-quantity)
instance(y,year)
instance(h,have-concession-91)
ARG0(e,s)
ARG1(e,t)
duration(e,m)
op1(m,t2)
unit(t2,y)
ARG1-of(t2,h)

# ::snt And is it not a matter of consequence to try to understand why the flowers go to so much trouble to grow thorns which are never of any use to them ?
instance(a,and)
instance(c,consequential-01)
instance(t,try-01)
instance(u,understand-01)
instance(t4,thing)
instance(c2,cause-01)
instance(t2,trouble-05)
instance(f,flower)
instance(g2,grow-01)
instance(t3,thorn)
instance(u2,use-01)
instance(e2,ever)
instance(m,much)
instance(s,so)
instance(r,request-confirmation-91)
op1(a,c)
ARG1(c,t)
ARG1(t,u)
ARG1(u,t4)
ARG0-of(t4,c2)
ARG1(c2,t2)
ARG1(t2,f)
ARG2(t2,g2)
ARG0(g2,f)
ARG1(f,t3)
ARG1-of(t3,u2)
ARG0(u2,f)
time(f,e2)
quant(f,m)
degree(m,s)
ARG1-of(m,r)

# ::snt Is the warfare between the sheep and the flowers not important ?
instance(i,important-01)
instance(w,war-01)
instance(s,sheep)
instance(f,flower)
instance(r,request-confirmation-91)
ARG1(i,w)
ARG0(w,s)
ARG1(w,f)
ARG1-of(w,r)

# ::snt Is this not of more consequence than a fat red - faced gentleman 's sums ?
instance(h3,have-degree-91)
instance(t,this)
instance(c,consequential-01)
instance(m2,more)
instance(s,sum)
instance(g,gentleman)
instance(f,fat-03)
instance(f2,face)
instance(r,red-02)
instance(r2,request-confirmation-91)
ARG1(h3,t)
ARG2(h3,c)
ARG1(c,t)
ARG3(c,m2)
ARG4(c,s)
poss(s,g)
ARG1-of(g,f)
part(g,f2)
ARG1-of(f2,r)
ARG1-of(f2,r2)

# ::snt And if I know - - I , myself - - one flower which is unique in the world , which grows nowhere but on my planet , but which one little sheep can destroy in a single bite some morning , without even noticing what he is doing - - Oh !
instance(a,and)
instance(o,oh)
instance(k,know-02)
instance(i,i)
instance(f,flower)
instance(u,unique-01)
instance(w,world)
instance(g,grow-01)
instance(c,contrast-01)
instance(n,nowhere)
instance(p,planet)
instance(d,destroy-01)
instance(s,sheep)
instance(l,little)
instance(n2,notice-01)
instance(b,bite-01)
instance(s3,single-02)
instance(c2,c2)
instance(p2,possible-01)
instance(d2,date-entity)
instance(m,morning)
instance(s2,some)
instance(c2,contrast-01)
op1(a,o)
condition(o,k)
ARG0(k,i)
ARG1(k,f)
ARG1-of(f,u)
ARG3(u,w)
ARG1-of(u,g)
location(g,c)
ARG0(c,n)
ARG1(c,p)
poss(p,i)
ARG1-of(p,d)
ARG0(d,s)
mod(s,l)
ARG0-of(s,n2)
ARG1(n2,d)
ARG2(n2,b)
ARG1-of(b,s3)
ARG2-of(b,c2)
ARG1-of(c2,p2)
time(c2,d2)
dayperiod(d2,m)
mod(d2,s2)
ARG1-of(d2,c2)

# ::snt You think that is not important ! "
instance(t,think-01)
instance(y,you)
instance(t2,that)
instance(i,important-01)
ARG0(t,y)
ARG1(t,t2)
ARG1-of(t2,i)

# ::snt His face turned from white to red as he continued : " If some one loves a flower , of which just one single blossom grows in all the millions and millions of stars , it is enough to make him happy just to look at the stars .
instance(t,turn-02)
instance(f,face)
instance(h,he)
instance(r,red-02)
instance(w,white-03)
instance(c,continue-02)
instance(h3,have-quant-91)
instance(l,love-01)
instance(s,someone)
instance(f2,flower)
instance(b,blossom)
instance(j,just)
instance(g,grow-01)
instance(s2,star)
instance(a2,all)
instance(m2,multiple)
instance(s4,single-02)
instance(e,enough)
instance(m,make-02)
instance(h2,happy-01)
instance(c2,cause-01)
instance(l2,look-01)
instance(j2,just)
ARG1(t,f)
part-of(f,h)
ARG2(f,r)
ARG1(r,f)
ARG3(r,w)
ARG1(w,f)
time(w,c)
ARG0(c,h)
ARG1(h,h3)
ARG1(h3,l)
ARG0(l,s)
ARG1(l,f2)
part(f2,b)
mod(b,j)
ARG1-of(b,g)
location(g,s2)
mod(s2,a2)
quant(s2,m2)
ARG1-of(s2,s4)
ARG3(s2,e)
ARG6(s2,m)
ARG0(m,l)
ARG1(l,h2)
ARG1(h2,s)
ARG1-of(h2,c2)
ARG0(c2,l2)
ARG0(l2,s)
ARG1(s,s2)
mod(s2,j2)

# ::snt He can say to himself , ' Somewhere , my flower is there ... ' But if the sheep eats the flower , in one moment all his stars will be darkened ...
instance(p2,possible-01)
instance(s,say-01)
instance(h,he)
instance(c,contrast-01)
instance(b,be-located-at-91)
instance(f2,flower)
instance(t2,there)
instance(d,darken-01)
instance(s4,star)
instance(a,all)
instance(e2,eat-01)
instance(s3,sheep)
instance(m,moment)
ARG1(p2,s)
ARG0(s,h)
ARG1(s,c)
ARG1(c,b)
ARG1(b,f2)
poss(f2,h)
ARG2(f2,t2)
ARG2(f2,d)
ARG1(d,s4)
mod(s4,a)
poss(s4,h)
condition(s4,e2)
ARG0(e2,s3)
ARG1(e2,f2)
time(e2,m)
ARG2(e2,h)

# ::snt And you think that is not important ! "
instance(a2,and)
instance(t,think-01)
instance(y,you)
instance(i,important-01)
instance(t2,that)
op1(a2,t)
ARG0(t,y)
ARG1(t,i)
ARG1(i,t2)

# ::snt He could not say anything more .
instance(p,possible-01)
instance(s,say-01)
instance(h,he)
instance(a,anything)
instance(m,more)
ARG1(p,s)
ARG0(s,h)
ARG1(s,a)
mod(a,m)

# ::snt His words were choked by sobbing .
instance(c,choke-up-04)
instance(s,sob-01)
instance(w,word)
instance(h,he)
ARG0(c,s)
ARG1(c,w)
poss(w,h)

# ::snt The night had fallen .
instance(f,fall-04)
instance(n,night)
ARG1(f,n)

# ::snt I had let my tools drop from my hands .
instance(l,let-01)
instance(i,i)
instance(d,drop-01)
instance(t,tool)
instance(h,hand)
ARG0(l,i)
ARG1(l,d)
ARG1(d,t)
poss(t,i)
ARG3(t,h)
part-of(h,i)

# ::snt Of what moment now was my hammer , my bolt , or thirst , or death ?
instance(o,or)
instance(h,hammer)
instance(i,i)
instance(b,bolt)
instance(t,thirst-01)
instance(d,die-01)
instance(m,moment)
instance(a,amr-unknown)
op1(o,h)
poss(h,i)
op2(h,b)
poss(b,i)
op3(b,t)
ARG0(t,i)
op4(t,d)
ARG1(d,i)
time(d,m)
mod(m,a)

# ::snt On one star , one planet , my planet , the Earth , there was a little prince to be comforted .
instance(b,be-located-at-91)
instance(p,prince)
instance(l,little)
instance(c,comfort-01)
instance(o,obligate-01)
instance(a,and)
instance(s,star)
instance(p2,planet)
instance(p4,planet)
instance(n,name)
instance(i,i)
ARG1(b,p)
mod(p,l)
ARG1-of(p,c)
ARG2-of(c,o)
ARG2(c,a)
op1(a,s)
op2(a,p2)
op3(a,p4)
name(p4,n)
poss(p4,i)

# ::snt I took him in my arms , and rocked him .
instance(a,and)
instance(t,take-01)
instance(i,i)
instance(h,he)
instance(a2,arm)
instance(r,rock-01)
op1(a,t)
ARG0(t,i)
ARG1(t,h)
ARG3(t,a2)
part-of(a2,i)
op2(a2,r)
ARG0(r,i)
ARG1(i,h)

# ::snt I said to him : " The flower that you love is not in danger .
instance(s,say-01)
instance(i,i)
instance(e,endanger-01)
instance(f,flower)
instance(l,love-01)
instance(h,h)
instance(h,he)
ARG0(s,i)
ARG1(s,e)
ARG1(e,f)
ARG1-of(f,l)
ARG0(l,h)
ARG2(l,h)

# ::snt I will draw you a muzzle for your sheep .
instance(d,draw-01)
instance(i,i)
instance(t,thing)
instance(m,muzzle-01)
instance(s,sheep)
instance(y,y)
instance(y,you)
ARG0(d,i)
ARG1(d,t)
ARG2-of(t,m)
ARG1(m,s)
poss(s,y)
ARG2(s,y)

# ::snt I will draw you a railing to put around your flower .
instance(d2,draw-01)
instance(i,i)
instance(r,railing)
instance(p,put-01)
instance(a,around)
instance(f,flower)
instance(y,y)
instance(y,you)
ARG0(d2,i)
ARG1(d2,r)
ARG1-of(r,p)
ARG2(p,a)
op1(a,f)
poss(f,y)
ARG2(f,y)

# ::snt I will - - "
instance(d,do-02)
instance(i,i)
ARG0(d,i)

# ::snt I did not know what to say to him .
instance(k,know-01)
instance(i,i)
instance(t,thing)
instance(s,say-01)
instance(h,he)
ARG0(k,i)
ARG1(k,t)
ARG1-of(t,s)
ARG0(s,i)
ARG2(i,h)

# ::snt I felt awkward and blundering .
instance(f,feel-01)
instance(i,i)
instance(a,and)
instance(a2,awkward)
instance(b,blunder-01)
ARG0(f,i)
ARG1(f,a)
op1(a,a2)
op2(a,b)
ARG0(b,i)

# ::snt I did not know how I could reach him , where I could overtake him and go on hand in hand with him once more .
instance(k,know-01)
instance(i,i)
instance(a2,and)
instance(m,manner)
instance(r,reach-02)
instance(h,he)
instance(p,possible-01)
instance(l,location)
instance(o,overtake-01)
instance(p2,possible-01)
instance(g,go-on-15)
instance(a3,again)
instance(o2,once)
instance(a,accompany-01)
instance(h2,hand-in-hand)
ARG0(k,i)
ARG1(k,a2)
op1(a2,m)
manner-of(m,r)
ARG0(r,i)
ARG1(i,h)
ARG1-of(i,p)
op2(i,l)
location-of(l,o)
ARG0(o,i)
ARG1(i,h)
ARG1-of(h,p2)
location-of(h,g)
ARG1(g,i)
mod(i,a3)
mod(a3,o2)
manner(a3,a)
ARG0(a,h)
ARG1(h,i)
manner(i,h2)

# ::snt It is such a secret place , the land of tears .
instance(p,place)
instance(s,secret)
instance(s2,such)
instance(l,land)
instance(t,tear)
mod(p,s)
degree(s,s2)
domain(s,l)
location-of(l,t)

# ::snt Chapter 8 .
instance(c,chapter)

# ::snt I soon learned to know this flower better .
instance(l,learn-01)
instance(i,i)
instance(k,know-02)
instance(f,flower)
instance(t,this)
instance(h,have-degree-91)
instance(g,good-03)
instance(m,more)
instance(s,soon)
ARG0(l,i)
ARG1(l,k)
ARG0(k,i)
ARG1(i,f)
mod(f,t)
ARG1-of(f,h)
ARG2(h,g)
ARG1(g,k)
ARG3(g,m)
time(g,s)

# ::snt On the little prince 's planet the flowers had always been very simple .
instance(s,simple-02)
instance(f,flower)
instance(v,very)
instance(a,always)
instance(p,planet)
instance(p2,prince)
instance(l,little)
ARG1(s,f)
degree(s,v)
time(s,a)
location(s,p)
poss(p,p2)
mod(p2,l)

# ::snt They had only one ring of petals ; they took up no room at all ; they were a trouble to nobody .
instance(m,multi-sentence)
instance(h,have-03)
instance(t,they)
instance(r,ring)
instance(o,only)
instance(p,petal)
instance(t2,take-up-13)
instance(r2,room)
instance(a,at-all)
instance(t3,trouble-01)
instance(a2,anybody)
snt1(m,h)
ARG0(h,t)
ARG1(h,r)
mod(r,o)
consist-of(r,p)
snt2(r,t2)
ARG0(t2,t)
ARG1(t,r2)
degree(t,a)
snt3(t,t3)
ARG0(t3,t)
ARG1(t,a2)

# ::snt One morning they would appear in the grass , and by night they would have faded peacefully away .
instance(a,and)
instance(a2,appear-01)
instance(t,they)
instance(d,date-entity)
instance(m,morning)
instance(o,one)
instance(g,grass)
instance(f,fade-01)
instance(p,peaceful)
instance(b,by)
instance(n,night)
op1(a,a2)
ARG1(a2,t)
time(a2,d)
dayperiod(d,m)
mod(d,o)
location(d,g)
op2(d,f)
ARG1(f,t)
manner(t,p)
time(t,b)
op1(b,n)

# ::snt But one day , from a seed blown from no one knew where , a new flower had come up ; and the little prince had watched very closely over this small sprout which was not like any other small sprouts on his planet .
instance(a,and)
instance(c,contrast-01)
instance(c2,come-up-13)
instance(f,flower)
instance(n,new-01)
instance(s,seed)
instance(b,blow-01)
instance(l2,location)
instance(k,know-01)
instance(d,day)
instance(o,one)
instance(w,watch-over-03)
instance(p,prince)
instance(l,little)
instance(s2,sprout)
instance(s3,small)
instance(t,this)
instance(r,resemble-01)
instance(s4,sprout)
instance(s5,small)
instance(o2,other)
instance(a3,any)
instance(p2,planet)
instance(c3,close-10)
instance(v,very)
op1(a,c)
ARG2(c,c2)
ARG1(c2,f)
ARG1-of(f,n)
source(f,s)
ARG1-of(s,b)
source(b,l2)
ARG1-of(l2,k)
time(l2,d)
mod(d,o)
op2(d,w)
ARG0(w,p)
mod(p,l)
ARG1(p,s2)
mod(s2,s3)
mod(s2,t)
ARG1-of(s2,r)
ARG2(r,s4)
mod(s4,s5)
mod(s4,o2)
mod(o2,a3)
location(o2,p2)
poss(p2,p)
ARG1-of(p2,c3)
degree(c3,v)

# ::snt It might , you see , have been a new kind of baobab .
instance(p,possible-01)
instance(b2,baobab)
instance(k,kind)
instance(n,new-01)
instance(i,it)
ARG1(p,b2)
mod(b2,k)
ARG1-of(k,n)
domain(k,i)

# ::snt The shrub soon stopped growing , and began to get ready to produce a flower .
instance(a,and)
instance(s,stop-01)
instance(s2,shrub)
instance(g,grow-01)
instance(s3,soon)
instance(b,begin-01)
instance(r,ready-01)
instance(p,produce-01)
instance(f,flower)
op1(a,s)
ARG0(s,s2)
ARG1(s,g)
ARG1(g,s2)
time(g,s3)
op2(g,b)
ARG0(b,s2)
ARG1(s2,r)
ARG0(r,s2)
ARG1(s2,s2)
ARG2(s2,p)
ARG0(p,s2)
ARG1(s2,f)

# ::snt The little prince , who was present at the first appearance of a huge bud , felt at once that some sort of miraculous apparition must emerge from it .
instance(f,feel-01)
instance(p,prince)
instance(l,little)
instance(p2,present-02)
instance(a,appear-01)
instance(b,bud)
instance(h,huge)
instance(o2,ordinal-entity)
instance(o,obligate-01)
instance(e,emerge-01)
instance(t,thing)
instance(a4,appear-01)
instance(m,miraculous)
instance(s,sort)
instance(a2,at-once-01)
ARG0(f,p)
mod(p,l)
ARG1-of(p,p2)
ARG2(p2,a)
ARG1(a,b)
mod(b,h)
ord(b,o2)
ARG1(b,o)
ARG2(o,e)
ARG0(e,t)
ARG1-of(t,a4)
manner(a4,m)
mod(a4,s)
ARG1(a4,b)
time(a4,a2)

# ::snt But the flower was not satisfied to complete the preparations for her beauty in the shelter of her green chamber .
instance(c,contrast-01)
instance(s,satisfy-01)
instance(c2,complete-01)
instance(f,f)
instance(p,prepare-02)
instance(b,beautiful-02)
instance(c3,chamber)
instance(g,green-02)
instance(s2,shelter-01)
instance(f,flower)
ARG1(c,s)
ARG0(s,c2)
ARG0(c2,f)
ARG1(f,p)
ARG0(p,f)
ARG1(f,b)
ARG1(b,f)
location(b,c3)
ARG1-of(c3,g)
poss(c3,f)
ARG2-of(f,s2)
ARG1(f,f)

# ::snt She chose her colours with the greatest care .
instance(c,choose-01)
instance(s,she)
instance(c2,color)
instance(c3,care-04)
instance(h,have-degree-91)
instance(g,great)
instance(m,most)
ARG0(c,s)
ARG1(c,c2)
poss(c2,s)
manner(c2,c3)
ARG1-of(c3,h)
ARG2(h,g)
ARG3(h,m)

# ::snt She adjusted her petals one by one .
instance(a,adjust-01)
instance(s,she)
instance(p,petal)
instance(o,one-by-one)
ARG0(a,s)
ARG1(a,p)
poss(p,s)
manner(p,o)

# ::snt She did not wish to go out into the world all rumpled , like the field poppies .
instance(w,wish-01)
instance(s,she)
instance(r,rumple-02)
instance(a,all)
instance(r2,resemble-01)
instance(p,poppy)
instance(f,field)
instance(g,go-out-17)
instance(w2,world)
ARG0(w,s)
ARG1-of(s,r)
mod(r,a)
ARG1-of(r,r2)
ARG2(r2,p)
mod(p,f)
ARG1(p,g)
ARG0(g,s)
destination(s,w2)

# ::snt It was only in the full radiance of her beauty that she wished to appear .
instance(w,wish-01)
instance(s,she)
instance(a,appear-01)
instance(r,radiate-01)
instance(b,beautiful-02)
instance(f2,full)
instance(o,only)
ARG0(w,s)
ARG1(w,a)
ARG1(a,s)
manner(s,r)
ARG0(r,s)
ARG1(s,b)
ARG1(b,s)
degree(b,f2)
mod(b,o)

# ::snt Oh , yes !
instance(y,yes)

# ::snt She was a coquettish creature !
instance(r,resemble-01)
instance(s,she)
instance(c,creature)
instance(c2,coquet)
ARG1(r,s)
ARG2(r,c)
mod(c,c2)

# ::snt And her mysterious adornment lasted for days and days .
instance(a,and)
instance(l,last-01)
instance(t,thing)
instance(a2,adorn-01)
instance(s,she)
instance(m,mysterious)
instance(m2,multiple)
instance(t2,temporal-quantity)
instance(d,day)
op1(a,l)
ARG1(l,t)
ARG2-of(t,a2)
ARG1(a2,s)
mod(a2,m)
ARG2(a2,m2)
op1(m2,t2)
unit(t2,d)

# ::snt Then one morning , exactly at sunrise , she suddenly showed herself .
instance(s,show-01)
instance(s2,she)
instance(s3,sudden)
instance(d,date-entity)
instance(m,morning)
instance(o,one)
instance(s4,sunrise)
instance(e,exact)
instance(t,then)
ARG0(s,s2)
ARG1(s,s2)
manner(s2,s3)
time(s2,d)
dayperiod(d,m)
mod(d,o)
time(d,s4)
mod(s4,e)
time(s4,t)

# ::snt And , after working with all this painstaking precision , she yawned and said : " Ah !
instance(a,and)
instance(y,yawn-01)
instance(s2,she)
instance(s,say-01)
instance(a2,ah)
instance(a3,after)
instance(w,work-01)
instance(p,precise)
instance(p2,painstaking)
instance(t,this)
instance(a4,all)
op1(a,y)
ARG0(y,s2)
op2(y,s)
ARG0(s,s2)
ARG1(s2,a2)
time(s2,a3)
op1(a3,w)
ARG0(w,s2)
manner(s2,p)
degree(p,p2)
mod(p,t)
mod(p,a4)

# ::snt I am scarcely awake .
instance(a,awake-03)
instance(i,i)
instance(s,scarce)
ARG1(a,i)
degree(a,s)

# ::snt I beg that you will excuse me .
instance(b2,beg-01)
instance(i,i)
instance(y2,you)
instance(e2,excuse-01)
ARG0(b2,i)
ARG1(b2,y2)
ARG2(b2,e2)
ARG0(e2,y2)
ARG1(y2,i)

# ::snt My petals are still all disarranged ... "
instance(a3,arrange-01)
instance(p2,petal)
instance(i,i)
instance(a4,all)
instance(s4,still)
ARG1(a3,p2)
part-of(p2,i)
mod(p2,a4)
mod(p2,s4)

# ::snt But the little prince could not restrain his admiration : " Oh !
instance(c,contrast-01)
instance(p2,possible-01)
instance(r,restrain-01)
instance(p,prince)
instance(l,little)
instance(s,say-01)
instance(o,oh)
instance(a,admire-01)
ARG2(c,p2)
ARG1(p2,r)
ARG0(r,p)
mod(p,l)
ARG0-of(p,s)
ARG1(s,o)
ARG1(s,a)
ARG0(a,p)

# ::snt How beautiful you are ! "
instance(b,beautiful-02)
instance(y,you)
instance(s,so)
ARG1(b,y)
degree(b,s)

# ::snt " Am I not ? " the flower responded , sweetly .
instance(r,respond-01)
instance(f,flower)
instance(r2,request-confirmation-91)
instance(b,beautiful-02)
instance(s,sweet-03)
ARG0(r,f)
ARG2(r,r2)
ARG1(r2,b)
ARG1(b,f)
manner(b,s)

# ::snt " And I was born at the same moment as the sun ... "
instance(a,and)
instance(b,bear-02)
instance(i,i)
instance(m,moment)
instance(s,same-01)
instance(s2,sun)
op2(a,b)
ARG1(b,i)
time(b,m)
ARG1-of(m,s)
ARG2(s,s2)

# ::snt The little prince could guess easily enough that she was not any too modest - - but how moving - - and exciting - - she was !
instance(p,possible-01)
instance(g,guess-01)
instance(p2,prince)
instance(l,little)
instance(c,contrast-01)
instance(m,modest)
instance(s,she)
instance(t,too)
instance(a2,and)
instance(m2,move-05)
instance(s2,so)
instance(e3,excite-01)
instance(s3,so)
instance(e,easy-05)
instance(e2,enough)
ARG1(p,g)
ARG0(g,p2)
mod(p2,l)
ARG1(p2,c)
ARG1(c,m)
domain(m,s)
degree(m,t)
ARG2(m,a2)
op1(a2,m2)
ARG0(m2,s)
degree(s,s2)
op2(s,e3)
ARG0(e3,s)
degree(s,s3)
ARG1-of(s,e)
mod(e,e2)

# ::snt " I think it is time for breakfast , " she added an instant later .
instance(a,add-01)
instance(s,she)
instance(t,think-01)
instance(t2,time)
instance(b,breakfast-01)
instance(a2,after)
instance(i,instant)
ARG0(a,s)
ARG1(a,t)
ARG0(t,s)
ARG1(s,t2)
purpose(t2,b)
time(t2,a2)
quant(a2,i)

# ::snt " If you would have the kindness to think of my needs - - "
instance(t,think-01)
instance(y,you)
instance(t2,thing)
instance(n,need-01)
instance(i,i)
instance(k2,kind-01)
ARG0(t,y)
ARG1(t,t2)
ARG1-of(t2,n)
ARG0(n,i)
ARG1-of(n,k2)
ARG0(k2,y)
ARG2(y,i)

# ::snt And the little prince , completely abashed , went to look for a sprinkling - can of fresh water .
instance(a,and)
instance(g,go-05)
instance(p,prince)
instance(l2,little)
instance(a2,abash-01)
instance(c3,complete-02)
instance(l,look-01)
instance(c,can)
instance(s,sprinkle-01)
instance(c2,contain-01)
instance(w,water)
instance(f,fresh-04)
op1(a,g)
ARG0(g,p)
mod(p,l2)
ARG1-of(p,a2)
ARG1-of(a2,c3)
ARG1(a2,l)
ARG0(l,p)
ARG1(p,c)
ARG0-of(c,s)
ARG0-of(c,c2)
ARG1(c2,w)
ARG1-of(w,f)

# ::snt So , he tended the flower .
instance(t,tend-01)
instance(h,he)
instance(f,flower)
instance(c,cause-01)
ARG0(t,h)
ARG1(t,f)
ARG1-of(t,c)

# ::snt So , too , she began very quickly to torment him with her vanity - - which was , if the truth be known , a little difficult to deal with .
instance(b,begin-01)
instance(s,she)
instance(t2,torment-01)
instance(h,he)
instance(v2,vanity)
instance(d3,deal-01)
instance(d,difficult)
instance(l,little)
instance(k,know-01)
instance(t3,truth)
instance(t,too)
instance(q,quick-02)
instance(v,very)
ARG0(b,s)
ARG1(b,t2)
ARG0(t2,s)
ARG1(s,h)
ARG2(s,v2)
poss(v2,s)
ARG2-of(s,d3)
ARG0(d3,h)
mod(h,d)
degree(d,l)
condition(d,k)
ARG1(k,t3)
mod(k,t)
ARG1-of(k,q)
degree(q,v)

# ::snt One day , for instance , when she was speaking of her four thorns , she said to the little prince : " Let the tigers come with their claws ! "
instance(s,say-01)
instance(s2,she)
instance(c,come-01)
instance(t,tiger)
instance(c2,claw)
instance(p,prince)
instance(l,little)
instance(d,day)
instance(o,one)
instance(e,exemplify-01)
instance(s3,speak-01)
instance(t2,thorn)
ARG0(s,s2)
ARG1(s,c)
ARG1(c,t)
accompanier(c,c2)
part-of(c2,t)
ARG2(c2,p)
mod(p,l)
time(p,d)
mod(d,o)
ARG0-of(d,e)
time(d,s3)
ARG0(s3,s2)
ARG1(s2,t2)
part-of(t2,s2)

# ::snt " There are no tigers on my planet , " the little prince objected .
instance(o,object-01)
instance(p,prince)
instance(l,little)
instance(t,tiger)
instance(p2,planet)
ARG0(o,p)
mod(p,l)
ARG1(p,t)
location(t,p2)
poss(p2,p)

# ::snt " And , anyway , tigers do not eat weeds . "
instance(a,and)
instance(e,eat-01)
instance(t,tiger)
instance(w,weed)
instance(a2,anyway)
op2(a,e)
ARG0(e,t)
ARG1(e,w)
mod(e,a2)

# ::snt " I am not a weed , " the flower replied , sweetly .
instance(r,reply-01)
instance(f,flower)
instance(w,weed)
instance(s,sweet-03)
ARG0(r,f)
ARG2(r,w)
domain(w,f)
manner(w,s)

# ::snt " Please excuse me ... "
instance(e,excuse-01)
instance(y,you)
instance(i,i)
ARG0(e,y)
ARG1(e,i)

# ::snt " I am not at all afraid of tigers , " she went on , " but I have a horror of drafts .
instance(g,go-on-25)
instance(s,she)
instance(c,contrast-01)
instance(f,fear-01)
instance(t,tiger)
instance(a,at-all)
instance(a2,abhor-01)
instance(d,draft)
ARG0(g,s)
ARG1(g,c)
ARG1(c,f)
ARG0(f,s)
ARG1(s,t)
degree(s,a)
ARG2(s,a2)
ARG0(a2,s)
ARG1(s,d)

# ::snt I suppose you would n't have a screen for me ? "
instance(s,suppose-01)
instance(i,i)
instance(h,have-03)
instance(y,you)
instance(s2,screen)
instance(r,request-confirmation-91)
ARG0(s,i)
ARG1(s,h)
ARG0(h,y)
ARG1(h,s2)
beneficiary(h,i)
ARG1-of(i,r)

# ::snt " A horror of drafts - - that is bad luck , for a plant , " remarked the little prince , and added to himself , " This flower is a very complex creature ... "
instance(a,and)
instance(r,remark-01)
instance(p,prince)
instance(l,little)
instance(l2,luck)
instance(b,bad-07)
instance(p2,plant)
instance(a3,abhor-01)
instance(d,draft)
instance(a2,add-01)
instance(c3,creature)
instance(c2,complex)
instance(v,very)
instance(f,flower)
instance(t,this)
op1(a,r)
ARG0(r,p)
mod(p,l)
ARG1(p,l2)
ARG1-of(l2,b)
beneficiary(l2,p2)
domain(l2,a3)
ARG1(a3,d)
op2(a3,a2)
ARG0(a2,p)
ARG1(p,c3)
mod(c3,c2)
degree(c2,v)
domain(c2,f)
mod(f,t)
beneficiary(f,p)

# ::snt " At night I want you to put me under a glass globe .
instance(w,want-01)
instance(i,i)
instance(p,put-01)
instance(y,you)
instance(u,under)
instance(g,globe)
instance(g2,glass)
instance(d,date-entity)
ARG0(w,i)
ARG1(w,p)
ARG0(p,y)
ARG1(p,i)
ARG2(i,u)
op1(u,g)
consist-of(g,g2)
time(g,d)

# ::snt It is very cold where you live .
instance(c,cold-01)
instance(v,very)
instance(l,live-01)
instance(y,you)
degree(c,v)
location(c,l)
ARG0(l,y)

# ::snt In the place I came from - - "
instance(l,location)
instance(c,come-01)
instance(i,i)
ARG3-of(l,c)
ARG1(c,i)

# ::snt But she interrupted herself at that point .
instance(c,contrast-01)
instance(i,interrupt-01)
instance(s,she)
instance(p,point)
instance(t,that)
ARG2(c,i)
ARG0(i,s)
ARG1(i,s)
time(s,p)
mod(p,t)

# ::snt She had come in the form of a seed .
instance(c,come-01)
instance(s,she)
instance(s2,seed)
ARG1(c,s)
time-of(c,s2)
domain(s2,s)

# ::snt She could not have known anything of any other worlds .
instance(p,possible-01)
instance(-,-)
instance(k,know-01)
instance(s,she)
instance(a,anything)
instance(w,world)
instance(o,other)
instance(a2,any)
polarity(p,-)
ARG1(-,k)
ARG0(k,s)
ARG1(k,a)
topic(a,w)
mod(w,o)
mod(o,a2)

# ::snt Embarassed over having let herself be caught on the verge of such a naïve untruth , she coughed two or three times , in order to put the little prince in the wrong .
instance(c,cough-01)
instance(s,she)
instance(e,embarrass-01)
instance(l2,let-01)
instance(c2,catch-03)
instance(v,verge-01)
instance(t,truth)
instance(n,naive)
instance(s2,such)
instance(p,put-03)
instance(p2,prince)
instance(l,little)
instance(w,wrong-04)
instance(o,or)
ARG0(c,s)
ARG1-of(s,e)
ARG0(e,l2)
ARG0(l2,s)
ARG1(s,c2)
ARG1(c2,s)
ARG2(s,v)
ARG1(v,t)
mod(t,n)
degree(n,s2)
purpose(n,p)
ARG0(p,s)
ARG1(s,p2)
mod(p2,l)
ARG2(p2,w)
ARG1(w,p2)
frequency(w,o)

# ::snt " The screen ? "
instance(s,screen)

# ::snt " I was just going to look for it when you spoke to me ... "
instance(l3,look-01)
instance(i,i)
instance(i2,it)
instance(s3,speak-01)
instance(y2,you)
ARG0(l3,i)
ARG1(l3,i2)
time(l3,s3)
ARG0(s3,y2)
ARG2(s3,i)

# ::snt Then she forced her cough a little more so that he should suffer from remorse just the same .
instance(f,force-02)
instance(s,she)
instance(c,cough-01)
instance(h3,have-quant-91)
instance(m,more)
instance(l,little)
instance(t,then)
instance(s2,suffer-01)
instance(h,he)
instance(r,remorse)
instance(h2,have-concession-91)
ARG0(f,s)
ARG1(f,c)
ARG0(c,s)
ARG1-of(s,h3)
ARG3(h3,m)
quant(m,l)
time(m,t)
purpose(m,s2)
ARG0(s2,h)
ARG1(s2,r)
ARG1-of(s2,h2)

# ::snt So the little prince , in spite of all the good will that was inseparable from his love , had soon come to doubt her .
instance(c,come-04)
instance(p,prince)
instance(l,little)
instance(d,doubt-01)
instance(s3,she)
instance(s,soon)
instance(c2,cause-01)
instance(w,will)
instance(g,good-02)
instance(a,all)
instance(s2,separate-01)
instance(l2,love-01)
instance(p2,possible-01)
ARG1(c,p)
mod(p,l)
ARG2(p,d)
ARG0(d,p)
ARG1(p,s3)
time(p,s)
ARG1-of(p,c2)
concession(p,w)
ARG1-of(w,g)
mod(w,a)
ARG1-of(w,s2)
ARG2(s2,l2)
ARG0(l2,p)
ARG1-of(l2,p2)

# ::snt He had taken seriously words which were without importance , and it made him very unhappy .
instance(s,serious-01)
instance(h,he)
instance(w,word-01)
instance(i,important-01)
instance(m,make-02)
instance(h2,happy-01)
instance(v,very)
ARG1(s,h)
ARG2(s,w)
ARG1-of(w,i)
ARG0-of(w,m)
ARG1(m,h2)
ARG1(h2,h)
degree(h,v)

# ::snt " I ought not to have listened to her , " he confided to me one day . "
instance(c,confide-01)
instance(h,he)
instance(r,recommend-01)
instance(l,listen-01)
instance(s,she)
instance(-,-)
instance(i,i)
instance(d,day)
instance(o,one)
ARG0(c,h)
ARG1(c,r)
ARG1(r,l)
ARG0(l,h)
ARG1(h,s)
polarity(h,-)
ARG2(h,h)
ARG2(h,i)
time(h,d)
mod(d,o)

# ::snt One never ought to listen to the flowers .
instance(r,recommend-01)
instance(l,listen-01)
instance(o2,one)
instance(f,flower)
instance(e,ever)
ARG1(r,l)
ARG0(l,o2)
ARG1(l,f)
time(l,e)

# ::snt One should simply look at them and breathe their fragrance .
instance(r,recommend-01)
instance(a,and)
instance(l,look-01)
instance(o2,one)
instance(t,they)
instance(s,simple)
instance(b,breathe-01)
instance(f,fragrance)
ARG1(r,a)
op1(a,l)
ARG0(l,o2)
ARG1(l,t)
manner(l,s)
op2(l,b)
ARG0(b,o2)
ARG1(o2,f)
poss(f,t)

# ::snt Mine perfumed all my planet .
instance(p,perfume-01)
instance(t,thing)
instance(i,i)
instance(p2,planet)
instance(a,all)
ARG0(p,t)
poss(t,i)
ARG1(t,p2)
mod(p2,a)
poss(p2,i)

# ::snt But I did not know how to take pleasure in all her grace .
instance(c,contrast-01)
instance(k,know-01)
instance(i,i)
instance(p2,please-01)
instance(g,grace)
instance(s,she)
instance(a,all)
ARG2(c,k)
ARG0(k,i)
manner(k,p2)
ARG0(p2,g)
poss(g,s)
mod(g,a)
ARG1(g,i)

# ::snt This tale of claws , which disturbed me so much , should only have filled my heart with tenderness and pity . "
instance(r2,recommend-01)
instance(f,fill-01)
instance(t2,tale)
instance(c,claw)
instance(d,disturb-01)
instance(i,i)
instance(m,much)
instance(s,so)
instance(t3,this)
instance(h,heart)
instance(a,and)
instance(t,tender)
instance(p,pity-01)
instance(o,only)
ARG1(r2,f)
ARG0(f,t2)
topic(t2,c)
ARG0-of(t2,d)
ARG1(d,i)
degree(d,m)
degree(m,s)
mod(m,t3)
ARG1(m,h)
part-of(h,i)
ARG2(h,a)
op1(a,t)
op2(a,p)
mod(a,o)

# ::snt And he continued his confidences : " The fact is that I did not know how to understand anything !
instance(a,and)
instance(c,continue-02)
instance(h,he)
instance(c2,confide-01)
instance(k,know-01)
instance(t,thing)
instance(u,understand-01)
instance(a2,anything)
op1(a,c)
ARG0(c,h)
ARG1(c,c2)
ARG0(c2,h)
ARG1(h,k)
ARG0(k,h)
ARG1(h,t)
manner-of(t,u)
ARG0(u,h)
ARG1(h,a2)

# ::snt I ought to have judged by deeds and not by words .
instance(r2,recommend-01)
instance(a2,and)
instance(j,judge-01)
instance(i,i)
instance(d,do-02)
instance(j2,judge-01)
instance(w,word)
ARG1(r2,a2)
op1(a2,j)
ARG0(j,i)
ARG3(j,d)
op2(j,j2)
ARG0(j2,i)
ARG3(i,w)

# ::snt She cast her fragrance and her radiance over me .
instance(c,cast-01)
instance(s,she)
instance(a,and)
instance(f,fragrance)
instance(t,thing)
instance(r,radiate-01)
instance(i,i)
ARG0(c,s)
ARG1(c,a)
op1(a,f)
poss(f,s)
op2(f,t)
ARG1-of(t,r)
ARG0(r,s)
ARG2(r,i)

# ::snt I ought never to have run away from her ...
instance(r,recommend-01)
instance(r2,run-02)
instance(i,i)
instance(e,ever)
instance(a2,away)
instance(s,she)
ARG1(r,r2)
ARG0(r2,i)
time(r2,e)
direction(r2,a2)
op1(a2,s)

# ::snt I ought to have guessed all the affection that lay behind her poor little strategems .
instance(r,recommend-01)
instance(g,guess-01)
instance(i,i)
instance(a,affection)
instance(a2,all)
instance(l,lie-07)
instance(b,behind)
instance(s,strategem)
instance(l2,little)
instance(p,poor)
instance(s2,she)
ARG1(r,g)
ARG0(g,i)
ARG1(g,a)
mod(a,a2)
ARG1-of(a,l)
ARG2(l,b)
op1(b,s)
mod(s,l2)
mod(s,p)
poss(s,s2)

# ::snt Flowers are so inconsistent !
instance(c,consistent-01)
instance(f,flower)
instance(s,so)
ARG1(c,f)
degree(c,s)

# ::snt But I was too young to know how to love her ... "
instance(c,contrast-01)
instance(h,have-degree-91)
instance(i,i)
instance(y,young)
instance(t,too)
instance(k,know-01)
instance(m,manner)
instance(l,love-01)
instance(s,she)
ARG2(c,h)
ARG1(h,i)
ARG2(h,y)
ARG3(h,t)
ARG6(h,k)
ARG0(k,i)
ARG1(i,m)
manner-of(m,l)
ARG0(l,i)
ARG1(i,s)

# ::snt Chapter 9 .
instance(c,chapter)

# ::snt I believe that for his escape he took advantage of the migration of a flock of wild birds .
instance(b,believe-01)
instance(i,i)
instance(t,take-advantage-02)
instance(h,he)
instance(m,migrate-01)
instance(f,flock-02)
instance(b2,bird)
instance(w,wild)
instance(e,escape-01)
ARG0(b,i)
ARG1(b,t)
ARG0(t,h)
ARG1(t,m)
ARG0(m,f)
ARG0(f,b2)
mod(b2,w)
purpose(b2,e)
ARG0(e,h)

# ::snt On the morning of his departure he put his planet in perfect order .
instance(o,order-03)
instance(h,he)
instance(p2,planet)
instance(p,perfect-02)
instance(d2,date-entity)
instance(m,morning)
instance(d,depart-01)
ARG0(o,h)
ARG1(o,p2)
poss(p2,h)
ARG1-of(p2,p)
time(p2,d2)
dayperiod(d2,m)
time-of(d2,d)
ARG0(d,h)

# ::snt He carefully cleaned out his active volcanoes .
instance(c,clean-out-03)
instance(h,he)
instance(v,volcano)
instance(a,activity-06)
instance(c2,careful)
ARG0(c,h)
ARG1(c,v)
poss(v,h)
ARG0-of(h,a)
manner(h,c2)

# ::snt He possessed two active volcanoes ; and they were very convenient for heating his breakfast in the morning .
instance(a,and)
instance(p,possess-01)
instance(h,he)
instance(v,volcano)
instance(a2,activity-06)
instance(c,convenient)
instance(v2,very)
instance(h2,heat-01)
instance(f,food)
instance(b2,breakfast-01)
instance(d,date-entity)
op1(a,p)
ARG0(p,h)
ARG1(p,v)
ARG0-of(v,a2)
op2(v,c)
degree(c,v2)
purpose(c,h2)
ARG1(h2,f)
ARG1-of(f,b2)
ARG0(b2,h)
ARG2(b2,v)
time(v,d)
domain(v,v)

# ::snt He also had one volcano that was extinct .
instance(h,have-03)
instance(h2,he)
instance(v,volcano)
instance(e,extinct)
instance(1,1)
instance(a,also)
ARG0(h,h2)
ARG1(h,v)
mod(v,e)
quant(v,1)
mod(v,a)

# ::snt But , as he said , " One never knows ! "
instance(c,contrast-01)
instance(s,say-01)
instance(h,he)
instance(k,know-01)
instance(o,one)
ARG2(c,s)
ARG0(s,h)
ARG1(s,k)
ARG0(k,o)

# ::snt So he cleaned out the extinct volcano , too .
instance(c,clean-out-03)
instance(h,he)
instance(v,volcano)
instance(e,extinct)
instance(t,too)
ARG0(c,h)
ARG1(c,v)
mod(v,e)
mod(v,t)

# ::snt If they are well cleaned out , volcanoes burn slowly and steadily , without any eruptions .
instance(b,burn-01)
instance(v,volcano)
instance(e2,erupt-01)
instance(c,clean-out-03)
instance(w,well)
instance(s3,steady)
instance(s,slow-05)
ARG1(b,v)
ARG1-of(v,e2)
condition(v,c)
ARG1(c,v)
degree(v,w)
manner(v,s3)
ARG1-of(v,s)

# ::snt Volcanic eruptions are like fires in a chimney .
instance(e,erupt-01)
instance(v,volcano)
instance(r,resemble-01)
instance(f,fire)
instance(c,chimney)
ARG1(e,v)
ARG1-of(e,r)
ARG2(r,f)
location(f,c)

# ::snt On our earth we are obviously much too small to clean out our volcanoes .
instance(h,have-degree-91)
instance(w,we)
instance(s,small)
instance(t2,too)
instance(m,much)
instance(c,clean-out-03)
instance(v,volcano)
instance(o,obvious-01)
instance(e,earth)
ARG1(h,w)
ARG2(h,s)
ARG3(h,t2)
degree(t2,m)
ARG6(t2,c)
ARG0(c,w)
ARG1(w,v)
poss(v,w)
ARG1-of(v,o)
location(v,e)
poss(e,w)

# ::snt That is why they bring no end of trouble upon us .
instance(c,cause-01)
instance(t3,that)
instance(t2,trouble-01)
instance(t4,they)
instance(w,we)
instance(e,end)
ARG0(c,t3)
ARG1(c,t2)
ARG0(t2,t4)
ARG1(t2,w)
quant(t2,e)

# ::snt The little prince also pulled up , with a certain sense of dejection , the last little shoots of the baobabs .
instance(p,pull-01)
instance(p2,prince)
instance(l,little)
instance(s2,sense-01)
instance(d2,deject-01)
instance(c,certain)
instance(s,shoot)
instance(b,baobab)
instance(l2,little)
instance(o,ordinal-entity)
instance(a,also)
instance(u,up)
ARG0(p,p2)
mod(p2,l)
ARG0-of(p2,s2)
ARG1(s2,d2)
mod(s2,c)
ARG1(s2,s)
part-of(s,b)
mod(s,l2)
ord(s,o)
mod(s,a)
direction(s,u)

# ::snt He believed that he would never want to return .
instance(b,believe-01)
instance(h,he)
instance(w,want-01)
instance(r,return-01)
instance(e,ever)
ARG0(b,h)
ARG1(b,w)
ARG0(w,h)
ARG1(h,r)
ARG1(r,h)
time(r,e)

# ::snt But on this last morning all these familiar tasks seemed very precious to him .
instance(c,contrast-01)
instance(s,seem-01)
instance(p,precious)
instance(v,very)
instance(t2,task)
instance(a2,all)
instance(f,familiar)
instance(h,he)
instance(d,date-entity)
instance(m,morning)
instance(t,this)
instance(o,ordinal-entity)
ARG2(c,s)
ARG1(s,p)
degree(p,v)
domain(p,t2)
mod(t2,a2)
mod(t2,f)
ARG2(t2,h)
time(t2,d)
dayperiod(d,m)
mod(d,t)
ord(d,o)

# ::snt And when he watered the flower for the last time , and prepared to place her under the shelter of her glass globe , he realised that he was very close to tears .
instance(r,realize-01)
instance(h,he)
instance(c,close-10)
instance(t,tear-03)
instance(v,very)
instance(a,and)
instance(w,water-01)
instance(f,flower-01)
instance(o,ordinal-entity)
instance(p,prepare-02)
instance(p2,place-01)
instance(u2,under)
instance(g,globe)
instance(g2,glass)
instance(s2,shelter-01)
ARG0(r,h)
ARG1(r,c)
ARG1(c,h)
ARG2(h,t)
ARG1(t,h)
degree(t,v)
time(t,a)
op1(a,w)
ARG0(w,h)
ARG1(h,f)
ord(h,o)
op2(h,p)
ARG0(p,h)
ARG1(h,h)
ARG2(h,p2)
ARG0(p2,h)
ARG1(h,f)
ARG2(f,u2)
op1(u2,g)
consist-of(g,g2)
poss(g,f)
ARG2-of(f,s2)
ARG0(s2,h)
ARG1(h,f)

# ::snt " Goodbye , " he said to the flower .
instance(s,say-01)
instance(h,he)
instance(g,goodbye)
instance(f,flower)
ARG0(s,h)
ARG1(s,g)
ARG2(s,f)

# ::snt But she made no answer .
instance(c,contrast-01)
instance(a2,answer-01)
instance(s,she)
ARG2(c,a2)
ARG0(a2,s)

# ::snt " Goodbye , " he said again .
instance(s,say-01)
instance(h,he)
instance(g,goodbye)
instance(a,again)
ARG0(s,h)
ARG1(s,g)
mod(s,a)

# ::snt The flower coughed .
instance(c,cough-01)
instance(f,flower)
ARG0(c,f)

# ::snt But it was not because she had a cold .
instance(c2,contrast-01)
instance(c3,cause-01)
instance(h,have-03)
instance(s,she)
instance(c,cold)
instance(i,it)
ARG2(c2,c3)
ARG0(c3,h)
ARG0(h,s)
ARG1(h,c)
ARG1(h,i)

# ::snt " I have been silly , " she said to him , at last .
instance(s,say-01)
instance(s2,she)
instance(s4,silly)
instance(h,he)
instance(a,at-last)
ARG0(s,s2)
ARG1(s,s4)
domain(s4,s2)
ARG2(s4,h)
time(s4,a)

# ::snt " I ask your forgiveness .
instance(a,ask-02)
instance(i,i)
instance(f,forgive-01)
instance(y,y)
instance(y,you)
ARG0(a,i)
ARG1(a,f)
ARG0(f,y)
ARG1(y,i)
ARG2(y,y)

# ::snt Try to be happy ... "
instance(t,try-01)
instance(y,you)
instance(h,happy-01)
ARG0(t,y)
ARG1(t,h)
ARG1(h,y)

# ::snt He was surprised by this absence of reproaches .
instance(s,surprise-01)
instance(a,absent-01)
instance(r,reproach-01)
instance(h,he)
ARG0(s,a)
ARG1(a,r)
ARG1(a,h)

# ::snt He stood there all bewildered , the glass globe held arrested in mid - air .
instance(s,stand-01)
instance(h,he)
instance(b,bewilder-01)
instance(a,all)
instance(h2,hold-01)
instance(g,globe)
instance(g2,glass)
instance(a2,arrest-02)
instance(m,midair)
instance(t,there)
ARG1(s,h)
ARG1-of(h,b)
degree(b,a)
ARG0-of(b,h2)
ARG1(h2,g)
consist-of(g,g2)
ARG1-of(g,a2)
location(a2,m)
ARG2(a2,t)

# ::snt He did not understand this quiet sweetness .
instance(u,understand-01)
instance(h,he)
instance(s,sweet-05)
instance(t,this)
instance(q,quiet-04)
ARG0(u,h)
ARG1(u,s)
ARG1(s,t)
ARG1-of(s,q)

# ::snt " Of course I love you , " the flower said to him .
instance(s,say-01)
instance(f,flower-01)
instance(l,love-01)
instance(h,h)
instance(o,of-course)
instance(h,he)
ARG0(s,f)
ARG1(s,l)
ARG0(l,f)
ARG1(f,h)
mod(h,o)
ARG2(h,h)

# ::snt " It is my fault that you have not known it all the while .
instance(f,fault-01)
instance(i3,i)
instance(k,know-01)
instance(y,you)
instance(i2,it)
instance(w,while-away-01)
instance(a,all)
ARG1(f,i3)
ARG2(f,k)
ARG0(k,y)
ARG1(k,i2)
time(k,w)
duration(w,a)

# ::snt That is of no importance .
instance(i,important-01)
instance(t,that)
ARG1(i,t)

# ::snt But you - - you have been just as foolish as I .
instance(c,contrast-01)
instance(h,have-degree-91)
instance(y,you)
instance(f,foolish)
instance(e,equal)
instance(i,i)
ARG2(c,h)
ARG1(h,y)
ARG2(h,f)
ARG3(h,e)
ARG4(h,i)

# ::snt Try to be happy ... let the glass globe be .
instance(a,and)
instance(t,try-01)
instance(y,you)
instance(h,happy-01)
instance(l,leave-14)
instance(a2,alone)
instance(g,globe)
instance(g2,glass)
op1(a,t)
ARG0(t,y)
ARG1(t,h)
ARG1(h,y)
op2(h,l)
ARG0(l,y)
ARG1(y,a2)
domain(a2,g)
consist-of(g,g2)

# ::snt I do n't want it any more . "
instance(w,want-01)
instance(i,i)
instance(i2,it)
instance(-,-)
instance(a,anymore)
ARG0(w,i)
ARG1(w,i2)
polarity(w,-)
time(-,a)

# ::snt " But the wind - - "
instance(c,contrast-01)
instance(w,wind)
ARG2(c,w)

# ::snt " My cold is not so bad as all that ... the cool night air will do me good .
instance(a,and)
instance(h,have-degree-91)
instance(c3,cold)
instance(i,i)
instance(b,bad-05)
instance(e,equal)
instance(t,that)
instance(a2,all)
instance(g,good-04)
instance(a3,air)
instance(c,cool-06)
instance(n,night)
op1(a,h)
ARG1(h,c3)
poss(c3,i)
ARG2(c3,b)
ARG1(b,c3)
ARG3(b,e)
ARG4(b,t)
mod(t,a2)
op2(t,g)
ARG1(g,a3)
ARG1-of(a3,c)
mod(a3,n)
ARG2(a3,i)

# ::snt I am a flower . "
instance(f,flower)
instance(i,i)
domain(f,i)

# ::snt " But the animals - - "
instance(c,contrast-01)
instance(a,animal)
ARG2(c,a)

# ::snt " Well , I must endure the presence of two or three caterpillars if I wish to become acquainted with the butterflies .
instance(h,have-concession-91)
instance(o,obligate-01)
instance(i,i)
instance(e,endure-01)
instance(i,i)
instance(p,present-02)
instance(c,caterpillar)
instance(o2,or)
instance(w,wish-01)
instance(a,acquaint-01)
instance(b2,butterfly)
ARG2(h,o)
ARG1(o,i)
ARG2(i,e)
ARG1(e,i)
ARG2(e,p)
ARG1(p,c)
quant(c,o2)
condition(c,w)
ARG0(w,i)
ARG1(i,a)
ARG1(a,i)
ARG2(i,b2)

# ::snt It seems that they are very beautiful .
instance(s,seem-01)
instance(b,beautiful-02)
instance(t2,they)
instance(v2,very)
ARG1(s,b)
ARG1(b,t2)
degree(b,v2)

# ::snt And if not the butterflies - - and the caterpillars - - who will call upon me ?
instance(c,call-on-05)
instance(a,amr-unknown)
instance(i,i)
instance(c3,call-on-05)
instance(a2,and)
instance(b,butterfly)
instance(c2,caterpillar)
ARG0(c,a)
ARG1(c,i)
condition(c,c3)
ARG0(c3,a2)
op1(a2,b)
op2(a2,c2)
ARG1(a2,i)

# ::snt You will be far away ... as for the large animals - - I am not at all afraid of any of them .
instance(a,and)
instance(a2,away)
instance(f,far)
instance(y,you)
instance(f2,fear-01)
instance(i,i)
instance(a3,animal)
instance(l,large)
instance(a4,any)
instance(a5,at-all)
op1(a,a2)
extent(a2,f)
location-of(a2,y)
op2(a2,f2)
ARG0(f2,i)
ARG1(f2,a3)
mod(a3,l)
quant(a3,a4)
degree(a3,a5)

# ::snt I have my claws . "
instance(h,have-03)
instance(i,i)
instance(c,claw)
ARG0(h,i)
ARG1(h,c)
part-of(c,i)

# ::snt And , naïvely , she showed her four thorns .
instance(s,show-01)
instance(s2,she)
instance(t,thorn)
instance(n,naive)
ARG0(s,s2)
ARG1(s,t)
part-of(t,s2)
manner(t,n)

# ::snt Then she added : " Do n't linger like this .
instance(a,add-01)
instance(s,she)
instance(l,linger-01)
instance(y,you)
instance(t3,this)
instance(t,then)
ARG0(a,s)
ARG1(a,l)
ARG1(l,y)
manner(l,t3)
time(l,t)

# ::snt You have decided to go away .
instance(d,decide-01)
instance(y,you)
instance(g,go-02)
instance(a,away)
ARG0(d,y)
ARG1(d,g)
ARG0(g,y)
direction(y,a)

# ::snt Now go ! "
instance(g,go-02)
instance(y,you)
instance(n,now)
ARG0(g,y)
time(g,n)

# ::snt For she did not want him to see her crying .
instance(w,want-01)
instance(s,she)
instance(s2,see-01)
instance(h,he)
instance(c,cry-02)
ARG0(w,s)
ARG1(w,s2)
ARG0(s2,h)
ARG1(s2,c)
ARG0(c,s)

# ::snt She was such a proud flower ...
instance(p,pride-01)
instance(f2,flower)
instance(s,she)
instance(s2,such)
ARG0(p,f2)
domain(f2,s)
degree(f2,s2)

# ::snt Chapter 10 .
instance(c,chapter)

# ::snt He found himself in the neighborhood of the asteroids 325 , 326 , 327 , 328 , 329 , and 330 .
instance(f,find-out-03)
instance(h,he)
instance(b,be-located-at-91)
instance(n,neighborhood)
instance(a3,and)
instance(a4,asteroid)
instance(n2,name)
instance(a5,asteroid)
instance(n3,name)
instance(a6,asteroid)
instance(n4,name)
instance(a7,asteroid)
instance(n5,name)
instance(a8,asteroid)
instance(n6,name)
instance(a9,asteroid)
instance(n7,name)
ARG0(f,h)
ARG1(f,b)
ARG1(b,h)
ARG2(h,n)
location-of(n,a3)
op1(a3,a4)
name(a4,n2)
op2(a4,a5)
name(a5,n3)
op3(a5,a6)
name(a6,n4)
op4(a6,a7)
name(a7,n5)
op5(a7,a8)
name(a8,n6)
op6(a8,a9)
name(a9,n7)

# ::snt He began , therefore , by visiting them , in order to add to his knowledge .
instance(b,begin-01)
instance(h,he)
instance(v,visit-01)
instance(t2,they)
instance(t,therefore)
instance(a,add-02)
instance(k,knowledge)
ARG0(b,h)
ARG2(b,v)
ARG0(v,h)
ARG1(h,t2)
mod(h,t)
purpose(h,a)
ARG0(a,v)
ARG2(v,k)
poss(k,h)

# ::snt The first of them was inhabited by a king .
instance(i,inhabit-01)
instance(k,king)
instance(t2,thing)
instance(o,ordinal-entity)
instance(i2,include-91)
instance(t,they)
ARG0(i,k)
ARG1(i,t2)
ord(t2,o)
ARG1-of(t2,i2)
ARG2(i2,t)

# ::snt Clad in royal purple and ermine , he was seated upon a throne which was at the same time both simple and majestic .
instance(s,seat-01)
instance(h,he)
instance(c,clad-01)
instance(a,and)
instance(p,purple-02)
instance(r,royal)
instance(e,ermine)
instance(t,throne)
instance(s2,simple-02)
instance(m,majesty)
ARG1(s,h)
ARG1-of(h,c)
ARG2(c,a)
op1(a,p)
mod(p,r)
op2(p,e)
ARG2(p,t)
ARG1-of(t,s2)
mod(t,m)

# ::snt " Ah !
instance(a2,ah)

# ::snt Here is a subject , " exclaimed the king , when he saw the little prince coming .
instance(e,exclaim-01)
instance(k,king)
instance(h2,here)
instance(s,subject)
instance(s2,see-01)
instance(p,prince)
instance(l,little)
instance(c,come-01)
ARG0(e,k)
ARG1(e,h2)
location-of(h2,s)
time(h2,s2)
ARG0(s2,k)
ARG1(k,p)
mod(p,l)
ARG1-of(p,c)

# ::snt And the little prince asked himself : " How could he recognize me when he had never seen me before ? "
instance(a,ask-01)
instance(p,prince)
instance(l,little)
instance(p2,possible-01)
instance(r,recognize-02)
instance(h,he)
instance(s,see-01)
instance(b,before)
instance(e,ever)
instance(a2,amr-unknown)
ARG0(a,p)
mod(p,l)
ARG1(p,p2)
ARG1(p2,r)
ARG0(r,h)
ARG1(r,p)
condition(p,s)
ARG0(s,h)
ARG1(h,p)
time(p,b)
time(p,e)
manner(p,a2)
ARG2(p,p)

# ::snt He did not know how the world is simplified for kings .
instance(k,know-01)
instance(h,he)
instance(s,simplify-01)
instance(w,world)
instance(k2,king)
instance(-,-)
ARG0(k,h)
ARG1(k,s)
ARG1(s,w)
beneficiary(s,k2)
polarity(s,-)

# ::snt To them , all men are subjects .
instance(o,opine-01)
instance(t2,they)
instance(s2,subject)
instance(m2,man)
instance(a2,all)
ARG0(o,t2)
ARG1(o,s2)
domain(s2,m2)
mod(m2,a2)

# ::snt " Approach , so that I may see you better , " said the king , who felt consumingly proud of being at last a king over somebody .
instance(s,say-01)
instance(k,king)
instance(p,pride-01)
instance(r,reign-01)
instance(s3,somebody)
instance(a2,at-last)
instance(a,approach-01)
instance(y,y)
instance(s2,see-01)
instance(y,you)
instance(h,have-degree-91)
instance(w,well)
instance(m,more)
ARG0(s,k)
ARG0-of(k,p)
ARG2(p,r)
ARG0(r,k)
ARG1(k,s3)
time(k,a2)
ARG1(k,a)
ARG1(a,y)
purpose(y,s2)
ARG0(s2,k)
ARG1(k,y)
ARG1-of(k,h)
ARG2(h,w)
ARG3(h,m)

# ::snt The little prince looked everywhere to find a place to sit down ; but the entire planet was crammed and obstructed by the king 's magnificent ermine robe .
instance(a,and)
instance(c,cram-01)
instance(r2,robe)
instance(e2,ermine)
instance(m,magnificent)
instance(k,king)
instance(p3,planet)
instance(e3,entire)
instance(o,obstruct-01)
instance(l,look-01)
instance(p,prince)
instance(l2,little)
instance(p2,place)
instance(s,sit-down-02)
instance(e,everywhere)
op1(a,c)
ARG1(c,r2)
mod(r2,e2)
mod(r2,m)
poss(r2,k)
ARG2(r2,p3)
extent(p3,e3)
op2(p3,o)
ARG0(o,r2)
ARG1(r2,p3)
concession(r2,l)
ARG0(l,p)
mod(p,l2)
ARG1(p,p2)
purpose(p2,s)
ARG1(s,p)
location(s,e)

# ::snt So he remained standing upright , and , since he was tired , he yawned .
instance(a,and)
instance(r,remain-01)
instance(h,he)
instance(s,stand-01)
instance(u,upright)
instance(y,yawn-01)
instance(c,cause-01)
instance(t,tire-01)
op1(a,r)
ARG1(r,h)
ARG3(r,s)
ARG1(s,h)
manner(h,u)
op2(h,y)
ARG0(y,h)
ARG1-of(h,c)
ARG0(c,t)
ARG1(t,h)

# ::snt " It is contrary to etiquette to yawn in the presence of a king , " the monarch said to him .
instance(s,say-01)
instance(m,monarch)
instance(c,contrary-01)
instance(y,yawn-01)
instance(k,king)
instance(e,etiquette)
instance(h,he)
ARG0(s,m)
ARG1(s,c)
ARG1(c,y)
location(y,k)
ARG2(y,e)
ARG2(y,h)

# ::snt " I forbid you to do so . "
instance(f,forbid-01)
instance(i,i)
instance(d,do-02)
instance(y,y)
instance(s,so)
instance(y,you)
ARG0(f,i)
ARG1(f,d)
ARG0(d,y)
ARG1(y,s)
ARG2(y,y)

# ::snt " I can n't help it .
instance(p,possible-01)
instance(h,help-02)
instance(i,i)
instance(i2,it)
ARG1(p,h)
ARG0(h,i)
ARG1(h,i2)

# ::snt I can n't stop myself , " replied the little prince , thoroughly embarrassed .
instance(r,reply-01)
instance(p,prince)
instance(l,little)
instance(p2,possible-01)
instance(s,stop-01)
instance(e,embarrass-01)
instance(t,thorough)
ARG0(r,p)
mod(p,l)
ARG2(p,p2)
ARG1(p2,s)
ARG0(s,p)
ARG1(p,p)
manner(p,e)
ARG1(e,p)
degree(p,t)

# ::snt " I have come on a long journey , and I have had no sleep ... "
instance(a,and)
instance(c,come-01)
instance(i,i)
instance(j,journey-01)
instance(l,long-03)
instance(s,sleep-01)
op1(a,c)
ARG1(c,i)
ARG2(c,j)
ARG0(j,i)
ARG1-of(i,l)
op2(i,s)
ARG0(s,i)

# ::snt " Ah , then , " the king said .
instance(s,say-01)
instance(k,king)
instance(a,ah)
instance(t,then)
ARG0(s,k)
ARG1(s,a)
mod(a,t)

# ::snt " I order you to yawn .
instance(o,order-01)
instance(i,i)
instance(y,you)
instance(y2,yawn-01)
ARG0(o,i)
ARG1(o,y)
ARG2(o,y2)
ARG0(y2,y)

# ::snt It is years since I have seen anyone yawning .
instance(p,pass-03)
instance(y3,year)
instance(s3,since)
instance(s,see-01)
instance(i,i)
instance(a,anyone)
instance(y,yawn-01)
ARG1(p,y3)
time(p,s3)
op1(s3,s)
ARG0(s,i)
ARG1(s,a)
ARG0-of(a,y)

# ::snt Yawns , to me , are objects of curiosity .
instance(c2,curious-01)
instance(y2,yawn-01)
instance(i,i)
ARG0(c2,y2)
ARG1(c2,i)

# ::snt Come , now !
instance(c,come-01)
instance(y,you)
instance(n,now)
instance(imperative,imperative)
ARG1(c,y)
time(c,n)
mode(c,imperative)

# ::snt Yawn again !
instance(y,yawn-01)
instance(y2,you)
instance(a,again)
ARG0(y,y2)
mod(y,a)

# ::snt It is an order . "
instance(o2,order-01)
instance(i2,it)
ARG2(o2,i2)

# ::snt " That frightens me ...
instance(f,frighten-01)
instance(t,that)
instance(i,i)
ARG0(f,t)
ARG1(f,i)

# ::snt I can not , any more ... " murmured the little prince , now completely abashed .
instance(m,murmur-01)
instance(p,prince)
instance(l,little)
instance(a2,abash-01)
instance(c,complete-02)
instance(n,now)
instance(p2,possible-01)
instance(a,anymore)
ARG0(m,p)
mod(p,l)
ARG1-of(p,a2)
ARG1-of(a2,c)
time(a2,n)
ARG1(a2,p2)
time(p2,a)

# ::snt " Hum !
instance(h,hum)

# ::snt Hum ! " replied the king .
instance(r,reply-01)
instance(k,king)
instance(h,hum)
ARG0(r,k)
ARG2(r,h)

# ::snt " Then I - - I order you sometimes to yawn and sometimes to - - "
instance(o,order-01)
instance(i,i)
instance(y,you)
instance(a,and)
instance(y2,yawn-01)
instance(s,sometimes)
instance(d,do-02)
instance(s2,sometimes)
instance(t2,then)
ARG0(o,i)
ARG1(o,y)
ARG2(o,a)
op1(a,y2)
ARG0(y2,y)
frequency(y,s)
op2(y,d)
frequency(d,s2)
mod(d,t2)

# ::snt He sputtered a little , and seemed vexed .
instance(a,and)
instance(s,sputter-01)
instance(h,he)
instance(l,little)
instance(s2,seem-01)
instance(v,vex-01)
op1(a,s)
ARG0(s,h)
degree(s,l)
op2(s,s2)
ARG1(s2,v)
ARG1(v,h)

# ::snt For what the king fundamentally insisted upon was that his authority should be respected .
instance(i,insist-01)
instance(k,king)
instance(r,respect-01)
instance(a,authority)
instance(f,fundamental)
ARG0(i,k)
ARG1(i,r)
ARG1(r,a)
poss(a,k)
mod(a,f)

# ::snt He tolerated no disobedience .
instance(t,tolerate-01)
instance(h,he)
instance(d,disobey-01)
instance(-,-)
ARG0(t,h)
ARG1(t,d)
ARG1(d,h)
polarity(d,-)

# ::snt He was an absolute monarch .
instance(m,monarch)
instance(a,absolute)
instance(h2,he)
mod(m,a)
domain(m,h2)

# ::snt But , because he was a very good man , he made his orders reasonable .
instance(h3,have-concession-91)
instance(m,make-02)
instance(h,he)
instance(r,reasonable-02)
instance(t,thing)
instance(o,order-01)
instance(c2,cause-01)
instance(m2,man)
instance(g,good-02)
instance(v,very)
ARG1(h3,m)
ARG0(m,h)
ARG1(m,r)
ARG1(r,t)
ARG2-of(t,o)
ARG1-of(t,c2)
ARG0(c2,m2)
ARG1-of(m2,g)
degree(g,v)
domain(g,h)

# ::snt " If I ordered a general , " he would say , by way of example , " if I ordered a general to change himself into a sea bird , and if the general did not obey me , that would not be the fault of the general .
instance(s,say-01)
instance(h,he)
instance(o,order-01)
instance(p,person)
instance(h2,have-org-role-91)
instance(g,general)
instance(c,change-01)
instance(b,bird)
instance(s2,sea)
instance(o2,obey-01)
instance(f,fault-01)
instance(e,exemplify-01)
ARG0(s,h)
ARG1(s,o)
ARG0(o,h)
ARG1(h,p)
ARG0-of(p,h2)
ARG2(h2,g)
ARG2(h2,c)
ARG0(c,p)
ARG1(p,p)
ARG2(p,b)
mod(b,s2)
ARG1-of(b,o2)
ARG0(o2,p)
condition-of(o2,f)
ARG1(f,p)
ARG0-of(f,e)

# ::snt It would be my fault . "
instance(f,fault-01)
instance(i2,i)
ARG1(f,i2)

# ::snt " May I sit down ? " came now a timid inquiry from the little prince .
instance(i,inquire-01)
instance(p,prince)
instance(l,little)
instance(t2,truth-value)
instance(p2,permit-01)
instance(s,sit-down-02)
instance(t,timid)
instance(n,now)
ARG0(i,p)
mod(p,l)
ARG1(p,t2)
polarity-of(t2,p2)
ARG1(p2,s)
ARG1(s,p)
manner(s,t)
time(s,n)

# ::snt " I order you to do so , " the king answered him , and majestically gathered in a fold of his ermine mantle .
instance(a,and)
instance(a2,answer-01)
instance(k,king)
instance(h,he)
instance(o,order-01)
instance(d,do-02)
instance(s,so)
instance(g,gather-01)
instance(f,fold)
instance(m3,mantle)
instance(e2,ermine)
instance(m,majesty)
op1(a,a2)
ARG0(a2,k)
ARG1(a2,h)
ARG2(a2,o)
ARG0(o,k)
ARG1(k,h)
ARG2(h,d)
ARG1(d,s)
op2(d,g)
ARG0(g,k)
ARG1(k,f)
part-of(f,m3)
consist-of(m3,e2)
manner(m3,m)

# ::snt But the little prince was wondering ...
instance(w,wonder-01)
instance(p,prince)
instance(l,little)
ARG0(w,p)
mod(p,l)

# ::snt The planet was tiny .
instance(t,tiny)
instance(p,planet)
domain(t,p)

# ::snt Over what could this king really rule ?
instance(p,possible-01)
instance(r,rule-03)
instance(k,king)
instance(a,amr-unknown)
instance(r2,real-04)
ARG1(p,r)
ARG0(r,k)
ARG1(r,a)
ARG1-of(r,r2)

# ::snt " Sire , " he said to him , " I beg that you will excuse my asking you a question - - "
instance(s,say-01)
instance(h,he)
instance(b,beg-01)
instance(p,p)
instance(e,excuse-01)
instance(a,ask-01)
instance(p,person)
instance(t,title-01)
instance(s2,sire)
ARG0(s,h)
ARG1(s,b)
ARG0(b,h)
ARG1(h,p)
ARG2(p,e)
ARG0(e,p)
ARG1(p,h)
ARG2(h,a)
ARG0(a,h)
ARG2(h,p)
ARG2(h,p)
ARG1-of(p,t)
ARG2(t,s2)

# ::snt " I order you to ask me a question , " the king hastened to assure him .
instance(h,hasten-01)
instance(k,king)
instance(a,assure-01)
instance(h2,he)
instance(o,order-01)
instance(a2,ask-01)
ARG0(h,k)
ARG1(h,a)
ARG0(a,k)
ARG1(k,h2)
ARG2(k,o)
ARG0(o,k)
ARG1(k,h2)
ARG2(h2,a2)
ARG0(a2,h2)
ARG2(h2,k)

# ::snt " Sire - - over what do you rule ? "
instance(s,say-01)
instance(r,rule-03)
instance(p,p)
instance(a,amr-unknown)
instance(p,person)
instance(t,title-01)
instance(s2,sire)
ARG1(s,r)
ARG0(r,p)
ARG1(p,a)
ARG2(p,p)
ARG1-of(p,t)
ARG2(t,s2)

# ::snt " Over everything , " said the king , with magnificent simplicity .
instance(s,say-01)
instance(k,king)
instance(e,everything)
instance(s2,simple-02)
instance(m,magnificence)
ARG0(s,k)
ARG1(s,e)
ARG1-of(s,s2)
mod(s2,m)

# ::snt " Over everything ? "
instance(o,over)
instance(e,everything)
op1(o,e)

# ::snt The king made a gesture , which took in his planet , the other planets , and all the stars .
instance(g,gesture-01)
instance(k,king)
instance(t,take-in-23)
instance(a,and)
instance(p,planet)
instance(p2,planet)
instance(o,other)
instance(s,star)
instance(a2,all)
ARG0(g,k)
ARG0-of(g,t)
ARG1(t,a)
op1(a,p)
poss(p,k)
op2(p,p2)
mod(p2,o)
op3(p2,s)
mod(s,a2)

# ::snt " Over all that ? " asked the little prince .
instance(a,ask-01)
instance(p,prince)
instance(l,little)
instance(o,over)
instance(t,that)
instance(a3,all)
ARG0(a,p)
mod(p,l)
ARG1(p,o)
op1(o,t)
mod(t,a3)

# ::snt " Over all that , " the king answered .
instance(a,answer-01)
instance(k,king)
instance(o,over)
instance(t,that)
instance(a2,all)
ARG0(a,k)
ARG2(a,o)
op1(o,t)
mod(t,a2)

# ::snt For his rule was not only absolute : it was also universal .
instance(a3,and)
instance(a4,absolute)
instance(r,rule-03)
instance(h,he)
instance(u2,universal)
op1(a3,a4)
domain(a4,r)
ARG0(r,h)
op2(r,u2)
domain(u2,r)

# ::snt " And the stars obey you ? "
instance(a,and)
instance(o,obey-01)
instance(s,star)
instance(y,you)
instance(r,request-confirmation-91)
op2(a,o)
ARG0(o,s)
ARG1(o,y)
ARG1-of(o,r)

# ::snt " Certainly they do , " the king said .
instance(s,say-01)
instance(k,king)
instance(d,do-02)
instance(t,they)
instance(c,certain)
ARG0(s,k)
ARG1(s,d)
ARG0(d,t)
mod(d,c)

# ::snt " They obey instantly .
instance(o,obey-01)
instance(t,they)
instance(i,instant)
ARG0(o,t)
manner(o,i)

# ::snt I do not permit insubordination . "
instance(p,permit-01)
instance(i,i)
instance(i2,insubordinate-00)
ARG0(p,i)
ARG1(p,i2)

# ::snt Such power was a thing for the little prince to marvel at .
instance(m,marvel-01)
instance(p,prince)
instance(l,little)
instance(p2,power)
instance(s,such)
ARG0(m,p)
mod(p,l)
ARG1(p,p2)
degree(p2,s)

# ::snt If he had been master of such complete authority , he would have been able to watch the sunset , not forty - four times in one day , but seventy - two , or even a hundred , or even two hundred times , without ever having to move his chair .
instance(p,possible-01)
instance(w,watch-01)
instance(h,he)
instance(s,sunset)
instance(h3,have-frequency-91)
instance(44,44)
instance(t5,temporal-quantity)
instance(y,year)
instance(h4,have-frequency-91)
instance(o,or)
instance(m2,move-01)
instance(c2,chair)
instance(e3,ever)
instance(m,master)
instance(a,authority)
instance(c,complete-02)
instance(s2,such)
ARG1(p,w)
ARG0(w,h)
ARG1(w,s)
ARG1-of(s,h3)
ARG2(h3,44)
range(44,t5)
unit(t5,y)
ARG1-of(t5,h4)
ARG2(h4,o)
range(h4,t5)
manner(h4,m2)
ARG0(m2,h)
ARG1(h,c2)
poss(c2,h)
time(c2,e3)
condition(c2,m)
poss-of(m,a)
ARG1-of(a,c)
mod(a,s2)
domain(a,h)

# ::snt And because he felt a bit sad as he remembered his little planet which he had forsaken , he plucked up his courage to ask the king a favor : " I should like to see a sunset ... do me that kindness ...
instance(p,pluck-01)
instance(h,he)
instance(c,courage)
instance(u,up)
instance(c2,cause-01)
instance(f,feel-01)
instance(s3,sad-02)
instance(b,bit)
instance(c3,cause-01)
instance(r,remember-01)
instance(p2,planet)
instance(l2,little)
instance(f2,forsake-01)
instance(c4,cause-01)
instance(a,ask-02)
instance(a2,and)
instance(l,like-02)
instance(i,i)
instance(s,see-01)
instance(s2,sunset)
instance(d,do-02)
instance(k,k)
instance(t,thing)
instance(k2,kind-01)
instance(k,king)
ARG0(p,h)
ARG1(p,c)
poss(c,h)
mod(c,u)
ARG1-of(c,c2)
ARG0(c2,f)
ARG0(f,h)
ARG1(h,s3)
ARG1(s3,h)
degree(h,b)
ARG1-of(h,c3)
ARG0(c3,r)
ARG0(r,h)
ARG1(h,p2)
poss(p2,h)
mod(h,l2)
ARG1-of(h,f2)
ARG0(f2,h)
ARG0-of(f2,c4)
ARG1(c4,a)
ARG0(a,h)
ARG1(h,a2)
op1(a2,l)
ARG0(l,i)
ARG1(l,s)
ARG0(s,i)
ARG1(i,s2)
op2(i,d)
ARG0(d,k)
ARG1(k,t)
ARG1-of(t,k2)
ARG0(k2,k)
ARG2(k,h)
ARG2(k,h)
ARG2(k,k)

# ::snt Order the sun to set ... "
instance(o,order-01)
instance(y,you)
instance(s,sun)
instance(s2,set-11)
ARG0(o,y)
ARG1(o,s)
ARG2(o,s2)
ARG1(s2,s)

# ::snt " If I ordered a general to fly from one flower to another like a butterfly , or to write a tragic drama , or to change himself into a sea bird , and if the general did not carry out the order that he had received , which one of us would be in the wrong ? " the king demanded .
instance(d,demand-01)
instance(k,king)
instance(w,wrong-04)
instance(a,amr-unknown)
instance(i2,include-91)
instance(w3,we)
instance(a2,and)
instance(o3,order-01)
instance(p,person)
instance(h,have-org-role-91)
instance(g,general)
instance(o4,or)
instance(f,fly-01)
instance(a3,another)
instance(t,thing)
instance(f2,flower-01)
instance(b,butterfly)
instance(w2,write-01)
instance(d2,drama)
instance(t2,tragedy)
instance(c2,change-01)
instance(b2,bird)
instance(s,sea)
instance(c,carry-out-03)
instance(t3,thing)
instance(o2,order-01)
instance(r,receive-01)
ARG0(d,k)
ARG1(d,w)
ARG1(w,a)
ARG1-of(a,i2)
ARG2(i2,w3)
condition(i2,a2)
op1(a2,o3)
ARG0(o3,k)
ARG1(k,p)
ARG0-of(p,h)
ARG2(h,g)
ARG2(h,o4)
op1(o4,f)
ARG1(f,p)
destination(p,a3)
source(p,t)
ARG1-of(t,f2)
manner(t,b)
op2(t,w2)
ARG0(w2,p)
ARG1(p,d2)
mod(d2,t2)
op3(d2,c2)
ARG0(c2,p)
ARG1(p,p)
ARG2(p,b2)
mod(b2,s)
op2(b2,c)
ARG0(c,p)
ARG1(p,t3)
ARG2-of(t3,o2)
ARG1-of(t3,r)
ARG0(r,p)
ARG2(p,k)

# ::snt " The general , or myself ? "
instance(a,amr-choice)
instance(p,person)
instance(h,have-org-role-91)
instance(g,general)
instance(i,i)
op1(a,p)
ARG0-of(p,h)
ARG2(h,g)
op2(h,i)

# ::snt " You , " said the little prince firmly .
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(y,you)
instance(f,firm-03)
ARG0(s,p)
mod(p,l)
ARG1(p,y)
ARG1-of(p,f)

# ::snt " Exactly .
instance(e,exact)

# ::snt One much require from each one the duty which each one can perform , " the king went on .
instance(g,go-on-25)
instance(k,king)
instance(o,obligate-01)
instance(o2,one)
instance(r,require-01)
instance(d,duty)
instance(p,perform-02)
instance(o3,o3)
instance(p2,possible-01)
instance(o3,one)
instance(e,each)
ARG0(g,k)
ARG1(g,o)
ARG1(o,o2)
ARG2(o,r)
ARG0(r,o2)
ARG1(o2,d)
ARG1-of(d,p)
ARG0(p,o3)
ARG1-of(o3,p2)
ARG2(o3,o3)
mod(o3,e)

# ::snt " Accepted authority rests first of all on reason .
instance(r,rest-02)
instance(a,authority)
instance(a2,accept-01)
instance(r2,reason-01)
instance(f,first-of-all)
ARG1(r,a)
ARG1-of(a,a2)
ARG2(a,r2)
mod(a,f)

# ::snt If you ordered your people to go and throw themselves into the sea , they would rise up in revolution .
instance(r,rise-up-03)
instance(p,person)
instance(y,y)
instance(r2,revolution-03)
instance(o,order-01)
instance(y,you)
instance(t,throw-01)
instance(s,sea)
ARG0(r,p)
poss(p,y)
ARG0-of(y,r2)
ARG1(y,y)
condition(y,o)
ARG0(o,y)
ARG1(o,p)
ARG2(p,t)
ARG0(t,p)
ARG1(p,p)
ARG2(p,s)

# ::snt I have the right to require obedience because my orders are reasonable . "
instance(r,right-05)
instance(i,i)
instance(r2,require-01)
instance(i,i)
instance(o,obey-01)
instance(c,cause-01)
instance(r3,reasonable-02)
instance(t,thing)
instance(o2,order-01)
ARG1(r,i)
ARG2(i,r2)
ARG0(r2,i)
ARG1(r2,o)
ARG1(o,i)
ARG1-of(o,c)
ARG0(c,r3)
ARG1(r3,t)
ARG2-of(t,o2)

# ::snt " Then my sunset ? " the little prince reminded him : for he never forgot a question once he had asked it .
instance(r,remind-01)
instance(p,prince)
instance(l,little)
instance(t2,truth-value)
instance(s,sunset)
instance(h,he)
instance(c,cause-01)
instance(f,forget-01)
instance(t,thing)
instance(q,question-01)
instance(a,ask-01)
instance(e,ever)
ARG0(r,p)
mod(p,l)
ARG1(p,t2)
polarity-of(t2,s)
poss(s,p)
ARG2(s,h)
ARG1-of(s,c)
ARG0(c,f)
ARG0(f,p)
ARG1(p,t)
ARG1-of(t,q)
condition(t,a)
ARG0(a,p)
ARG1(p,t)
time(p,e)

# ::snt " You shall have your sunset .
instance(h,have-03)
instance(y,you)
instance(s,sunset)
ARG0(h,y)
ARG1(h,s)
poss(s,y)

# ::snt I shall command it .
instance(c,command-02)
instance(i,i)
instance(i2,it)
ARG0(c,i)
ARG2(c,i2)

# ::snt But , according to my science of government , I shall wait until conditions are favorable . "
instance(c3,contrast-01)
instance(w,wait-01)
instance(i,i)
instance(c,condition)
instance(f2,favorable)
instance(c2,cause-01)
instance(s2,science)
instance(g,government-organization)
instance(g2,govern-01)
ARG2(c3,w)
ARG1(w,i)
ARG2(w,c)
mod(c,f2)
ARG1-of(c,c2)
ARG0(c2,s2)
domain(s2,g)
ARG0-of(g,g2)
poss(g,i)

# ::snt " When will that be ? " inquired the little prince .
instance(i,inquire-01)
instance(p,prince)
instance(l,little)
instance(b2,be-temporally-at-91)
instance(t,that)
instance(a,amr-unknown)
ARG0(i,p)
mod(p,l)
ARG1(p,b2)
ARG1(b2,t)
ARG2(b2,a)

# ::snt " Hum !
instance(h,hum)

# ::snt Hum ! " replied the king ; and before saying anything else he consulted a bulky almanac .
instance(a,and)
instance(r,reply-01)
instance(k,king)
instance(h,hum)
instance(c,consult-01)
instance(a2,almanac)
instance(b,bulky-02)
instance(b2,before)
instance(s,say-01)
instance(a3,anything)
instance(e,else)
op1(a,r)
ARG0(r,k)
ARG2(r,h)
op2(r,c)
ARG0(c,k)
ARG1(k,a2)
ARG1-of(a2,b)
time(a2,b2)
op1(b2,s)
ARG0(s,k)
ARG1(k,a3)
mod(a3,e)

# ::snt " Hum !
instance(h,hum)

# ::snt Hum !
instance(h,hum)

# ::snt That will be about - - about - - that will be this evening about twenty minutes to eight .
instance(b,be-temporally-at-91)
instance(t3,that)
instance(a,about)
instance(d,date-entity)
instance(e,evening)
instance(t,today)
ARG1(b,t3)
ARG2(b,a)
op1(a,d)
dayperiod(d,e)
mod(d,t)

# ::snt And you will see how well I am obeyed . "
instance(s,see-01)
instance(y,you)
instance(o,obey-01)
instance(i,i)
instance(w,well)
instance(s2,so)
ARG0(s,y)
ARG1(s,o)
ARG1(o,i)
manner(o,w)
degree(w,s2)

# ::snt The little prince yawned .
instance(y,yawn-01)
instance(p,prince)
instance(l,little)
ARG0(y,p)
mod(p,l)

# ::snt He was regretting his lost sunset .
instance(r,regret-01)
instance(h,he)
instance(l,lose-02)
instance(s,sunset)
ARG0(r,h)
ARG1(r,l)
ARG0(l,h)
ARG1(h,s)

# ::snt And then , too , he was already beginning to be a little bored .
instance(a2,and)
instance(b,begin-01)
instance(b4,bore-02)
instance(h2,he)
instance(l,little)
instance(a,already)
op2(a2,b)
ARG1(b,b4)
ARG1(b4,h2)
degree(b4,l)
time(b4,a)

# ::snt " I have nothing more to do here , " he said to the king .
instance(s,say-01)
instance(h,he)
instance(r,remain-01)
instance(t,thing)
instance(d2,do-02)
instance(h2,here)
instance(k,king)
ARG0(s,h)
ARG1(s,r)
ARG1(r,t)
ARG1-of(t,d2)
location(t,h2)
ARG2(t,k)

# ::snt " So I shall set out on my way again . "
instance(c,cause-01)
instance(s,set-out-07)
instance(i,i)
instance(w,way)
instance(a,again)
ARG1(c,s)
ARG0(s,i)
ARG1(s,w)
poss(w,i)
mod(w,a)

# ::snt " Do not go , " said the king , who was very proud of having a subject .
instance(s,say-01)
instance(k,king)
instance(p,pride-01)
instance(h,have-03)
instance(s2,subject)
instance(v,very)
instance(g,go-02)
instance(y,you)
ARG0(s,k)
ARG0-of(k,p)
ARG2(p,h)
ARG0(h,k)
ARG1(k,s2)
degree(k,v)
ARG1(k,g)
ARG0(g,y)

# ::snt " Do not go .
instance(g,go-02)
instance(y,you)
ARG0(g,y)

# ::snt I will make you a Minister ! "
instance(m,make-02)
instance(i,i)
instance(h,have-org-role-91)
instance(y,you)
instance(m2,minister)
ARG0(m,i)
ARG1(m,h)
ARG0(h,y)
ARG2(h,m2)

# ::snt " Minister of what ? "
instance(m,minister)
instance(a,amr-unknown)
topic(m,a)

# ::snt " Minster of - - of Justice ! "
instance(m,minister)
instance(j,justice)
topic(m,j)

# ::snt " But there is nobody here to judge ! "
instance(n,nobody)
instance(h,here)
instance(j,judge-01)
location(n,h)
ARG1-of(n,j)

# ::snt " We do not know that , " the king said to him .
instance(s,say-01)
instance(k,king)
instance(k2,know-01)
instance(w,we)
instance(t,that)
instance(-,-)
instance(h,he)
ARG0(s,k)
ARG1(s,k2)
ARG0(k2,w)
ARG1(k2,t)
polarity(k2,-)
ARG2(k2,h)

# ::snt " I have not yet made a complete tour of my kingdom .
instance(t,tour-01)
instance(i,i)
instance(k,kingdom)
instance(c,complete-02)
ARG0(t,i)
ARG1(t,k)
poss(k,i)
ARG1-of(k,c)

# ::snt I am very old .
instance(o2,old)
instance(i,i)
instance(v,very)
domain(o2,i)
degree(o2,v)

# ::snt There is no room here for a carriage .
instance(r,room)
instance(-,-)
instance(c,carriage)
instance(h,here)
polarity(r,-)
purpose(-,c)
location(-,h)

# ::snt And it tires me to walk . "
instance(t,tire-01)
instance(w,walk-01)
instance(i,i)
ARG0(t,w)
ARG0(w,i)
ARG1(w,i)

# ::snt " Oh , but I have looked already ! " said the little prince , turning around to give one more glance to the other side of the planet .
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(t,turn-01)
instance(g,glance-01)
instance(s2,side)
instance(o,other)
instance(p2,planet)
instance(m,more)
instance(c,contrast-01)
instance(l2,look-01)
instance(a2,already)
ARG0(s,p)
mod(p,l)
ARG0-of(p,t)
ARG1(t,p)
purpose(p,g)
ARG0(g,p)
ARG1(p,s2)
mod(s2,o)
part-of(s2,p2)
mod(s2,m)
ARG1(s2,c)
ARG2(c,l2)
ARG0(l2,p)
time(p,a2)

# ::snt On that side , as on this , there was nobody at all ...
instance(n2,nobody)
instance(s,side)
instance(t,that)
instance(s2,same-01)
instance(t2,this)
instance(a,at-all)
location(n2,s)
mod(s,t)
ARG1-of(s,s2)
ARG2(s2,t2)
mod(s2,a)

# ::snt " Then you shall judge yourself , " the king answered .
instance(a,answer-01)
instance(k,king)
instance(h,have-condition-91)
instance(j,judge-01)
instance(y,you)
ARG0(a,k)
ARG2(a,h)
ARG1(h,j)
ARG0(j,y)
ARG1(j,y)

# ::snt " that is the most difficult thing of all .
instance(h,have-degree-91)
instance(t,that)
instance(d,difficult)
instance(m,most)
instance(a,all)
ARG1(h,t)
ARG2(h,d)
ARG3(h,m)
ARG5(h,a)

# ::snt It is much more difficult to judge oneself than to judge others .
instance(h,have-degree-91)
instance(j,judge-01)
instance(o,one)
instance(d,difficult)
instance(m,more)
instance(m2,much)
instance(j2,judge-01)
instance(o2,other)
ARG1(h,j)
ARG0(j,o)
ARG1(j,o)
ARG2(j,d)
ARG3(j,m)
quant(m,m2)
ARG4(m,j2)
ARG1(j2,o2)

# ::snt If you succeed in judging yourself rightly , then you are indeed a man of true wisdom . "
instance(w2,wise)
instance(y,you)
instance(s,succeed-01)
instance(j,judge-01)
instance(r,right-02)
instance(t,true-01)
domain(w2,y)
condition(w2,s)
ARG0(s,y)
ARG1(y,j)
ARG0(j,y)
ARG1(y,y)
ARG1-of(y,r)
ARG1-of(y,t)

# ::snt " Yes , " said the little prince , " but I can judge myself anywhere .
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(y,yes)
instance(p2,possible-01)
instance(j,judge-01)
instance(a,anywhere)
ARG0(s,p)
mod(p,l)
ARG1(p,y)
concession(y,p2)
ARG1(p2,j)
ARG0(j,p)
ARG1(p,p)
location(p,a)

# ::snt I do not need to live on this planet .
instance(n,need-01)
instance(i,i)
instance(l,live-01)
instance(p,planet)
instance(t,this)
instance(-,-)
ARG0(n,i)
ARG1(n,l)
ARG0(l,i)
location(i,p)
mod(p,t)
polarity(p,-)

# ::snt " Hum !
instance(h,hum)

# ::snt Hum ! " said the king .
instance(s,say-01)
instance(k,king)
instance(h,hum)
ARG0(s,k)
ARG1(s,h)

# ::snt " I have good reason to believe that somewhere on my planet there is an old rat .
instance(h2,have-03)
instance(i,i)
instance(r3,reason)
instance(g,good-02)
instance(c,cause-01)
instance(b3,believe-01)
instance(r2,rat)
instance(s,somewhere)
instance(p,planet)
instance(o,old)
ARG0(h2,i)
ARG1(h2,r3)
ARG1-of(r3,g)
ARG0-of(r3,c)
ARG1(c,b3)
ARG0(b3,i)
ARG1(i,r2)
location(r2,s)
location(s,p)
poss(p,i)
mod(p,o)

# ::snt I hear him at night .
instance(h,hear-01)
instance(i,i)
instance(h2,he)
instance(d,date-entity)
ARG0(h,i)
ARG1(h,h2)
time(h,d)

# ::snt You can judge this old rat .
instance(p,possible-01)
instance(j,judge-01)
instance(y,you)
instance(r,rat)
instance(o,old)
instance(t,this)
ARG1(p,j)
ARG0(j,y)
ARG1(j,r)
mod(r,o)
mod(r,t)

# ::snt From time to time you will condemn him to death .
instance(c,condemn-01)
instance(y,you)
instance(h,he)
instance(d,die-01)
instance(t,time-to-time)
ARG0(c,y)
ARG1(c,h)
ARG3(c,d)
ARG1(d,h)
frequency(d,t)

# ::snt Thus his life will depend on your justice .
instance(d,depend-01)
instance(l,live-01)
instance(h,he)
instance(j,justice)
instance(y,you)
ARG0(d,l)
ARG0(l,h)
ARG1(l,j)
poss(j,y)

# ::snt But you will pardon him on each occasion ; for he must be treated thriftily .
instance(p,pardon-01)
instance(y,you)
instance(h,he)
instance(o2,occasion-02)
instance(e,each)
instance(c,cause-01)
instance(o,obligate-01)
instance(t,treat-04)
instance(t2,thrift)
ARG0(p,y)
ARG1(p,h)
frequency(p,o2)
quant(o2,e)
ARG1-of(o2,c)
ARG0(c,o)
ARG2(o,t)
ARG1(t,h)
manner(h,t2)

# ::snt He is the only one we have . "
instance(o,one)
instance(o2,only)
instance(h2,he)
instance(h,have-03)
instance(w,we)
mod(o,o2)
domain(o,h2)
ARG1-of(o,h)
ARG0(h,w)

# ::snt " I , " replied the little prince , " do not like to condemn anyone to death .
instance(r,reply-01)
instance(p,prince)
instance(l,little)
instance(d2,dislike-01)
instance(c,condemn-01)
instance(a,anyone)
instance(d,die-01)
ARG0(r,p)
mod(p,l)
ARG1(p,d2)
ARG0(d2,p)
ARG1(p,c)
ARG0(c,p)
ARG1(p,a)
ARG3(p,d)
ARG1(d,a)

# ::snt And now I think I will go on my way . "
instance(t,think-01)
instance(i,i)
instance(g,go-02)
instance(w,way)
instance(n,now)
ARG0(t,i)
ARG1(t,g)
ARG0(g,i)
ARG1(i,w)
poss(w,i)
time(w,n)

# ::snt " No , " said the king .
instance(s,say-01)
instance(k,king)
instance(n,no)
ARG0(s,k)
ARG1(s,n)

# ::snt But the little prince , having now completed his preparations for departure , had no wish to grieve the old monarch .
instance(w,wish-01)
instance(p,prince)
instance(l,little)
instance(c,complete-01)
instance(p2,prepare-02)
instance(d,depart-01)
instance(n,now)
instance(g,grieve-01)
instance(m,monarch)
instance(o,old)
ARG0(w,p)
mod(p,l)
ARG0-of(p,c)
ARG1(c,p2)
ARG0(p2,p)
ARG2(p,d)
ARG0(d,p)
time(d,n)
ARG1(d,g)
ARG0(g,p)
ARG1(p,m)
mod(m,o)

# ::snt " If Your Majesty wishes to be promptly obeyed , " he said , " he should be able to give me a reasonable order .
instance(s,say-01)
instance(h,he)
instance(p,possible-01)
instance(o,order-01)
instance(p2,person)
instance(t2,title-01)
instance(m,majesty)
instance(t,thing)
instance(r,reasonable-02)
instance(w,wish-01)
instance(o2,obey-01)
instance(p3,prompt)
ARG0(s,h)
ARG1(s,p)
ARG1(p,o)
ARG0(o,p2)
ARG1-of(p2,t2)
ARG2(t2,m)
poss(m,p2)
ARG1(m,h)
ARG2(h,t)
ARG1-of(t,r)
condition(t,w)
ARG0(w,p2)
ARG1(p2,o2)
ARG1(o2,p2)
manner(p2,p3)

# ::snt He should be able , for example , to order me to be gone by the end of one minute .
instance(e2,exemplify-01)
instance(p,possible-01)
instance(o,order-01)
instance(h,he)
instance(i,i)
instance(g,go-02)
instance(b,by)
instance(e,end-01)
instance(t,temporal-quantity)
instance(m,minute)
ARG0(e2,p)
ARG1(p,o)
ARG0(o,h)
ARG1(o,i)
ARG2(o,g)
ARG0(g,i)
time(i,b)
op1(b,e)
ARG1(e,t)
unit(t,m)

# ::snt It seems to me that conditions are favorable ... "
instance(s,seem-01)
instance(f,favorable)
instance(c,condition)
instance(i2,i)
ARG1(s,f)
domain(f,c)
ARG2(f,i2)

# ::snt As the king made no answer , the little prince hesitated a moment .
instance(h,hesitate-01)
instance(p,prince)
instance(l,little)
instance(m,moment)
instance(c,cause-01)
instance(a,answer-01)
instance(k,king)
ARG0(h,p)
mod(p,l)
duration(p,m)
ARG1-of(p,c)
ARG0(c,a)
ARG0(a,k)

# ::snt Then , with a sigh , he took his leave .
instance(t,take-01)
instance(h,he)
instance(s,sigh-02)
instance(l,leave-11)
instance(t2,then)
ARG0(t,h)
ARG0-of(h,s)
ARG1(h,l)
ARG0(l,h)
time(l,t2)

# ::snt " I made you my Ambassador , " the king called out , hastily .
instance(c,call-07)
instance(k,king)
instance(m,make-02)
instance(h2,have-org-role-91)
instance(y,you)
instance(a,ambassador)
instance(h,hasty)
ARG0(c,k)
ARG1(c,m)
ARG0(m,k)
ARG1(k,h2)
ARG0(h2,y)
ARG1(h2,k)
ARG2(k,a)
manner(k,h)

# ::snt He had a magnificent air of authority .
instance(h,have-03)
instance(h2,he)
instance(a,air)
instance(m,magnificence)
instance(a2,authority)
ARG0(h,h2)
ARG1(h,a)
mod(a,m)
domain(a,a2)

# ::snt " The grown - ups are very strange , " the little prince said to himself , as he continued on his journey .
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(s2,strange)
instance(v,very)
instance(g,grown-up)
instance(c,continue-01)
instance(j,journey-01)
ARG0(s,p)
mod(p,l)
ARG1(p,s2)
degree(s2,v)
domain(s2,g)
ARG2(s2,p)
time(p,c)
ARG0(c,p)
ARG1(p,j)
ARG0(j,p)

# ::snt Chapter 11 .
instance(c,chapter)

# ::snt The second planet was inhabited by a conceited man .
instance(i,inhabit-01)
instance(m,man)
instance(c,conceit)
instance(p,planet)
instance(o,ordinal-entity)
ARG0(i,m)
mod(m,c)
ARG1(m,p)
ord(p,o)

# ::snt " Ah !
instance(a,ah)

# ::snt Ah !
instance(a,ah)

# ::snt I am about to receive a visit from an admirer ! " he exclaimed from afar , when he first saw the little prince coming .
instance(e,exclaim-01)
instance(h,he)
instance(v,visit-01)
instance(p,person)
instance(a,admire-01)
instance(a3,about-to)
instance(s,see-01)
instance(c,come-01)
instance(p2,prince)
instance(l,little)
instance(o,ordinal-entity)
instance(f2,from)
instance(a2,afar)
ARG0(e,h)
ARG1(e,v)
ARG0(v,h)
ARG1(h,p)
ARG0-of(p,a)
ARG1(a,h)
time(a,a3)
time(a,s)
ARG0(s,h)
ARG1(h,c)
ARG1(c,p2)
mod(p2,l)
ord(p2,o)
direction(p2,f2)
op1(f2,a2)

# ::snt For , to conceited men , all other men are admirers .
instance(o2,opine-01)
instance(m2,man)
instance(c,conceit)
instance(p2,person)
instance(a3,admire-01)
instance(m,man)
instance(o,other)
instance(a,all)
ARG0(o2,m2)
mod(m2,c)
ARG1(m2,p2)
ARG0-of(p2,a3)
domain(p2,m)
mod(m,o)
mod(m,a)

# ::snt " Good morning , " said the little prince .
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(m,morning)
instance(g,good-02)
ARG0(s,p)
mod(p,l)
ARG1(p,m)
ARG1-of(m,g)

# ::snt " That is a queer hat you are wearing . "
instance(h2,hat)
instance(q2,queer)
instance(t2,that)
instance(w2,wear-01)
mod(h2,q2)
domain(h2,t2)
ARG1-of(h2,w2)

# ::snt " It is a hat for salutes , " the conceited man replied .
instance(r,reply-01)
instance(m,man)
instance(c,conceit)
instance(h2,hat)
instance(s,salute-01)
instance(i,it)
ARG0(r,m)
mod(m,c)
ARG1(m,h2)
purpose(h2,s)
instrument(s,h2)
domain(s,i)

# ::snt " It is to raise in salute when people acclaim me .
instance(h,have-purpose-91)
instance(i,it)
instance(r,raise-01)
instance(s,salute-01)
instance(a,acclaim-01)
instance(p,person)
instance(i2,i)
ARG1(h,i)
ARG2(h,r)
ARG1(r,i)
subevent-of(i,s)
time(s,a)
ARG0(a,p)
ARG1(a,i2)
instrument(a,i)

# ::snt Unfortunately , nobody at all ever passes this way . "
instance(p,pass-03)
instance(n,nobody)
instance(a,at-all)
instance(w,way)
instance(t,this)
instance(f,fortunate-01)
instance(e,ever)
ARG1(p,n)
degree(n,a)
path(n,w)
mod(w,t)
ARG2-of(w,f)
time(w,e)

# ::snt " Yes ? " said the little prince , who did not understand what the conceited man was talking about .
instance(r,request-response-91)
instance(p,prince)
instance(l,little)
instance(u,understand-01)
instance(t2,thing)
instance(t,talk-01)
instance(m,man)
instance(c,conceit)
ARG0(r,p)
mod(p,l)
ARG0-of(p,u)
ARG1(u,t2)
ARG1-of(t2,t)
ARG0(t,m)
mod(m,c)

# ::snt " Clap your hands , one against the other , " the conceited man now directed him .
instance(d,direct-01)
instance(m,man)
instance(c,conceit)
instance(h,he)
instance(c2,clap-01)
instance(h2,hand)
instance(c3,clap-01)
instance(h3,hand)
instance(h4,hand)
instance(d2,differ-02)
instance(n,now)
ARG0(d,m)
mod(m,c)
ARG1(m,h)
ARG2(m,c2)
ARG0(c2,h)
ARG1(h,h2)
part-of(h2,h)
manner(h2,c3)
ARG0(c3,h)
ARG1(h,h3)
part-of(h3,h)
ARG2(h3,h4)
part-of(h4,h)
ARG1-of(h,d2)
ARG2(d2,h3)
time(d2,n)

# ::snt The little prince clapped his hands .
instance(c,clap-01)
instance(p,prince)
instance(l,little)
instance(h,hand)
ARG0(c,p)
mod(p,l)
ARG1(p,h)
part-of(h,p)

# ::snt The conceited man raised his hat in a modest salute .
instance(r,raise-01)
instance(m,man)
instance(c,conceit)
instance(h,hat)
instance(s,salute-01)
instance(m2,modest)
ARG0(r,m)
mod(m,c)
ARG1(m,h)
poss(h,m)
subevent-of(h,s)
ARG0(s,m)
manner(m,m2)
instrument(m,h)

# ::snt " This is more entertaining than the visit to the king , " the little prince said to himself .
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(h,have-degree-91)
instance(t,this)
instance(e,entertain-01)
instance(m,more)
instance(v,visit-01)
instance(k,king)
ARG0(s,p)
mod(p,l)
ARG1(p,h)
ARG1(h,t)
ARG2(h,e)
ARG0(e,t)
ARG3(e,m)
ARG4(e,v)
ARG1(v,k)
ARG2(v,p)

# ::snt And he began again to clap his hands , one against the other .
instance(b,begin-01)
instance(h,he)
instance(c,clap-01)
instance(h2,hand)
instance(c2,clap-01)
instance(h3,hand)
instance(h4,hand)
instance(d,differ-02)
instance(a,again)
ARG0(b,h)
ARG1(b,c)
ARG0(c,h)
ARG1(h,h2)
part-of(h2,h)
manner(h2,c2)
ARG0(c2,h)
ARG1(h,h3)
part-of(h3,h)
ARG2(h3,h4)
part-of(h4,h)
ARG1-of(h,d)
ARG2(d,h3)
mod(d,a)

# ::snt The conceited man against raised his hat in salute .
instance(r,raise-01)
instance(m,man)
instance(c,conceit)
instance(h2,hat)
instance(a,again)
instance(s,salute-01)
ARG0(r,m)
mod(m,c)
ARG1(m,h2)
mod(m,a)
subevent-of(m,s)
ARG0(s,m)
instrument(m,h2)

# ::snt After five minutes of this exercise the little prince grew tired of the game 's monotony .
instance(t,tire-01)
instance(p,prince)
instance(l,little)
instance(m,monotony)
instance(g2,game)
instance(a,after)
instance(e,exercise)
instance(t2,temporal-quantity)
instance(m2,minute)
ARG0(t,p)
mod(p,l)
ARG1(p,m)
poss(m,g2)
time(m,a)
op1(a,e)
duration(e,t2)
unit(t2,m2)

# ::snt " And what should one do to make the hat come down ? " he asked .
instance(a,ask-01)
instance(h,he)
instance(d,do-02)
instance(o,one)
instance(a2,amr-unknown)
instance(m,make-02)
instance(c,come-01)
instance(h3,hat)
instance(d3,down)
ARG0(a,h)
ARG1(a,d)
ARG0(d,o)
ARG1(d,a2)
ARG2(d,m)
ARG0(m,o)
ARG1(o,c)
ARG1(c,h3)
direction(c,d3)

# ::snt But the conceited man did not hear him .
instance(h,hear-01)
instance(m,man)
instance(c,conceit)
instance(h2,he)
instance(-,-)
ARG0(h,m)
mod(m,c)
ARG2(m,h2)
polarity(m,-)

# ::snt Conceited people never hear anything but praise .
instance(h,hear-01)
instance(p,person)
instance(c,conceit)
instance(a,anything)
instance(p2,praise-01)
instance(e,ever)
ARG0(h,p)
mod(p,c)
ARG1(p,a)
concession(a,p2)
time(a,e)

# ::snt " Do you really admire me very much ? " he demanded of the little prince .
instance(d,demand-01)
instance(h,he)
instance(t,truth-value)
instance(a,admire-01)
instance(p,p)
instance(m,much)
instance(v,very)
instance(r,real-04)
instance(p,prince)
instance(l,little)
ARG0(d,h)
ARG1(d,t)
polarity-of(t,a)
ARG0(a,p)
ARG1(p,h)
degree(h,m)
degree(m,v)
ARG1-of(m,r)
ARG2(m,p)
mod(p,l)

# ::snt " What does that mean - - ' admire ' ? "
instance(m,mean-01)
instance(a,admire-01)
instance(a2,amr-unknown)
ARG1(m,a)
ARG2(m,a2)

# ::snt " To admire mean that you regard me as the handsomest , the best - dressed , the richest , and the most intelligent man on this planet . "
instance(m,mean-01)
instance(a,admire-01)
instance(r,regard-01)
instance(y,you)
instance(i,i)
instance(m6,man)
instance(h2,have-degree-91)
instance(h,handsome)
instance(m2,most)
instance(p2,planet)
instance(t,this)
instance(h3,have-degree-91)
instance(w2,well-09)
instance(d,dress-01)
instance(m3,most)
instance(h4,have-degree-91)
instance(r2,rich)
instance(m4,most)
instance(h5,have-degree-91)
instance(i2,intelligent-01)
instance(m5,most)
ARG1(m,a)
ARG2(m,r)
ARG0(r,y)
ARG1(r,i)
ARG2(r,m6)
ARG1-of(m6,h2)
ARG2(h2,h)
ARG3(h2,m2)
ARG5(h2,p2)
mod(p2,t)
ARG1-of(p2,h3)
ARG2(h3,w2)
ARG1(w2,d)
ARG1(d,m6)
ARG3(d,m3)
ARG5(d,p2)
ARG1-of(d,h4)
ARG2(h4,r2)
ARG3(h4,m4)
ARG5(h4,p2)
ARG1-of(h4,h5)
ARG2(h5,i2)
ARG1(i2,m6)
ARG3(i2,m5)
ARG5(i2,p2)

# ::snt " But you are the only man on your planet ! "
instance(c,contrast-01)
instance(m,man)
instance(o,only)
instance(p,planet)
instance(y,y)
instance(y,you)
ARG2(c,m)
quant(m,o)
location(o,p)
poss(p,y)
domain(p,y)

# ::snt " Do me this kindness .
instance(k2,kind-01)
instance(y,you)
instance(t,this)
instance(i,i)
ARG0(k2,y)
ARG1(k2,t)
ARG2(k2,i)

# ::snt Admire me just the same . "
instance(a,admire-01)
instance(y,you)
instance(i,i)
instance(s,same-01)
instance(j,just)
ARG0(a,y)
ARG1(a,i)
manner(a,s)
degree(s,j)

# ::snt " I admire you , " said the little prince , shrugging his shoulders slightly , " but what is there in that to interest you so much ? "
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(s2,shrug-01)
instance(s3,shoulder)
instance(s4,slight)
instance(c2,contrast-01)
instance(a,admire-01)
instance(i,i)
instance(y,you)
instance(i2,interest-01)
instance(m,much)
instance(s6,so)
instance(c,cause-01)
instance(a2,amr-unknown)
ARG0(s,p)
mod(p,l)
ARG0-of(p,s2)
ARG1(s2,s3)
part-of(s3,p)
degree(s3,s4)
ARG1(s3,c2)
ARG1(c2,a)
ARG0(a,i)
ARG1(a,y)
ARG2(a,i2)
ARG0(i2,a)
ARG1(a,y)
degree(y,m)
degree(m,s6)
ARG1-of(m,c)
ARG0(c,a2)

# ::snt And the little prince went away .
instance(a,and)
instance(g,go-02)
instance(p,prince)
instance(l,little)
instance(a2,away)
op2(a,g)
ARG0(g,p)
mod(p,l)
direction(p,a2)

# ::snt " The grown - ups are certainly very odd , " he said to himself , as he continued on his journey .
instance(s,say-01)
instance(h,he)
instance(o,odd)
instance(v,very)
instance(c2,certain)
instance(g,grown-up)
instance(c,continue-01)
instance(j,journey-01)
ARG0(s,h)
ARG1(s,o)
degree(o,v)
mod(o,c2)
domain(o,g)
ARG2(o,h)
time(h,c)
ARG0(c,h)
ARG1(h,j)
ARG0(j,h)

# ::snt Chapter 12 .
instance(c,chapter)
instance(12,12)
mod(c,12)

# ::snt The next planet was inhabited by a tippler .
instance(i,inhabit-01)
instance(p,person)
instance(t,tipple-01)
instance(p2,planet)
instance(n,next)
ARG0(i,p)
ARG0-of(p,t)
ARG1(p,p2)
mod(p2,n)

# ::snt This was a very short visit , but it plunged the little prince into deep dejection .
instance(h,have-concession-91)
instance(d,deject-01)
instance(v,v)
instance(p2,prince)
instance(l,little)
instance(d2,deep-02)
instance(v,visit-01)
instance(s,short-07)
instance(v2,very)
instance(t,this)
ARG1(h,d)
ARG0(d,v)
ARG1(v,p2)
mod(p2,l)
ARG1-of(p2,d2)
ARG2(p2,v)
ARG1-of(v,s)
degree(s,v2)
domain(s,t)

# ::snt " What are you doing there ? " he said to the tippler , whom he found settled down in silence before a collection of empty bottles and also a collection of full bottles .
instance(s,say-01)
instance(h,he)
instance(d,do-02)
instance(p,p)
instance(a,amr-unknown)
instance(t,there)
instance(p,person)
instance(t2,tipple-01)
instance(f,find-01)
instance(s2,settle-down-04)
instance(s3,silent)
instance(b,before)
instance(a2,and)
instance(b2,bottle)
instance(e,empty-02)
instance(c,collect-01)
instance(b3,bottle)
instance(f2,full)
instance(c2,collect-01)
ARG0(s,h)
ARG1(s,d)
ARG0(d,p)
ARG1(p,a)
location(p,t)
ARG2(p,p)
ARG0-of(p,t2)
ARG1-of(p,f)
ARG0(f,h)
ARG1-of(f,s2)
manner(s2,s3)
location(s2,b)
op1(b,a2)
op1(a2,b2)
ARG1-of(b2,e)
ARG1-of(b2,c)
op2(b2,b3)
mod(b3,f2)
ARG1-of(b3,c2)

# ::snt " I am drinking , " replied the tippler , with a lugubrious air .
instance(r,reply-01)
instance(p,person)
instance(t,tipple-01)
instance(d,drink-01)
instance(l,lugubrious)
ARG0(r,p)
ARG0-of(p,t)
ARG2(p,d)
ARG0(d,p)
manner(d,l)

# ::snt " Why are you drinking ? " demanded the little prince .
instance(d,demand-01)
instance(p,prince)
instance(l,little)
instance(c,cause-01)
instance(a,amr-unknown)
instance(d2,drink-01)
instance(y,you)
ARG0(d,p)
mod(p,l)
ARG1(p,c)
ARG0(c,a)
ARG1(c,d2)
ARG0(d2,y)

# ::snt " So that I may forget , " replied the tippler .
instance(r,reply-01)
instance(p,person)
instance(t,tipple-01)
instance(c,cause-01)
instance(p2,possible-01)
instance(f,forget-01)
ARG0(r,p)
ARG0-of(p,t)
ARG2(p,c)
ARG0(c,p2)
ARG1(p2,f)
ARG0(f,p)

# ::snt " Forget what ? " inquired the little prince , who already was sorry for him .
instance(i,inquire-01)
instance(p,prince)
instance(l,little)
instance(s,sorry-01)
instance(h,he)
instance(a2,already)
instance(f,forget-01)
instance(a,amr-unknown)
ARG0(i,p)
mod(p,l)
ARG1-of(p,s)
ARG2(s,h)
time(s,a2)
ARG1(s,f)
ARG0(f,h)
ARG1(h,a)
ARG2(h,h)

# ::snt " Forget that I am ashamed , " the tippler confessed , hanging his head .
instance(c,confess-01)
instance(p,person)
instance(t,tipple-01)
instance(h,hang-01)
instance(h2,head)
instance(f,forget-01)
instance(s,shame-01)
ARG0(c,p)
ARG0-of(p,t)
ARG0-of(p,h)
ARG1(h,h2)
part-of(h2,p)
ARG1(h2,f)
ARG0(f,p)
ARG1(p,s)
ARG1(s,p)

# ::snt " Ashamed of what ? " insisted the little prince , who wanted to help him .
instance(i,insist-01)
instance(p,prince)
instance(l,little)
instance(w,want-01)
instance(h,help-01)
instance(h2,he)
instance(a,amr-unknown)
instance(s,shame-01)
ARG0(i,p)
mod(p,l)
ARG0-of(p,w)
ARG1(w,h)
ARG0(h,p)
ARG1(p,h2)
ARG1(p,a)
ARG0-of(a,s)

# ::snt " Ashamed of drinking ! "
instance(s,shame-01)
instance(d,drink-01)
ARG0(s,d)

# ::snt The tippler brought his speech to an end , and shut himself up in an impregnable silence .
instance(a,and)
instance(e,end-01)
instance(p,person)
instance(t,tipple-01)
instance(s,speak-01)
instance(s2,shut-up-06)
instance(s3,silent)
instance(p2,pregnable)
op1(a,e)
ARG0(e,p)
ARG0-of(p,t)
ARG1(p,s)
ARG0(s,p)
op2(s,s2)
ARG0(s2,p)
ARG1(p,p)
manner(p,s3)
mod(s3,p2)
domain(s3,p)

# ::snt And the little prince went away , puzzled .
instance(a,and)
instance(g,go-02)
instance(p,prince)
instance(l,little)
instance(p2,puzzle-01)
instance(a2,away)
op2(a,g)
ARG0(g,p)
mod(p,l)
ARG1-of(p,p2)
direction(p,a2)

# ::snt " The grown - ups are certainly very , very odd , " he said to himself , as he continued on his journey .
instance(s,say-01)
instance(h,he)
instance(o,odd)
instance(v,very)
instance(v2,very)
instance(g,grown-up)
instance(c,certain)
instance(c2,continue-01)
instance(j,journey-01)
ARG0(s,h)
ARG1(s,o)
degree(o,v)
degree(v,v2)
domain(v,g)
mod(v,c)
ARG2(v,h)
time(h,c2)
ARG0(c2,h)
ARG1(h,j)
ARG0(j,h)

# ::snt Chapter 13 .
instance(c,chapter)
instance(13,13)
mod(c,13)

# ::snt The fourth planet belonged to a businessman .
instance(b,belong-01)
instance(p,planet)
instance(o,ordinal-entity)
instance(b3,businessman)
ARG0(b,p)
ord(p,o)
ARG1(p,b3)

# ::snt This man was so much occupied that he did not even raise his head at the little prince 's arrival .
instance(h2,have-degree-91)
instance(m,man)
instance(t,this)
instance(o,occupy-01)
instance(s,so)
instance(r,raise-01)
instance(h,head)
instance(a,arrive-01)
instance(p,prince)
instance(l,little)
ARG1(h2,m)
mod(m,t)
ARG2(m,o)
ARG1(o,m)
ARG3(o,s)
ARG6(o,r)
ARG0(r,m)
ARG1(m,h)
part-of(h,m)
time(h,a)
ARG1(a,p)
mod(p,l)

# ::snt " Good morning , " the little prince said to him .
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(m,morning)
instance(g,good-02)
instance(h,he)
ARG0(s,p)
mod(p,l)
ARG1(p,m)
ARG1-of(m,g)
ARG2(m,h)

# ::snt " Your cigarette has gone out . "
instance(g,go-out-18)
instance(c,cigarette)
instance(y,you)
ARG1(g,c)
poss(c,y)

# ::snt " Three and two make five .
instance(e,equal-01)
instance(s,sum-of)
instance(5,5)
ARG1(e,s)
ARG2(e,5)

# ::snt Five and seven make twelve .
instance(e,equal-01)
instance(s,sum-of)
instance(12,12)
ARG1(e,s)
ARG2(e,12)

# ::snt Twelve and three make fifteen .
instance(e,equal-01)
instance(s,sum-of)
instance(15,15)
ARG1(e,s)
ARG2(e,15)

# ::snt Good morning .
instance(m,morning)
instance(g,good-02)
ARG1-of(m,g)

# ::snt FIfteen and seven make twenty - two .
instance(e,equal-01)
instance(s,sum-of)
instance(15,15)
instance(7,7)
instance(22,22)
ARG1(e,s)
op1(s,15)
op2(15,7)
ARG2(15,22)

# ::snt Twenty - two and six make twenty - eight .
instance(e,equal-01)
instance(s,sum-of)
instance(22,22)
instance(6,6)
instance(28,28)
ARG1(e,s)
op1(s,22)
op2(22,6)
ARG2(22,28)

# ::snt I have n't time to light it again .
instance(h,have-03)
instance(i,i)
instance(t,time)
instance(l,light-04)
instance(i2,it)
instance(a,again)
instance(-,-)
ARG0(h,i)
ARG1(h,t)
purpose(t,l)
ARG0(l,i)
ARG1(i,i2)
mod(i,a)
polarity(i,-)

# ::snt Twenty - six and five make thirty - one .
instance(e,equal-01)
instance(s,sum-of)
instance(26,26)
instance(5,5)
instance(31,31)
ARG1(e,s)
op1(s,26)
op2(26,5)
ARG2(26,31)

# ::snt Phew !
instance(p,phew)

# ::snt Then that makes five - hundred - and - one - million , six - hundred - twenty - two - thousand , seven - hundred - thirty - one . "
instance(e,equal-01)
instance(501622731,501622731)
instance(t,that)
ARG1(e,501622731)
ARG2(501622731,t)

# ::snt " Five hundred million what ? " asked the little prince .
instance(a,ask-01)
instance(p,prince)
instance(l,little)
instance(a2,amr-unknown)
instance(500000000,500000000)
ARG0(a,p)
mod(p,l)
ARG1(p,a2)
quant(a2,500000000)

# ::snt " Eh ?
instance(e,eh)

# ::snt Are you still there ?
instance(b,be-located-at-91)
instance(y,you)
instance(t,there)
instance(s,still)
instance(a,amr-unknown)
ARG1(b,y)
ARG2(b,t)
mod(b,s)
polarity(b,a)

# ::snt Five - hundred - and - one million - - I can n't stop ...
instance(a,and)
instance(501000000,501000000)
instance(p,possible-01)
instance(s,stop-01)
instance(i,i)
instance(-,-)
op1(a,501000000)
op2(501000000,p)
ARG1(p,s)
ARG0(s,i)
polarity(s,-)

# ::snt I have so much to do !
instance(o,obligate-01)
instance(i,i)
instance(d,do-02)
instance(m,much)
instance(s,so)
ARG1(o,i)
ARG2(o,d)
ARG1(d,m)
degree(m,s)

# ::snt I am concerned with matters of consequence .
instance(c,concern-01)
instance(m,matter)
instance(c2,consequential-01)
instance(i,i)
ARG0(c,m)
ARG1-of(m,c2)
ARG1(m,i)

# ::snt I do n't amuse myself with balderdash .
instance(a,amuse-01)
instance(i,i)
instance(b,balderdash)
instance(-,-)
ARG0(a,i)
ARG1(a,i)
ARG2(i,b)
polarity(i,-)

# ::snt Two and five make seven ... "
instance(e,equal-01)
instance(7,7)
instance(s,sum-of)
instance(2,2)
instance(5,5)
ARG1(e,7)
ARG2(7,s)
op1(s,2)
op2(2,5)

# ::snt " Five - hundred - and - one million what ? " repeated the little prince , who never in his life had let go of a question once he had asked it .
instance(r,repeat-01)
instance(p,prince)
instance(l,little)
instance(l2,let-01)
instance(g,go-02)
instance(t,thing)
instance(q,question-01)
instance(l3,live-01)
instance(a2,ask-01)
instance(e,ever)
instance(a,amr-unknown)
ARG0(r,p)
mod(p,l)
ARG0-of(p,l2)
ARG1(l2,g)
ARG0(g,t)
ARG1-of(t,q)
ARG0(q,p)
time(q,l3)
ARG0(l3,p)
time(l3,a2)
ARG0(a2,p)
ARG1(p,t)
time(p,e)
ARG1(p,a)

# ::snt The businessman raised his head .
instance(r,raise-01)
instance(b,businessman)
instance(h,head)
ARG0(r,b)
ARG1(r,h)
part-of(h,b)

# ::snt " During the fifty - four years that I have inhabited this planet , I have been disturbed only three times .
instance(d,disturb-01)
instance(i,i)
instance(h,have-frequency-91)
instance(3,3)
instance(o,only)
instance(i2,inhabit-01)
instance(p,planet)
instance(t,this)
instance(t2,temporal-quantity)
instance(y,year)
ARG1(d,i)
ARG1-of(d,h)
ARG2(h,3)
mod(3,o)
time(3,i2)
ARG0(i2,i)
ARG1(i,p)
mod(p,t)
duration(p,t2)
unit(t2,y)

# ::snt The first time was twenty - two years ago , when some giddy goose fell from goodness knows where .
instance(b,be-temporally-at-91)
instance(d,disturb-01)
instance(o,ordinal-entity)
instance(b2,before)
instance(n,now)
instance(t4,temporal-quantity)
instance(y2,year)
instance(f3,fall-01)
instance(g4,goose)
instance(g5,giddy)
instance(s2,some)
instance(l,location)
instance(k2,know-01)
instance(g6,goodness)
ARG1(b,d)
ord(d,o)
ARG2(d,b2)
op1(b2,n)
quant(b2,t4)
unit(t4,y2)
time-of(t4,f3)
ARG1(f3,g4)
mod(g4,g5)
mod(g4,s2)
ARG3(g4,l)
ARG1-of(l,k2)
ARG0(k2,g6)

# ::snt He made the most frightful noise that resounded all over the place , and I made four mistakes in my addition .
instance(a,and)
instance(m,make-01)
instance(h,he)
instance(n,noise)
instance(h2,have-degree-91)
instance(f2,frighten-01)
instance(m2,most)
instance(r,resound-01)
instance(a4,all-over)
instance(p,place)
instance(m4,mistake-02)
instance(i,i)
instance(a3,add-02)
instance(i,i)
op1(a,m)
ARG0(m,h)
ARG1(m,n)
ARG1-of(n,h2)
ARG2(h2,f2)
ARG0(f2,n)
ARG3(f2,m2)
ARG1-of(f2,r)
ARG2(r,a4)
op1(a4,p)
op2(a4,m4)
ARG0(m4,i)
ARG1(i,a3)
ARG0(a3,i)

# ::snt The second time , eleven years ago , I was disturbed by an attack of rheumatism .
instance(d,disturb-01)
instance(a,attack-01)
instance(r,rheumatism)
instance(i,i)
instance(i,i)
instance(b,before)
instance(n,now)
instance(t2,temporal-quantity)
instance(y,year)
instance(d2,disturb-01)
instance(o,ordinal-entity)
ARG0(d,a)
ARG0(a,r)
ARG1(a,i)
ARG1(a,i)
time(a,b)
op1(b,n)
quant(b,t2)
unit(t2,y)
domain(t2,d2)
ord(d2,o)

# ::snt I do n't get enough exercise .
instance(h,have-quant-91)
instance(e,exercise-02)
instance(i,i)
instance(e2,enough)
ARG1(h,e)
ARG0(e,i)
ARG3(e,e2)

# ::snt I have no time for loafing .
instance(h,have-03)
instance(i,i)
instance(t,time)
instance(l,loaf-01)
instance(-,-)
ARG0(h,i)
ARG1(h,t)
purpose(t,l)
ARG0(l,i)
polarity(l,-)

# ::snt The third time - - well , this is it !
instance(d,disturb-01)
instance(o,ordinal-entity)
instance(t,this)
ord(d,o)
domain(d,t)

# ::snt I was saying , then , five - hundred - and - one millions - - "
instance(s,say-01)
instance(i,i)
instance(501000000,501000000)
ARG0(s,i)
ARG1(s,501000000)

# ::snt " Millions of what ? "
instance(a,amr-unknown)
instance(m,multiple)
instance(1000000,1000000)
quant(a,m)
op1(m,1000000)

# ::snt The businessman suddenly realized that there was no hope of being left in peace until he answered this question .
instance(r,realize-01)
instance(b,businessman)
instance(h,hopeful-03)
instance(l,leave-14)
instance(p,peace)
instance(u,until)
instance(a,answer-01)
instance(q,question-01)
instance(t,this)
instance(s,sudden)
ARG0(r,b)
ARG1(r,h)
ARG1(h,l)
ARG1(l,p)
domain(p,b)
time(p,u)
op1(u,a)
ARG0(a,b)
ARG1(b,q)
ARG1(q,t)
manner(q,s)

# ::snt " Millions of those little objects , " he said , " which one sometimes sees in the sky . "
instance(s,say-01)
instance(h,he)
instance(o,object)
instance(i,include-91)
instance(o3,object)
instance(l,little)
instance(t2,that)
instance(s4,sky)
instance(s2,see-01)
instance(o2,one)
instance(s3,sometimes)
instance(m,multiple)
instance(1000000,1000000)
ARG0(s,h)
ARG1(s,o)
ARG1-of(o,i)
ARG2(i,o3)
mod(o3,l)
mod(o3,t2)
location(o3,s4)
ARG1-of(o3,s2)
ARG0(s2,o2)
frequency(s2,s3)
quant(s2,m)
op1(m,1000000)

# ::snt " Flies ? "
instance(f,fly)

# ::snt " Oh , no .
instance(n,no)
instance(o,oh)
instance(expressive,expressive)
mod(n,o)
mode(o,expressive)

# ::snt Little glittering objects . "
instance(o,object)
instance(l,little)
instance(g,glitter-01)
mod(o,l)
ARG0-of(o,g)

# ::snt " Bees ? "
instance(b,bee)
instance(a,amr-unknown)
polarity(b,a)

# ::snt " Oh , no .
instance(n,no)
instance(o,oh)
instance(expressive,expressive)
mod(n,o)
mode(o,expressive)

# ::snt Little golden objects that set lazy men to idle dreaming .
instance(c,cause-01)
instance(o,object)
instance(g,gold)
instance(l,little)
instance(d,dream-01)
instance(m,man)
instance(l2,lazy)
instance(i,idle-01)
ARG0(c,o)
consist-of(o,g)
mod(o,l)
ARG1(o,d)
ARG0(d,m)
mod(m,l2)
manner(m,i)

# ::snt As for me , I am concerned with matters of consequence .
instance(c,concern-01)
instance(m,matter)
instance(c2,consequential-01)
instance(i,i)
ARG0(c,m)
ARG1-of(m,c2)
ARG1(m,i)

# ::snt There is no time for idle dreaming in my life . "
instance(t2,time)
instance(d2,dream-01)
instance(i2,idle)
instance(l,live-01)
instance(i,i)
purpose(t2,d2)
manner(d2,i2)
time(d2,l)
ARG0(l,i)

# ::snt " Ah !
instance(a,ah)

# ::snt You mean the stars ? "
instance(m,mean-01)
instance(y,you)
instance(s,star)
ARG0(m,y)
ARG2(m,s)

# ::snt " Yes , that 's it .
instance(b,be-it-07)
instance(t2,that)
ARG1(b,t2)

# ::snt The stars . "
instance(s,star)

# ::snt " And what do you do with five - hundred millions of stars ? "
instance(a,and)
instance(d,do-02)
instance(y,you)
instance(a2,amr-unknown)
instance(s,star)
instance(500000000,500000000)
op2(a,d)
ARG0(d,y)
ARG1(d,a2)
ARG3(d,s)
quant(s,500000000)

# ::snt " Five - hundred - and - one million , six - hundred - twenty - two thousand , seven - hundred - thirty - one .
instance(h,have-quant-91)
instance(501622731,501622731)
instance(e,equal)
ARG2(h,501622731)
ARG3(501622731,e)

# ::snt I am concerned with matters of consequence : I am accurate . "
instance(a,and)
instance(c,concern-01)
instance(m,matter)
instance(c2,consequential-01)
instance(i,i)
instance(a2,accurate)
op1(a,c)
ARG0(c,m)
ARG1-of(m,c2)
ARG1(m,i)
op2(m,a2)
domain(a2,i)

# ::snt " And what do you do with these stars ? "
instance(a,and)
instance(d,do-02)
instance(y,you)
instance(a2,amr-unknown)
instance(s,star)
instance(t,this)
op2(a,d)
ARG0(d,y)
ARG1(d,a2)
ARG3(d,s)
mod(s,t)

# ::snt " What do I do with them ? "
instance(d,do-02)
instance(i,i)
instance(a,amr-unknown)
instance(t,they)
ARG0(d,i)
ARG1(d,a)
ARG3(d,t)

# ::snt " Yes . "
instance(y,yes)

# ::snt " Nothing .
instance(n,nothing)

# ::snt I own them . "
instance(o,own-01)
instance(i,i)
instance(t,they)
ARG0(o,i)
ARG1(o,t)

# ::snt " You own the stars ? "
instance(o,own-01)
instance(y,you)
instance(s,star)
instance(a,amr-unknown)
ARG0(o,y)
ARG1(o,s)
polarity(o,a)

# ::snt " Yes . "
instance(y,yes)

# ::snt " But I have already seen a king who - - "
instance(c,contrast-01)
instance(s,see-01)
instance(i,i)
instance(k,king)
instance(a,already)
ARG2(c,s)
ARG0(s,i)
ARG1(s,k)
time(s,a)

# ::snt " Kings do not own , they reign over .
instance(c,contrast-01)
instance(o,own-01)
instance(k,king)
instance(r,reign-01)
ARG1(c,o)
ARG0(o,k)
ARG2(o,r)
ARG0(r,k)

# ::snt It is a very different matter . "
instance(m,matter)
instance(d,differ-02)
instance(v,very)
instance(i,it)
ARG1-of(m,d)
degree(d,v)
domain(d,i)

# ::snt " And what good does it do you to own the stars ? "
instance(a,and)
instance(c,cause-01)
instance(o,own-01)
instance(s,star)
instance(g,good-04)
instance(a2,amr-unknown)
instance(y,you)
op2(a,c)
ARG0(c,o)
ARG1(o,s)
ARG1(o,g)
ARG1(g,a2)
ARG2(g,y)

# ::snt " It does me the good of making me rich . "
instance(c,cause-01)
instance(i2,it)
instance(g,good-04)
instance(m2,make-02)
instance(r,rich)
instance(i,i)
instance(i,i)
ARG0(c,i2)
ARG1(c,g)
ARG1(g,m2)
ARG1(m2,r)
domain(r,i)
ARG2(r,i)

# ::snt " And what good does it do you to be rich ? "
instance(a,and)
instance(c,cause-01)
instance(r,rich)
instance(y,you)
instance(g,good-04)
instance(a2,amr-unknown)
op2(a,c)
ARG0(c,r)
domain(r,y)
ARG1(r,g)
ARG1(g,a2)
ARG2(g,y)

# ::snt " It makes it possible for me to buy more stars , if any are ever discovered . "
instance(p,possible-01)
instance(b,buy-01)
instance(i,i)
instance(s,star)
instance(m,more)
instance(d,discover-01)
instance(e,ever)
ARG1(p,b)
ARG0(b,i)
ARG1(b,s)
mod(s,m)
condition(s,d)
ARG1(d,s)
time(s,e)

# ::snt " This man , " the little prince said to himself , " reasons a little like my poor tippler ... "
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(r,reason-01)
instance(m,man)
instance(t2,this)
instance(r2,resemble-01)
instance(r3,reason-01)
instance(p2,person)
instance(t,tipple-01)
instance(p3,poor)
instance(l2,little)
ARG0(s,p)
mod(p,l)
ARG1(p,r)
ARG0(r,m)
mod(m,t2)
ARG1-of(m,r2)
ARG2(r2,r3)
ARG0(r3,p2)
ARG0-of(p2,t)
mod(p2,p3)
poss(p2,p)
degree(p2,l2)
ARG2(p2,p)

# ::snt Nevertheless , he still had some more questions .
instance(h3,have-concession-91)
instance(h,have-03)
instance(h2,he)
instance(t,thing)
instance(m,more)
instance(s,some)
instance(q,question-01)
instance(s2,still)
ARG1(h3,h)
ARG0(h,h2)
ARG1(h,t)
mod(t,m)
mod(t,s)
ARG1-of(t,q)
mod(t,s2)

# ::snt " How is it possible for one to own the stars ? "
instance(p,possible-01)
instance(o,own-01)
instance(o2,one)
instance(s,star)
instance(a,amr-unknown)
ARG1(p,o)
ARG0(o,o2)
ARG1(o,s)
manner(o,a)

# ::snt " To whom do they belong ? " the businessman retorted , peevishly .
instance(r,retort-01)
instance(b3,businessman)
instance(b2,belong-01)
instance(t,they)
instance(a,amr-unknown)
instance(p,peeve-01)
ARG0(r,b3)
ARG2(r,b2)
ARG0(b2,t)
ARG1(b2,a)
manner(b2,p)
ARG1(p,b3)

# ::snt " I do n't know .
instance(k,know-01)
instance(i,i)
instance(-,-)
ARG0(k,i)
polarity(k,-)

# ::snt To nobody . "
instance(b,belong-01)
instance(n,nobody)
ARG1(b,n)

# ::snt " Then they belong to me , because I was the first person to think of it . "
instance(b,belong-01)
instance(t,they)
instance(i,i)
instance(c,cause-01)
instance(p,person)
instance(o,ordinal-entity)
instance(t2,think-01)
instance(i2,it)
ARG0(b,t)
ARG1(b,i)
ARG1-of(b,c)
ARG0(c,p)
ord(p,o)
domain(p,i)
ARG0-of(i,t2)
ARG2(t2,i2)

# ::snt " Is that all that is necessary ? "
instance(a,all)
instance(t2,that)
instance(n,need-01)
domain(a,t2)
ARG1-of(a,n)

# ::snt " Certainly .
instance(c,certain)

# ::snt When you find a diamond that belongs to nobody , it is yours .
instance(b,belong-01)
instance(d,d)
instance(y,you)
instance(f,find-01)
instance(d,diamond)
instance(b2,belong-01)
instance(n,nobody)
ARG0(b,d)
ARG1(d,y)
condition(d,f)
ARG0(f,y)
ARG1(y,d)
ARG0-of(d,b2)
ARG1(b2,n)

# ::snt When you discover an island that belongs to nobody , it is yours .
instance(b,belong-01)
instance(i,i)
instance(y,you)
instance(d,discover-01)
instance(i,island)
instance(b2,belong-01)
instance(n,nobody)
ARG0(b,i)
ARG1(i,y)
condition(i,d)
ARG0(d,y)
ARG1(y,i)
ARG0-of(i,b2)
ARG1(b2,n)

# ::snt When you get an idea before any one else , you take out a patent on it : it is yours .
instance(a,and)
instance(p,patent-01)
instance(y,y)
instance(i,i)
instance(b2,belong-01)
instance(y,you)
instance(g,get-01)
instance(i,idea)
instance(b,before)
instance(a3,anyone)
instance(e,else)
op1(a,p)
ARG0(p,y)
ARG1(y,i)
op2(y,b2)
ARG0(b2,i)
ARG1(i,y)
condition(i,g)
ARG0(g,y)
ARG1(y,i)
time(y,b)
op1(b,a3)
mod(a3,e)

# ::snt So with me : I own the stars , because nobody else before me ever thought of owning them . "
instance(c,cause-01)
instance(t,think-01)
instance(n,nobody)
instance(e2,else)
instance(o,own-01)
instance(s,star)
instance(e,ever)
instance(b,before)
instance(i,i)
instance(o2,own-01)
instance(r,resemble-01)
ARG0(c,t)
ARG0(t,n)
mod(n,e2)
ARG1(n,o)
ARG0(o,n)
ARG1(n,s)
time(n,e)
time(n,b)
op1(b,i)
ARG1(b,o2)
ARG0(o2,i)
ARG1(i,s)
ARG1-of(i,r)
beneficiary(r,i)

# ::snt " Yes , that is true , " said the little prince .
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(t,true-01)
instance(t2,that)
ARG0(s,p)
mod(p,l)
ARG1(p,t)
ARG1(t,t2)

# ::snt " And what do you do with them ? "
instance(a,and)
instance(d,do-02)
instance(y,you)
instance(a2,amr-unknown)
instance(t,they)
op2(a,d)
ARG0(d,y)
ARG1(d,a2)
ARG2(d,t)

# ::snt " I administer them , " replied the businessman .
instance(r,reply-01)
instance(b,businessman)
instance(a,administer-01)
instance(t,they)
ARG0(r,b)
ARG2(r,a)
ARG0(a,b)
ARG1(b,t)

# ::snt " I count them and recount them .
instance(a,and)
instance(c,count-01)
instance(i,i)
instance(t,they)
instance(r2,recount-01)
op1(a,c)
ARG0(c,i)
ARG1(c,t)
op2(c,r2)
ARG0(r2,i)
ARG1(i,t)

# ::snt It is difficult .
instance(d,difficult)
instance(i,it)
domain(d,i)

# ::snt But I am a man who is naturally interested in matters of consequence . "
instance(c,contrast-01)
instance(m,man)
instance(i,i)
instance(i2,interest-01)
instance(m2,matter)
instance(c2,consequential-01)
instance(n,natural-02)
ARG2(c,m)
domain(m,i)
ARG1-of(m,i2)
ARG2(i2,m2)
ARG1-of(m2,c2)
ARG1-of(m2,n)
ARG2(n,i)

# ::snt The little prince was still not satisfied .
instance(s,satisfy-01)
instance(p,prince)
instance(l,little)
instance(s2,still)
instance(-,-)
ARG1(s,p)
mod(p,l)
mod(p,s2)
polarity(p,-)

# ::snt " If I owned a silk scarf , " he said , " I could put it around my neck and take it away with me .
instance(s,say-01)
instance(h,he)
instance(p,possible-01)
instance(a2,and)
instance(p2,put-01)
instance(s2,scarf)
instance(s3,silk)
instance(a,around)
instance(n,neck)
instance(t,take-away-05)
instance(o,own-01)
ARG0(s,h)
ARG1(s,p)
ARG1(p,a2)
op1(a2,p2)
ARG0(p2,h)
ARG1(h,s2)
consist-of(s2,s3)
ARG2(s2,a)
op1(a,n)
part-of(n,h)
op2(n,t)
ARG0(t,h)
ARG1(h,s2)
accompanier(s2,h)
condition(s2,o)
ARG0(o,h)
ARG1(h,s2)

# ::snt If I owned a flower , I could pluck that flower and take it away with me .
instance(p,possible-01)
instance(a,and)
instance(p2,pluck-01)
instance(i,i)
instance(f2,flower)
instance(t,that)
instance(t2,take-away-05)
instance(o,own-01)
ARG1(p,a)
op1(a,p2)
ARG0(p2,i)
ARG1(p2,f2)
mod(f2,t)
op2(f2,t2)
ARG0(t2,i)
ARG1(i,f2)
accompanier(f2,i)
condition(f2,o)
ARG0(o,i)
ARG1(i,f2)

# ::snt But you can not pluck the stars from heaven ... "
instance(c,contrast-01)
instance(p2,possible-01)
instance(-,-)
instance(p,pluck-01)
instance(y,you)
instance(s,star)
instance(h,heaven)
ARG2(c,p2)
polarity(p2,-)
ARG1(-,p)
ARG0(p,y)
ARG1(p,s)
ARG2(p,h)

# ::snt " No .
instance(n,no)

# ::snt But I can put them in the bank . "
instance(c,contrast-01)
instance(p2,possible-01)
instance(p,put-01)
instance(i,i)
instance(t,they)
instance(b,bank)
ARG2(c,p2)
ARG1(p2,p)
ARG0(p,i)
ARG1(p,t)
ARG2(p,b)

# ::snt " Whatever does that mean ? "
instance(m,mean-01)
instance(t,that)
instance(a,amr-unknown)
ARG1(m,t)
ARG2(m,a)

# ::snt " That means that I write the number of my stars on a little paper .
instance(m,mean-01)
instance(t,that)
instance(w,write-01)
instance(i,i)
instance(n,number)
instance(s,star)
instance(p,paper)
instance(l,little)
ARG1(m,t)
ARG2(m,w)
ARG0(w,i)
ARG1(w,n)
quant-of(n,s)
poss(s,i)
location(s,p)
mod(p,l)

# ::snt And then I put this paper in a drawer and lock it with a key . "
instance(a,and)
instance(a2,and)
instance(p,put-01)
instance(i,i)
instance(p2,paper)
instance(t2,this)
instance(d,drawer)
instance(l,lock-01)
instance(k,key)
instance(t,then)
op2(a,a2)
op1(a2,p)
ARG0(p,i)
ARG1(p,p2)
mod(p2,t2)
ARG2(p2,d)
op2(p2,l)
ARG0(l,i)
ARG1(i,d)
ARG3(d,k)
time(d,t)

# ::snt " And that is all ? "
instance(a,and)
instance(a2,all)
instance(t,that)
instance(a3,amr-unknown)
op2(a,a2)
domain(a2,t)
polarity(a2,a3)

# ::snt " That is enough , " said the businessman .
instance(s,say-01)
instance(b2,businessman)
instance(e,enough)
instance(t,that)
ARG0(s,b2)
ARG1(s,e)
domain(e,t)

# ::snt " It is entertaining , " thought the little prince .
instance(t,think-01)
instance(p,prince)
instance(l,little)
instance(e,entertain-01)
instance(i,it)
ARG0(t,p)
mod(p,l)
ARG1(p,e)
ARG0(e,i)

# ::snt " It is rather poetic .
instance(p,poetry)
instance(i,it)
instance(r,rather)
domain(p,i)
degree(p,r)

# ::snt But it is of no great consequence . "
instance(c,contrast-01)
instance(c2,consequential-01)
instance(i,it)
instance(g,great)
ARG2(c,c2)
ARG1(c2,i)
degree(c2,g)

# ::snt On matters of consequence , the little prince had ideas which were very different from those of the grown - ups .
instance(h,have-03)
instance(p,prince)
instance(l,little)
instance(i,idea)
instance(m,matter)
instance(c,consequential-01)
instance(d,differ-02)
instance(i2,idea)
instance(g,grown-up)
instance(v,very)
ARG0(h,p)
mod(p,l)
ARG1(p,i)
topic(i,m)
ARG1-of(m,c)
ARG1-of(m,d)
ARG2(d,i2)
poss(i2,g)
degree(i2,v)

# ::snt " I myself own a flower , " he continued his conversation with the businessman , " which I water every day .
instance(c,continue-02)
instance(h,he)
instance(o,own-01)
instance(f2,flower)
instance(w,water-01)
instance(r,rate-entity-91)
instance(t,temporal-quantity)
instance(d,day)
instance(b,businessman)
instance(c2,converse-01)
ARG0(c,h)
ARG1(c,o)
ARG0(o,h)
ARG1(h,f2)
ARG1-of(f2,w)
ARG0(w,h)
frequency(h,r)
ARG3(r,t)
unit(t,d)
ARG2(t,b)
ARG3(t,c2)
ARG0(c2,h)
ARG2(h,b)

# ::snt I own three volcanoes , which I clean out every week ( for I also clean out the one that is extinct ; one never knows ) .
instance(o,own-01)
instance(i,i)
instance(v,volcano)
instance(c,clean-out-03)
instance(r,rate-entity-91)
instance(t,temporal-quantity)
instance(w,week)
instance(c2,cause-01)
instance(c3,clean-out-03)
instance(v2,volcano)
instance(e,extinct)
instance(i2,include-91)
instance(a,also)
instance(c4,cause-01)
instance(k,know-01)
instance(o2,one)
ARG0(o,i)
ARG1(o,v)
ARG1-of(v,c)
ARG0(c,i)
frequency(i,r)
ARG3(r,t)
unit(t,w)
ARG1-of(t,c2)
ARG0(c2,c3)
ARG0(c3,i)
ARG1(i,v2)
mod(v2,e)
ARG1-of(v2,i2)
ARG2(i2,v)
mod(i2,a)
ARG1-of(i2,c4)
ARG0(c4,k)
ARG0(k,o2)

# ::snt It is of some use to my volcanoes , and it is of some use to my flower , that I own them .
instance(c,cause-01)
instance(o,own-01)
instance(i,i)
instance(a,and)
instance(v,v)
instance(f2,f2)
instance(u,use-01)
instance(a2,and)
instance(v,volcano)
instance(f2,flower)
instance(s,some)
ARG0(c,o)
ARG0(o,i)
ARG1(o,a)
op1(a,v)
op2(v,f2)
ARG1(v,u)
beneficiary(u,a2)
op1(a2,v)
poss(v,i)
op2(v,f2)
poss(f2,i)
degree(f2,s)

# ::snt But you are of no use to the stars ... "
instance(c,contrast-01)
instance(u,use-01)
instance(s,star)
instance(y,you)
ARG2(c,u)
ARG0(u,s)
ARG1(u,y)

# ::snt The businessman opened his mouth , but he found nothing to say in answer .
instance(c,contrast-01)
instance(o,open-01)
instance(b,businessman)
instance(m,mouth)
instance(f,find-01)
instance(a,answer-01)
ARG1(c,o)
ARG0(o,b)
ARG1(o,m)
part-of(m,b)
ARG2(m,f)
ARG0(f,b)
ARG1(b,a)

# ::snt And the little prince went away .
instance(a,and)
instance(g,go-02)
instance(p,prince)
instance(l,little)
instance(a2,away)
op2(a,g)
ARG0(g,p)
mod(p,l)
direction(p,a2)

# ::snt " The grown - ups are certainly altogether extraordinary , " he said simply , talking to himself as he continued on his journey .
instance(s,say-01)
instance(h,he)
instance(t,talk-01)
instance(c2,continue-01)
instance(j,journey-01)
instance(e,extraordinary)
instance(g2,grown-up)
instance(c,certain)
instance(a,altogether)
instance(s2,simple-02)
ARG0(s,h)
ARG0-of(h,t)
ARG2(t,h)
time(h,c2)
ARG0(c2,h)
ARG1(h,j)
ARG0(j,h)
ARG1(j,e)
domain(e,g2)
mod(e,c)
degree(e,a)
ARG1-of(e,s2)

# ::snt Chapter 14 .
instance(c,chapter)
instance(14,14)
mod(c,14)

# ::snt The fifth planet was very strange .
instance(s,strange)
instance(v,very)
instance(p,planet)
instance(o,ordinal-entity)
degree(s,v)
domain(s,p)
ord(p,o)

# ::snt It was the smallest of all .
instance(h,have-degree-91)
instance(i2,it)
instance(s,small)
instance(m,most)
instance(a,all)
ARG1(h,i2)
ARG2(h,s)
ARG3(h,m)
ARG5(h,a)

# ::snt There was just enough room on it for a street lamp and a lamplighter .
instance(h,have-quant-91)
instance(r,room)
instance(i2,it)
instance(e,enough)
instance(j,just)
instance(a2,accommodate-01)
instance(a,and)
instance(l,lamp)
instance(s,street)
instance(p,person)
instance(l2,light-04)
instance(l3,lamp)
ARG1(h,r)
location(r,i2)
ARG3(r,e)
mod(e,j)
ARG6(e,a2)
ARG0(a2,r)
ARG1(r,a)
op1(a,l)
mod(l,s)
op2(l,p)
ARG0-of(p,l2)
ARG1(l2,l3)

# ::snt The little prince was not able to reach any explanation of the use of a street lamp and a lamplighter , somewhere in the heavens , on a planet which had no people , and not one house .
instance(p,possible-01)
instance(e,explain-01)
instance(p2,prince)
instance(l,little)
instance(u,use-01)
instance(a,and)
instance(l2,lamp)
instance(s,street)
instance(p3,person)
instance(l3,light-04)
instance(l4,lamp)
instance(r,relative-position)
instance(h,heaven)
instance(p4,planet)
instance(h2,have-03)
instance(a2,and)
instance(p5,person)
instance(h3,house)
ARG1(p,e)
ARG0(e,p2)
mod(p2,l)
ARG1(p2,u)
ARG1(u,a)
op1(a,l2)
mod(l2,s)
op2(l2,p3)
ARG0-of(p3,l3)
ARG1(l3,l4)
location(l3,r)
op1(r,h)
location(r,p4)
ARG0-of(p4,h2)
ARG1(h2,a2)
op1(a2,p5)
op2(a2,h3)

# ::snt But he said to himself , nevertheless : " It may well be that this man is absurd .
instance(h2,have-concession-91)
instance(s,say-01)
instance(h,he)
instance(p,possible-01)
instance(a,absurd)
instance(m,man)
instance(t,this)
ARG1(h2,s)
ARG0(s,h)
ARG1(s,p)
ARG1(p,a)
domain(a,m)
mod(m,t)
ARG2(m,h)

# ::snt But he is not so absurd as the king , the conceited man , the businessman , and the tippler .
instance(c,contrast-01)
instance(h2,have-degree-91)
instance(h,he)
instance(a,absurd)
instance(e,equal)
instance(a2,and)
instance(k,king)
instance(m,man)
instance(c2,conceit)
instance(b2,businessman)
instance(p,person)
instance(t,tipple-01)
ARG2(c,h2)
ARG1(h2,h)
ARG2(h2,a)
ARG3(h2,e)
ARG4(h2,a2)
op1(a2,k)
op2(a2,m)
mod(m,c2)
op3(m,b2)
op4(m,p)
ARG0-of(p,t)

# ::snt For at least his work has some meaning .
instance(c,cause-01)
instance(m,mean-01)
instance(w,work-01)
instance(h,he)
instance(s,some)
instance(a,at-least)
ARG0(c,m)
ARG1(m,w)
ARG0(w,h)
degree(w,s)
mod(w,a)

# ::snt When he lights his street lamp , it is as if he brought one more star to life , or one flower .
instance(l2,light-04)
instance(h,h)
instance(l3,lamp)
instance(s2,street)
instance(r,resemble-01)
instance(b,bring-01)
instance(h,he)
instance(o,or)
instance(s,star)
instance(m,more)
instance(f2,flower)
instance(l,live-01)
ARG0(l2,h)
ARG1(h,l3)
mod(l3,s2)
poss(l3,h)
ARG1-of(l3,r)
ARG2(r,b)
ARG0(b,h)
ARG1(b,o)
op1(o,s)
mod(s,m)
op2(s,f2)
ARG3(s,l)

# ::snt When he puts out his lamp , he sends the flower , or the star , to sleep .
instance(s,send-02)
instance(h,he)
instance(o,or)
instance(f2,flower)
instance(s3,star)
instance(s2,sleep-01)
instance(p,put-out-09)
instance(l,lamp)
ARG0(s,h)
ARG1(s,o)
op1(o,f2)
op2(o,s3)
ARG2(o,s2)
ARG0(s2,o)
time(s2,p)
ARG0(p,h)
ARG1(h,l)
poss(l,h)

# ::snt That is a beautiful occupation .
instance(o,occupation)
instance(b,beautiful-02)
instance(t,that)
ARG1-of(o,b)
domain(o,t)

# ::snt And since it is beautiful , it is truly useful . "
instance(a,and)
instance(c,cause-01)
instance(b,beautiful-02)
instance(i,it)
instance(u,useful-05)
instance(t,truly)
op2(a,c)
ARG0(c,b)
ARG1(b,i)
ARG1(b,u)
ARG1(u,i)
degree(i,t)

# ::snt When he arrived on the planet he respectfully saluted the lamplighter .
instance(s,salute-01)
instance(h,he)
instance(p,person)
instance(l,light-04)
instance(l2,lamp)
instance(r,respect-01)
instance(a,arrive-01)
instance(p2,planet)
ARG0(s,h)
ARG1(s,p)
ARG0-of(p,l)
ARG1(l,l2)
manner(l,r)
time(l,a)
ARG1(a,h)
ARG4(h,p2)

# ::snt " Good morning .
instance(m,morning)
instance(g,good-02)
ARG1-of(m,g)

# ::snt Why have you just put out your lamp ? "
instance(c,cause-01)
instance(a,amr-unknown)
instance(p,put-out-09)
instance(y,you)
instance(l,lamp)
instance(j,just)
ARG0(c,a)
ARG1(c,p)
ARG0(p,y)
ARG1(p,l)
poss(l,y)
mod(l,j)

# ::snt " Those are the orders , " replied the lamplighter .
instance(r,reply-01)
instance(p,person)
instance(l,light-04)
instance(l2,lamp)
instance(o,order-01)
instance(t,that)
ARG0(r,p)
ARG0-of(p,l)
ARG1(l,l2)
ARG2(l,o)
ARG2(o,t)

# ::snt " Good morning . "
instance(m,morning)
instance(g,good-02)
ARG1-of(m,g)

# ::snt " What are the orders ? "
instance(o,order-01)
instance(a,amr-unknown)
ARG2(o,a)

# ::snt " The orders are that I put out my lamp .
instance(o,order-01)
instance(p,put-out-09)
instance(i,i)
instance(l,lamp)
ARG2(o,p)
ARG0(p,i)
ARG1(p,l)
poss(l,i)

# ::snt Good evening . "
instance(e,evening)
instance(g,good-02)
ARG1-of(e,g)

# ::snt And he lighted his lamp again .
instance(a,and)
instance(l,light-04)
instance(h,he)
instance(l2,lamp)
instance(a2,again)
op2(a,l)
ARG0(l,h)
ARG1(l,l2)
poss(l2,h)
mod(l2,a2)

# ::snt " But why have you just lighted it again ? "
instance(c,contrast-01)
instance(c2,cause-01)
instance(a,amr-unknown)
instance(l,light-04)
instance(y,you)
instance(i,it)
instance(a2,again)
instance(j,just)
ARG2(c,c2)
ARG0(c2,a)
ARG1(c2,l)
ARG0(l,y)
ARG1(l,i)
mod(l,a2)
mod(l,j)

# ::snt " Those are the orders , " replied the lamplighter .
instance(r,reply-01)
instance(p,person)
instance(l,light-04)
instance(l2,lamp)
instance(o,order-01)
instance(t,that)
ARG0(r,p)
ARG0-of(p,l)
ARG1(l,l2)
ARG2(l,o)
ARG2(o,t)

# ::snt " I do not understand , " said the little prince .
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(u,understand-01)
instance(-,-)
ARG0(s,p)
mod(p,l)
ARG1(p,u)
ARG0(u,p)
polarity(p,-)

# ::snt " There is nothing to understand , " said the lamplighter .
instance(s,say-01)
instance(p,person)
instance(l,light-04)
instance(l2,lamp)
instance(n,nothing)
instance(u,understand-01)
ARG0(s,p)
ARG0-of(p,l)
ARG1(l,l2)
ARG1(l,n)
ARG1-of(n,u)

# ::snt " Orders are orders .
instance(o,order)
instance(o2,order)
domain(o,o2)

# ::snt Good morning . "
instance(m,morning)
instance(g,good-02)
ARG1-of(m,g)

# ::snt And he put out his lamp .
instance(a,and)
instance(p,put-out-09)
instance(h,he)
instance(l,lamp)
op2(a,p)
ARG0(p,h)
ARG1(p,l)
poss(l,h)

# ::snt Then he mopped his forehead with a handkerchief decorated with red squares .
instance(m,mop-01)
instance(h,he)
instance(f,forehead)
instance(h2,handkerchief)
instance(d,decorate-01)
instance(s,square)
instance(r,red-02)
instance(t,then)
ARG0(m,h)
ARG1(m,f)
part-of(f,h)
ARG2(f,h2)
ARG1-of(h2,d)
ARG2(d,s)
ARG1-of(s,r)
time(s,t)

# ::snt " I follow a terrible profession .
instance(f,follow-02)
instance(i,i)
instance(p,profession)
instance(t,terrible-01)
ARG0(f,i)
ARG1(f,p)
ARG1-of(p,t)

# ::snt In the old days it was reasonable .
instance(r,reasonable-02)
instance(i,it)
instance(d,day)
instance(o,old)
ARG1(r,i)
time(r,d)
mod(d,o)

# ::snt I put the lamp out in the morning , and in the evening I lighted it again .
instance(a,and)
instance(p,put-out-09)
instance(i,i)
instance(l,lamp)
instance(d2,date-entity)
instance(l2,light-04)
instance(d,date-entity)
instance(a2,again)
op1(a,p)
ARG0(p,i)
ARG1(p,l)
time(p,d2)
op2(p,l2)
ARG0(l2,i)
ARG1(i,l)
time(l,d)
mod(l,a2)

# ::snt I had the rest of the day for relaxation and the rest of the night for sleep . "
instance(h,have-03)
instance(i,i)
instance(a,and)
instance(r,rest)
instance(r2,relax-01)
instance(d,day)
instance(r3,rest)
instance(s,sleep-01)
instance(n,night)
ARG0(h,i)
ARG1(h,a)
op1(a,r)
purpose(r,r2)
part-of(r,d)
op2(r,r3)
purpose(r3,s)
part-of(r3,n)

# ::snt " And the orders have been changed since that time ? "
instance(a,and)
instance(c,change-01)
instance(o,order-01)
instance(s,since)
instance(t,time)
instance(t2,that)
op2(a,c)
ARG1(a,o)
time(a,s)
op1(s,t)
mod(t,t2)

# ::snt " The orders have not been changed , " said the lamplighter .
instance(s,say-01)
instance(p,person)
instance(l,light-04)
instance(l2,lamp)
instance(c,change-01)
instance(o,order-01)
instance(-,-)
ARG0(s,p)
ARG0-of(p,l)
ARG1(l,l2)
ARG1(l,c)
ARG1(c,o)
polarity(c,-)

# ::snt " That is the tragedy !
instance(t,tragedy)
instance(t2,that)
domain(t,t2)

# ::snt From year to year the planet has turned more rapidly and the orders have not been changed ! "
instance(a,and)
instance(h,have-degree-91)
instance(t,turn-01)
instance(p,planet)
instance(r,rapid)
instance(m,more)
instance(y,year)
instance(c,change-01)
instance(o,order-01)
op1(a,h)
ARG1(h,t)
ARG1(t,p)
ARG2(t,r)
ARG3(t,m)
frequency(t,y)
op2(t,c)
ARG1(c,o)

# ::snt " Then what ? " asked the little prince .
instance(a,ask-01)
instance(p,prince)
instance(l,little)
instance(a2,amr-unknown)
instance(t,then)
ARG0(a,p)
mod(p,l)
ARG1(p,a2)
time(a2,t)

# ::snt " Then - - the planet now makes a complete turn every minute , and I no longer have a single second for repose .
instance(a,and)
instance(t,turn-01)
instance(p,planet)
instance(c,complete-02)
instance(n,now)
instance(r2,rate-entity-91)
instance(t3,temporal-quantity)
instance(m,minute)
instance(h,have-03)
instance(i,i)
instance(t2,temporal-quantity)
instance(s,second)
instance(r,repose-01)
instance(n2,no-longer)
instance(t4,then)
op1(a,t)
ARG1(t,p)
ARG1-of(t,c)
time(t,n)
frequency(t,r2)
ARG3(r2,t3)
unit(t3,m)
op2(t3,h)
ARG0(h,i)
ARG1(h,t2)
unit(t2,s)
purpose(t2,r)
time(t2,n2)
time(t2,t4)

# ::snt Once every minute I have to light my lamp and put it out ! "
instance(o,obligate-01)
instance(i,i)
instance(a,and)
instance(l,light-04)
instance(l2,lamp)
instance(p,put-out-09)
instance(r,rate-entity-91)
instance(t,temporal-quantity)
instance(m,minute)
ARG1(o,i)
ARG2(o,a)
op1(a,l)
ARG0(l,i)
ARG1(i,l2)
poss(l2,i)
op2(l2,p)
ARG0(p,i)
ARG1(i,l2)
frequency(i,r)
ARG2(r,t)
unit(t,m)

# ::snt " That is very funny !
instance(f,funny)
instance(v,very)
instance(t,that)
degree(f,v)
domain(f,t)

# ::snt A day lasts only one minute , here where you live ! "
instance(l,last-01)
instance(t,temporal-quantity)
instance(d,day)
instance(t2,temporal-quantity)
instance(m,minute)
instance(o,only)
instance(l2,live-01)
instance(y,you)
ARG1(l,t)
unit(t,d)
ARG2(t,t2)
unit(t2,m)
mod(t2,o)
location(t2,l2)
ARG0(l2,y)

# ::snt " It is not funny at all ! " said the lamplighter .
instance(s,say-01)
instance(p,person)
instance(l,light-04)
instance(l2,lamp)
instance(f,funny)
instance(i,it)
instance(a,at-all)
ARG0(s,p)
ARG0-of(p,l)
ARG1(l,l2)
ARG1(l,f)
domain(f,i)
degree(f,a)

# ::snt " While we have been talking together a month has gone by . "
instance(p,pass-03)
instance(t,temporal-quantity)
instance(m,month)
instance(t2,talk-01)
instance(w,we)
instance(t3,together)
ARG1(p,t)
unit(t,m)
duration-of(t,t2)
ARG0(t2,w)
mod(t2,t3)

# ::snt " A month ? "
instance(t,temporal-quantity)
instance(m,month)
unit(t,m)

# ::snt " Yes , a month .
instance(t,temporal-quantity)
instance(m,month)
instance(1,1)
unit(t,m)
quant(t,1)

# ::snt Thirty minutes .
instance(t,temporal-quantity)
instance(m,minute)
instance(30,30)
unit(t,m)
quant(t,30)

# ::snt Thirty days .
instance(t,temporal-quantity)
instance(d,day)
instance(30,30)
unit(t,d)
quant(t,30)

# ::snt Good evening . "
instance(e,evening)
instance(g,good-02)
ARG1-of(e,g)

# ::snt And he lighted his lamp again .
instance(a,and)
instance(l,light-04)
instance(h,he)
instance(l2,lamp)
instance(a2,again)
op2(a,l)
ARG0(l,h)
ARG1(l,l2)
poss(l2,h)
mod(l2,a2)

# ::snt As the little prince watched him , he felt that he loved this lamplighter who was so faithful to his orders .
instance(f,feel-01)
instance(p,prince)
instance(l2,little)
instance(l,love-01)
instance(p2,person)
instance(l3,light-04)
instance(l4,lamp)
instance(t,this)
instance(f2,faithful-00)
instance(t2,thing)
instance(o,order-01)
instance(w,watch-01)
ARG0(f,p)
mod(p,l2)
ARG1(p,l)
ARG0(l,p)
ARG1(p,p2)
ARG0-of(p2,l3)
ARG1(l3,l4)
mod(l3,t)
ARG1-of(l3,f2)
ARG2(f2,t2)
ARG2-of(t2,o)
ARG1(o,p2)
time(o,w)
ARG0(w,p)
ARG1(p,p2)

# ::snt He remembered the sunsets which he himself had gone to seek , in other days , merely by pulling up his chair ; and he wanted to help his friend .
instance(a,and)
instance(r,remember-01)
instance(h,he)
instance(s3,sunset)
instance(s,seek-01)
instance(g,go-02)
instance(p,pull-01)
instance(c,chair)
instance(m,mere)
instance(u,up)
instance(d,day)
instance(o,other)
instance(w,want-01)
instance(h2,help-01)
instance(p2,person)
instance(h3,have-rel-role-91)
instance(f,friend)
op1(a,r)
ARG0(r,h)
ARG1(r,s3)
ARG1-of(s3,s)
purpose-of(s,g)
ARG0(g,h)
manner(h,p)
ARG0(p,h)
ARG1(h,c)
mod(h,m)
direction(h,u)
time(h,d)
mod(d,o)
op2(d,w)
ARG0(w,h)
ARG1(h,h2)
ARG0(h2,h)
ARG1(h,p2)
ARG0-of(p2,h3)
ARG1(h3,h)
ARG2(h,f)

# ::snt " You know , " he said , " I can tell you a way you can rest whenever you want to ... "
instance(s,say-01)
instance(h,he)
instance(p,possible-01)
instance(t,tell-01)
instance(w,way)
instance(p2,possible-01)
instance(r,rest-01)
instance(y,you)
instance(w2,want-01)
instance(a,any)
ARG0(s,h)
ARG1(s,p)
ARG1(p,t)
ARG0(t,h)
ARG1(h,w)
purpose(w,p2)
ARG1(p2,r)
ARG1(r,y)
time(r,w2)
ARG0(w2,y)
mod(y,a)
ARG2(y,y)

# ::snt " I always want to rest , " said the lamplighter .
instance(s,say-01)
instance(p,person)
instance(l,light-04)
instance(l2,lamp)
instance(w,want-01)
instance(r,rest-01)
instance(a,always)
ARG0(s,p)
ARG0-of(p,l)
ARG1(l,l2)
ARG1(l,w)
ARG0(w,p)
ARG1(p,r)
ARG1(r,p)
time(r,a)

# ::snt For it is possible for a man to be faithful and lazy at the same time .
instance(c,cause-01)
instance(p,possible-01)
instance(a,and)
instance(f,faithful)
instance(l,lazy)
instance(m,man)
instance(s,same-01)
instance(t,time)
ARG0(c,p)
ARG1(p,a)
op1(a,f)
op2(a,l)
domain(a,m)
time(a,s)
ARG1(s,t)

# ::snt The little prince went on with his explanation : " Your planet is so small that three strides will take you all the way around it .
instance(g,go-on-25)
instance(p,prince)
instance(l,little)
instance(e,explain-01)
instance(c,cause-01)
instance(h,have-degree-91)
instance(p2,planet)
instance(y,you)
instance(s,small)
instance(s2,so)
instance(t,take-03)
instance(s3,stride-01)
instance(a,around)
instance(a2,all-the-way)
ARG0(g,p)
mod(p,l)
ARG1(p,e)
ARG0(e,p)
ARG1(p,c)
ARG0(c,h)
ARG1(h,p2)
poss(p2,y)
ARG2(p2,s)
ARG3(p2,s2)
ARG6(p2,t)
ARG0(t,s3)
ARG1(t,y)
ARG2(y,a)
op1(a,p2)
extent(p2,a2)

# ::snt To be always in the sunshine , you need only walk along rather slowly .
instance(n,need-01)
instance(y,you)
instance(w,walk-01)
instance(s,slow-05)
instance(r,rather)
instance(o,only)
instance(b,be-located-at-91)
instance(s2,sunshine)
instance(a,always)
ARG0(n,y)
ARG1(n,w)
ARG1-of(w,s)
degree(s,r)
mod(s,o)
purpose(s,b)
ARG1(b,y)
ARG2(y,s2)
time(y,a)

# ::snt When you want to rest , you will walk - - and the day will last as long as you like . "
instance(w,walk-01)
instance(y,you)
instance(w2,want-01)
instance(r,rest-01)
instance(c,cause-01)
instance(l,last-01)
instance(d,day)
instance(t,temporal-quantity)
instance(h,have-quant-91)
instance(e,equal)
instance(t2,temporal-quantity)
instance(l2,like-02)
ARG0(w,y)
time(w,w2)
ARG0(w2,y)
ARG1(y,r)
ARG1(r,y)
ARG0-of(r,c)
ARG1(c,l)
ARG1(l,d)
ARG2(l,t)
ARG1-of(t,h)
ARG3(h,e)
ARG4(h,t2)
ARG1-of(t2,l2)
ARG0(l2,y)

# ::snt " That does n't do me much good , " said the lamplighter .
instance(s,say-01)
instance(p,person)
instance(l,light-04)
instance(l2,lamp)
instance(d,do-02)
instance(t,that)
instance(g,good-04)
instance(m,much)
ARG0(s,p)
ARG0-of(p,l)
ARG1(l,l2)
ARG1(l,d)
ARG0(d,t)
ARG1(d,g)
ARG2(g,p)
degree(p,m)
ARG2(p,p)

# ::snt " The one thing I love in life is to sleep . "
instance(l,love-01)
instance(i,i)
instance(s,sleep-01)
instance(t,thing)
instance(l2,live-01)
ARG0(l,i)
ARG1(l,s)
ARG0(s,i)
mod(i,t)
time(i,l2)

# ::snt " Then you 're unlucky , " said the little prince .
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(l2,lucky)
instance(y,you)
instance(t,then)
ARG0(s,p)
mod(p,l)
ARG1(p,l2)
domain(l2,y)
time(l2,t)

# ::snt " I am unlucky , " said the lamplighter .
instance(s,say-01)
instance(p,person)
instance(l,light-04)
instance(l2,lamp)
instance(l3,lucky)
instance(-,-)
ARG0(s,p)
ARG0-of(p,l)
ARG1(l,l2)
ARG1(l,l3)
domain(l3,p)
polarity(p,-)

# ::snt " Good morning . "
instance(m,morning)
instance(g,good-02)
ARG1-of(m,g)

# ::snt And he put out his lamp .
instance(a,and)
instance(p,put-out-09)
instance(h,he)
instance(l,lamp)
op2(a,p)
ARG0(p,h)
ARG1(p,l)
poss(l,h)

# ::snt " That man , " said the little prince to himself , as he continued farther on his journey , " that man would be scorned by all the others : by the king , by the conceited man , by the tippler , by the businessman .
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(s2,scorn-01)
instance(o,other)
instance(a,all)
instance(a2,and)
instance(k,king)
instance(m,man)
instance(c,conceit)
instance(p2,person)
instance(t,tipple-01)
instance(b,businessman)
instance(m2,man)
instance(t2,that)
instance(c2,continue-01)
instance(j,journey-01)
instance(f,far)
instance(h,have-degree-91)
instance(m3,more)
ARG0(s,p)
mod(p,l)
ARG1(p,s2)
ARG0(s2,o)
mod(o,a)
domain(o,a2)
op1(a2,k)
op2(a2,m)
mod(m,c)
op3(m,p2)
ARG0-of(p2,t)
op4(p2,b)
ARG1(p2,m2)
mod(m2,t2)
ARG2(m2,p)
time(p,c2)
ARG0(c2,p)
ARG1(p,j)
ARG0(j,p)
extent(j,f)
ARG2-of(f,h)
ARG1(h,j)
ARG3(j,m3)

# ::snt Nevertheless he is the only one of them all who does not seem to me ridiculous .
instance(h2,have-concession-91)
instance(s,seem-01)
instance(r,ridiculous-02)
instance(p,person)
instance(o2,only)
instance(i2,include-91)
instance(t,they)
instance(a,all)
instance(h,he)
instance(i,i)
ARG1(h2,s)
ARG1(s,r)
ARG1(r,p)
mod(p,o2)
ARG1-of(p,i2)
ARG2(i2,t)
mod(t,a)
domain(t,h)
ARG2(t,i)

# ::snt Perhaps that is because he is thinking of something else besides himself . "
instance(p,possible-01)
instance(c,cause-01)
instance(t,think-01)
instance(h,he)
instance(s,something)
instance(e,else)
instance(d,differ-02)
ARG1(p,c)
ARG0(c,t)
ARG0(t,h)
ARG2(t,s)
mod(s,e)
ARG1-of(s,d)
ARG2(d,h)

# ::snt He breathed a sigh of regret , and said to himself , again : " That man is the only one of them all whom I could have made my friend .
instance(a,and)
instance(b,breathe-02)
instance(h,he)
instance(s,sigh-02)
instance(r,regret-01)
instance(s2,say-01)
instance(p,person)
instance(o2,only)
instance(i,include-91)
instance(t,they)
instance(a2,all)
instance(m2,man)
instance(t2,that)
instance(m,make-01)
instance(h2,have-rel-role-91)
instance(f,friend)
instance(p2,possible-01)
instance(a3,again)
op1(a,b)
ARG0(b,h)
ARG1(b,s)
manner(s,r)
op2(s,s2)
ARG0(s2,h)
ARG1(h,p)
mod(p,o2)
ARG1-of(p,i)
ARG2(i,t)
mod(t,a2)
domain(t,m2)
mod(m2,t2)
ARG2-of(m2,m)
ARG0(m,h)
ARG1(h,h2)
ARG0(h2,p)
ARG1(p,h)
ARG2(h,f)
ARG1-of(h,p2)
ARG2(h,h)
mod(h,a3)

# ::snt But his planet is indeed too small .
instance(c,contrast-01)
instance(h2,have-degree-91)
instance(p,planet)
instance(h,he)
instance(s,small)
instance(t,too)
instance(i2,indeed)
ARG2(c,h2)
ARG1(h2,p)
poss(p,h)
ARG2(p,s)
ARG3(p,t)
mod(p,i2)

# ::snt There is no room on it for two people ... "
instance(r,room)
instance(i,it)
instance(p,person)
instance(2,2)
instance(-,-)
poss(r,i)
beneficiary(r,p)
quant(p,2)
polarity(p,-)

# ::snt What the little prince did not dare confess was that he was sorry most of all to leave this planet , because it was blest every day with 1440 sunsets !
instance(d,dare-01)
instance(p,prince)
instance(l,little)
instance(c,confess-01)
instance(h,have-degree-91)
instance(s2,sorry-01)
instance(l2,leave-11)
instance(p2,p2)
instance(m,most)
instance(c2,cause-01)
instance(b,bless-01)
instance(p2,planet)
instance(t,this)
instance(s,sunset)
instance(r,rate-entity-91)
instance(t2,temporal-quantity)
instance(d2,day)
ARG0(d,p)
mod(p,l)
ARG2(p,c)
ARG0(c,p)
ARG1(p,h)
ARG1(h,p)
ARG2(p,s2)
ARG1(s2,p)
ARG2(p,l2)
ARG0(l2,p)
ARG1(p,p2)
ARG3(p,m)
ARG1-of(p,c2)
ARG0(c2,b)
ARG1(b,p2)
mod(p2,t)
ARG2(p2,s)
frequency(p2,r)
ARG3(r,t2)
unit(t2,d2)

# ::snt Chapter 15 .
instance(c,chapter)
instance(15,15)
mod(c,15)

# ::snt The sixth planet was ten times larger than the last one .
instance(h,have-degree-91)
instance(p,planet)
instance(o,ordinal-entity)
instance(l,large)
instance(t,times)
instance(p2,planet)
instance(l2,last)
ARG1(h,p)
ord(p,o)
ARG2(p,l)
ARG3(p,t)
ARG4(p,p2)
mod(p2,l2)

# ::snt It was inhabited by an old gentleman who wrote voluminous books .
instance(i,inhabit-01)
instance(g,gentleman)
instance(o,old)
instance(w,write-01)
instance(b,book)
instance(v,volume)
instance(i2,it)
ARG0(i,g)
mod(g,o)
ARG0-of(g,w)
ARG1(w,b)
mod(b,v)
ARG1(b,i2)

# ::snt " Oh , look !
instance(a,and)
instance(o,oh)
instance(l,look-01)
instance(y,you)
op1(a,o)
op2(a,l)
ARG0(l,y)

# ::snt Here is an explorer ! " he exclaimed to himself when he saw the little prince coming .
instance(e,exclaim-01)
instance(h,he)
instance(p,person)
instance(e2,explore-01)
instance(s,see-01)
instance(c,come-01)
instance(p2,prince)
instance(l,little)
ARG0(e,h)
ARG1(e,p)
ARG0-of(p,e2)
ARG2(p,h)
time(h,s)
ARG0(s,h)
ARG1(h,c)
ARG1(c,p2)
mod(p2,l)

# ::snt The little prince sat down on the table and panted a little .
instance(a,and)
instance(s,sit-down-02)
instance(p2,prince)
instance(l,little)
instance(t,table)
instance(p,pant-01)
instance(l2,little)
op1(a,s)
ARG1(s,p2)
mod(p2,l)
location(p2,t)
op2(p2,p)
ARG0(p,p2)
duration(p2,l2)

# ::snt He had already traveled so much and so far !
instance(a2,and)
instance(t,travel-01)
instance(h,he)
instance(m,much)
instance(s,so)
instance(t2,travel-01)
instance(f,far)
instance(s2,so)
instance(a,already)
op1(a2,t)
ARG0(t,h)
quant(t,m)
mod(m,s)
op2(m,t2)
ARG0(t2,h)
ARG1(h,f)
mod(f,s2)
time(f,a)

# ::snt " Where do you come from ? " the old gentleman said to him .
instance(s,say-01)
instance(g,gentleman)
instance(o,old)
instance(c,come-01)
instance(h,h)
instance(a,amr-unknown)
instance(h,he)
ARG0(s,g)
mod(g,o)
ARG1(g,c)
ARG1(c,h)
ARG3(h,a)
ARG2(h,h)

# ::snt " What is that big book ? " said the little prince .
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(b,book)
instance(a,amr-unknown)
instance(b2,big)
instance(t,that)
ARG0(s,p)
mod(p,l)
ARG1(p,b)
domain(b,a)
mod(b,b2)
mod(b,t)

# ::snt " What are you doing ? "
instance(d2,do-02)
instance(y,you)
instance(a,amr-unknown)
ARG0(d2,y)
ARG1(d2,a)

# ::snt " I am a geographer , " the old gentleman said to him .
instance(s,say-01)
instance(g,gentleman)
instance(o,old)
instance(g2,geographer)
instance(h,he)
ARG0(s,g)
mod(g,o)
ARG1(g,g2)
domain(g2,g)
ARG2(g2,h)

# ::snt " What is a geographer ? " asked the little prince .
instance(a,ask-01)
instance(p,prince)
instance(l,little)
instance(g,geographer)
instance(a2,amr-unknown)
ARG0(a,p)
mod(p,l)
ARG1(p,g)
domain(g,a2)

# ::snt " A geographer is a scholar who knows the location of all the seas , rivers , towns , mountains , and deserts . "
instance(s4,scholar)
instance(g,geographer)
instance(k,know-01)
instance(l,location)
instance(a,and)
instance(s2,sea)
instance(r,river)
instance(t,town)
instance(m,mountain)
instance(d,desert)
instance(a2,all)
domain(s4,g)
ARG0-of(s4,k)
ARG1(k,l)
location-of(l,a)
op1(a,s2)
op2(a,r)
op3(a,t)
op4(a,m)
op5(a,d)
mod(a,a2)

# ::snt " That is very interesting , " said the little prince .
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(i,interest-01)
instance(t2,that)
instance(v,very)
ARG0(s,p)
mod(p,l)
ARG1(p,i)
ARG0(i,t2)
ARG1(i,p)
degree(p,v)

# ::snt " Here at last is a man who has a real profession ! "
instance(m2,man)
instance(h2,have-03)
instance(p2,profession)
instance(r,real-04)
instance(a,at-last)
ARG0-of(m2,h2)
ARG1(h2,p2)
ARG1-of(p2,r)
time(p2,a)

# ::snt And he cast a look around him at the planet of the geographer .
instance(a,and)
instance(l,look-01)
instance(h,he)
instance(p,planet)
instance(g,geographer)
instance(a2,around)
op2(a,l)
ARG0(l,h)
ARG1(l,p)
poss(p,g)
direction(p,a2)
op1(a2,h)

# ::snt It was the most magnificent and stately planet that he had ever seen .
instance(h2,have-degree-91)
instance(i,it)
instance(a,and)
instance(m2,magnificent)
instance(s,stately)
instance(m,most)
instance(p,planet)
instance(s2,see-01)
instance(h,he)
instance(e,ever)
ARG1(h2,i)
ARG2(h2,a)
op1(a,m2)
op2(a,s)
ARG3(a,m)
ARG5(a,p)
ARG1-of(p,s2)
ARG0(s2,h)
time(s2,e)

# ::snt " Your planet is very beautiful , " he said .
instance(s,say-01)
instance(h,he)
instance(b,beautiful-02)
instance(p,planet)
instance(y,you)
instance(v,very)
ARG0(s,h)
ARG1(s,b)
ARG1(b,p)
poss(p,y)
degree(p,v)

# ::snt " Has it any oceans ? "
instance(h,have-03)
instance(i,it)
instance(o,ocean)
instance(a,any)
instance(a2,amr-unknown)
ARG0(h,i)
ARG1(h,o)
mod(o,a)
polarity(o,a2)

# ::snt " I could n't tell you , " said the geographer .
instance(s,say-01)
instance(g,geographer)
instance(p,possible-01)
instance(t,tell-01)
instance(y,you)
instance(-,-)
ARG0(s,g)
ARG1(s,p)
ARG1(p,t)
ARG0(t,g)
ARG2(g,y)
polarity(g,-)

# ::snt " Ah ! "
instance(a,ah)

# ::snt The little prince was disappointed .
instance(d,disappoint-01)
instance(p,prince)
instance(l,little)
ARG1(d,p)
mod(p,l)

# ::snt " Has it any mountains ? "
instance(h2,have-03)
instance(i,it)
instance(m,mountain)
instance(a,any)
ARG0(h2,i)
ARG1(h2,m)
mod(m,a)

# ::snt " I could n't tell you , " said the geographer .
instance(s,say-01)
instance(g,geographer)
instance(p,possible-01)
instance(t,tell-01)
instance(y,you)
instance(-,-)
ARG0(s,g)
ARG1(s,p)
ARG1(p,t)
ARG0(t,g)
ARG2(g,y)
polarity(g,-)

# ::snt " And towns , and rivers , and deserts ? "
instance(a3,and)
instance(a4,and)
instance(t2,town)
instance(r2,river)
instance(d2,desert)
instance(a,amr-unknown)
op2(a3,a4)
op1(a4,t2)
op2(a4,r2)
op3(a4,d2)
polarity(a4,a)

# ::snt " I could n't tell you that , either . "
instance(p2,possible-01)
instance(t,tell-01)
instance(i,i)
instance(t2,that)
instance(y,you)
instance(e,either)
ARG1(p2,t)
ARG0(t,i)
ARG1(t,t2)
ARG2(t,y)
mod(t,e)

# ::snt " But you are a geographer ! "
instance(c,contrast-01)
instance(g2,geographer)
instance(y2,you)
ARG2(c,g2)
domain(g2,y2)

# ::snt " Exactly , " the geographer said .
instance(s,say-01)
instance(g,geographer)
instance(e,exact)
ARG0(s,g)
ARG1(s,e)

# ::snt " But I am not an explorer .
instance(c,contrast-01)
instance(p,person)
instance(i,i)
instance(e,explore-01)
ARG2(c,p)
domain(p,i)
ARG0-of(p,e)

# ::snt I have n't a single explorer on my planet .
instance(h2,have-03)
instance(i,i)
instance(p2,person)
instance(s,single-02)
instance(e,explore-01)
instance(p3,planet)
ARG0(h2,i)
ARG1(h2,p2)
ARG1-of(p2,s)
ARG0-of(p2,e)
location(p2,p3)
poss(p3,i)

# ::snt It is not the geographer who goes out to count the towns , the rivers , the mountains , the seas , the oceans , and the deserts .
instance(p2,person)
instance(g,geographer)
instance(g2,go-02)
instance(c,count-01)
instance(a,and)
instance(t,town)
instance(r,river)
instance(m,mountain)
instance(o2,ocean)
instance(d,desert)
instance(s2,sea)
domain(p2,g)
ARG0-of(p2,g2)
purpose(g2,c)
ARG0(c,g)
ARG1(g,a)
op1(a,t)
op2(a,r)
op3(a,m)
op4(a,o2)
op5(a,d)
op6(a,s2)

# ::snt The geographer is much too important to go loafing about .
instance(h,have-degree-91)
instance(g,geographer)
instance(i2,important-01)
instance(t,too)
instance(m,much)
instance(g2,go-01)
instance(l,loaf-01)
instance(a,about)
ARG1(h,g)
ARG2(h,i2)
ARG1(i2,g)
ARG3(i2,t)
quant(t,m)
ARG6(t,g2)
ARG1(g2,g)
purpose(g,l)
ARG0(l,g)
path(g,a)

# ::snt He does not leave his desk .
instance(l,leave-11)
instance(h,he)
instance(d,desk)
ARG0(l,h)
ARG1(l,d)
poss(d,h)

# ::snt But he receives the explorers in his study .
instance(c,contrast-01)
instance(r,receive-01)
instance(h,he)
instance(p,person)
instance(e,explore-01)
instance(s,study)
ARG2(c,r)
ARG0(r,h)
ARG1(r,p)
ARG0-of(p,e)
location(p,s)
poss(s,h)

# ::snt He asks them questions , and he notes down what they recall of their travels .
instance(a3,and)
instance(q2,question-01)
instance(h,he)
instance(t,they)
instance(n,note-02)
instance(t3,thing)
instance(r,recall-02)
instance(t2,travel-01)
op1(a3,q2)
ARG0(q2,h)
ARG2(q2,t)
op2(q2,n)
ARG0(n,h)
ARG1(h,t3)
ARG1-of(t3,r)
source(t3,t2)
ARG0(t2,t)

# ::snt And if the recollections of any one among them seem interesting to him , the geographer orders an inquiry into that explorer 's moral character . "
instance(a3,and)
instance(o,order-02)
instance(g,geographer)
instance(i,inquire-01)
instance(c,character)
instance(m,moral-02)
instance(p,person)
instance(e,explore-01)
instance(t2,that)
instance(i4,interest-01)
instance(t4,thing)
instance(r2,recall-02)
instance(p2,person)
instance(e2,explore-01)
instance(a,any)
instance(i5,include-91)
instance(t5,they)
op2(a3,o)
ARG0(o,g)
ARG1(o,i)
ARG1(i,c)
ARG1-of(c,m)
poss(c,p)
ARG0-of(p,e)
mod(p,t2)
condition(p,i4)
ARG1(i4,g)
ARG2(g,t4)
ARG1-of(t4,r2)
poss(t4,p2)
ARG0-of(p2,e2)
mod(p2,a)
ARG1-of(p2,i5)
ARG2(i5,t5)

# ::snt " Why is that ? "
instance(t2,that)
instance(c,cause-01)
instance(a,amr-unknown)
ARG1-of(t2,c)
ARG0(c,a)

# ::snt " Because an explorer who told lies would bring disaster on the books of the geographer .
instance(c,cause-01)
instance(l,lie-08)
instance(p2,person)
instance(e2,explore-01)
instance(b3,bring-01)
instance(d2,disaster)
instance(b4,book)
instance(g2,geographer)
ARG1(c,l)
ARG0(l,p2)
ARG0-of(p2,e2)
condition-of(p2,b3)
ARG1(b3,d2)
ARG2(b3,b4)
poss(b4,g2)

# ::snt So would an explorer who drank too much . "
instance(c,cause-01)
instance(p,person)
instance(e,explore-01)
instance(d,drink-01)
instance(h,have-quant-91)
instance(m,much)
instance(t2,too)
instance(t,thing)
instance(s,same-01)
ARG0(c,p)
ARG0-of(p,e)
ARG0-of(p,d)
ARG1-of(d,h)
ARG2(h,m)
ARG3(h,t2)
ARG1(h,t)
ARG1-of(t,s)

# ::snt " Why is that ? " asked the little prince .
instance(a,ask-01)
instance(p,prince)
instance(l,little)
instance(t,that)
instance(c,cause-01)
instance(a2,amr-unknown)
ARG0(a,p)
mod(p,l)
ARG1(p,t)
ARG1-of(t,c)
ARG0(c,a2)

# ::snt " Because intoxicated men see double .
instance(s3,see-01)
instance(m2,man)
instance(i2,intoxicate-01)
instance(d,double)
instance(c2,cause-01)
instance(t2,thing)
ARG0(s3,m2)
ARG1-of(m2,i2)
ARG2(m2,d)
ARG0-of(m2,c2)
ARG1(c2,t2)

# ::snt Then the geographer would note down two mountains in a place where there was only one . "
instance(t,thing)
instance(c,cause-01)
instance(n2,note-02)
instance(g,geographer)
instance(m,mountain)
instance(p,place)
instance(m2,mountain)
instance(o2,only)
instance(t2,then)
ARG0-of(t,c)
ARG1(c,n2)
ARG0(n2,g)
ARG1(n2,m)
location(m,p)
location-of(p,m2)
mod(m2,o2)
time(m2,t2)

# ::snt " I know some one , " said the little prince , " who would make a bad explorer . "
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(k,know-02)
instance(s2,someone)
instance(m,make-06)
instance(p2,person)
instance(e,explore-01)
instance(b,bad-02)
ARG0(s,p)
mod(p,l)
ARG1(p,k)
ARG0(k,p)
ARG1(p,s2)
ARG1-of(s2,m)
ARG2(m,p2)
ARG0-of(p2,e)
ARG1-of(p2,b)
ARG2(b,e)

# ::snt " That is possible .
instance(p2,possible-01)
instance(t,that)
ARG1(p2,t)

# ::snt Then , when the moral character of the explorer is shown to be good , an inquiry is ordered into his discovery . "
instance(o2,order-01)
instance(i,inquire-01)
instance(t,thing)
instance(d,discover-01)
instance(p,p)
instance(s3,show-01)
instance(g,good-02)
instance(c,character)
instance(p,person)
instance(e,explore-01)
instance(m,moral-02)
instance(t3,then)
ARG1(o2,i)
ARG1(i,t)
ARG1-of(t,d)
ARG0(d,p)
time(d,s3)
ARG1(s3,g)
ARG1(g,c)
poss(c,p)
ARG0-of(p,e)
ARG1-of(p,m)
time(p,t3)

# ::snt " One goes to see it ? "
instance(g,go-02)
instance(o,one)
instance(s2,see-01)
instance(i,it)
ARG0(g,o)
purpose(g,s2)
ARG0(s2,o)
ARG1(o,i)

# ::snt " No .
instance(n,no)

# ::snt That would be too complicated .
instance(h,have-degree-91)
instance(t,that)
instance(c2,complicate-01)
instance(t2,too)
ARG1(h,t)
ARG2(h,c2)
ARG1(c2,t)
ARG3(c2,t2)

# ::snt But one requires the explorer to furnish proofs .
instance(c,contrast-01)
instance(r,require-01)
instance(o,one)
instance(f,furnish-01)
instance(p,p)
instance(p2,prove-01)
instance(p,person)
instance(e,explore-01)
ARG2(c,r)
ARG0(r,o)
ARG1(r,f)
ARG0(f,p)
ARG1(p,p2)
ARG2(p,p)
ARG0-of(p,e)

# ::snt For example , if the discovery in question is that of a large mountain , one requires that large stones be brought back from it . "
instance(e2,exemplify-01)
instance(r,require-01)
instance(o,one)
instance(b,bring-01)
instance(s2,stone)
instance(l2,large)
instance(b2,back)
instance(m,m)
instance(d,discover-01)
instance(m,mountain)
instance(l,large)
instance(q,question-01)
ARG0(e2,r)
ARG0(r,o)
ARG1(r,b)
ARG1(b,s2)
mod(s2,l2)
direction(s2,b2)
source(s2,m)
condition(s2,d)
ARG1(d,m)
mod(m,l)
ARG1-of(m,q)

# ::snt The geographer was suddenly stirred to excitement .
instance(s,stir-02)
instance(g,geographer)
instance(e,excite-01)
instance(s2,sudden)
ARG1(s,g)
ARG3(s,e)
manner(s,s2)

# ::snt " But you - - you come from far away !
instance(c3,contrast-01)
instance(c,come-01)
instance(y,you)
instance(a,away)
instance(f,far)
ARG2(c3,c)
ARG1(c,y)
ARG3(c,a)
extent(a,f)

# ::snt You are an explorer !
instance(p2,person)
instance(e,explore-01)
instance(y,you)
ARG0-of(p2,e)
domain(p2,y)

# ::snt You shall describe your planet to me ! "
instance(d2,describe-01)
instance(y,you)
instance(p,planet)
instance(i,i)
ARG0(d2,y)
ARG1(d2,p)
source-of(p,y)
beneficiary(p,i)

# ::snt And , having opened his big register , the geographer sharpened his pencil .
instance(a,and)
instance(s,sharpen-01)
instance(g,g)
instance(p,pencil)
instance(a3,after)
instance(o,open-01)
instance(g,geographer)
instance(r,register-02)
instance(b,big)
op2(a,s)
ARG0(s,g)
ARG1(g,p)
poss(p,g)
time(p,a3)
op1(a3,o)
ARG0(o,g)
ARG1(o,r)
ARG0(r,g)
mod(g,b)

# ::snt The recitals of explorers are put down first in pencil .
instance(p,put-01)
instance(t,thing)
instance(r,recite-01)
instance(p2,person)
instance(e,explore-01)
instance(d,down)
instance(f,first)
instance(p3,pencil)
ARG1(p,t)
ARG1-of(t,r)
ARG0(r,p2)
ARG0-of(p2,e)
direction(p2,d)
time(p2,f)
instrument(p2,p3)

# ::snt One waits until the explorer has furnished proofs , before putting them down in ink .
instance(w,wait-01)
instance(o,one)
instance(u,until)
instance(f,furnish-01)
instance(p2,person)
instance(e,explore-01)
instance(p,prove-01)
instance(b,before)
instance(p3,put-01)
instance(t,they)
instance(d,down)
instance(i,ink)
ARG1(w,o)
time(w,u)
op1(u,f)
ARG0(f,p2)
ARG0-of(p2,e)
ARG1(p2,p)
time(p2,b)
op1(b,p3)
ARG0(p3,o)
ARG1(o,t)
direction(o,d)
instrument(o,i)

# ::snt " Well ? " said the geographer expectantly .
instance(r,request-response-91)
instance(g,geographer)
instance(e,expect-01)
ARG0(r,g)
manner(r,e)
ARG0(e,g)

# ::snt " Oh , where I live , " said the little prince , " it is not very interesting .
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(a,and)
instance(o,oh)
instance(expressive,expressive)
instance(i2,interest-01)
instance(l2,location)
instance(l3,live-01)
instance(v,very)
instance(-,-)
ARG0(s,p)
mod(p,l)
ARG1(p,a)
op1(a,o)
mode(o,expressive)
op2(o,i2)
ARG0(i2,l2)
location-of(l2,l3)
ARG0(l3,p)
ARG1(l3,p)
degree(p,v)
polarity(p,-)

# ::snt It is all so small .
instance(s3,small)
instance(i,it)
instance(a,all)
instance(s,so)
domain(s3,i)
mod(i,a)
degree(i,s)

# ::snt I have three volcanoes .
instance(h2,have-03)
instance(i,i)
instance(v,volcano)
instance(3,3)
ARG0(h2,i)
ARG1(h2,v)
quant(v,3)

# ::snt Two volcanoes are active and the other is extinct .
instance(a3,and)
instance(a,activity-06)
instance(v,volcano)
instance(e,extinct)
instance(o,other)
op1(a3,a)
ARG0(a,v)
op2(a,e)
domain(e,o)

# ::snt But one never knows . "
instance(c,contrast-01)
instance(k,know-01)
instance(o,one)
instance(-,-)
instance(e,ever)
ARG2(c,k)
ARG0(k,o)
polarity(k,-)
time(-,e)

# ::snt " One never knows , " said the geographer .
instance(s,say-01)
instance(g,geographer)
instance(k,know-01)
instance(o,one)
instance(e,ever)
ARG0(s,g)
ARG1(s,k)
ARG0(k,o)
time(k,e)

# ::snt " I have also a flower . "
instance(h2,have-03)
instance(i,i)
instance(t,thing)
instance(f,flower-01)
instance(a2,also)
ARG0(h2,i)
ARG1(h2,t)
ARG1-of(t,f)
mod(t,a2)

# ::snt " We do not record flowers , " said the geographer .
instance(s,say-01)
instance(g,geographer)
instance(r,record-01)
instance(w,we)
instance(t,thing)
instance(f,flower-01)
instance(-,-)
ARG0(s,g)
ARG1(s,r)
ARG0(r,w)
ARG1(r,t)
ARG1-of(t,f)
polarity(t,-)

# ::snt " Why is that ?
instance(t2,that)
instance(c,cause-01)
instance(a,amr-unknown)
ARG1-of(t2,c)
ARG0(c,a)

# ::snt The flower is the most beautiful thing on my planet ! "
instance(h,have-degree-91)
instance(t,thing)
instance(f,flower-01)
instance(b,beautiful-02)
instance(m,most)
instance(t2,thing)
instance(p,planet)
instance(i,i)
ARG1(h,t)
ARG1-of(t,f)
ARG2(t,b)
ARG1(b,t)
ARG3(b,m)
ARG5(b,t2)
location(t2,p)
source-of(p,i)

# ::snt " We do not record them , " said the geographer , " because they are ephemeral . "
instance(s,say-01)
instance(g,geographer)
instance(r,record-01)
instance(w,we)
instance(t,they)
instance(c,cause-01)
instance(e,ephemeral)
ARG0(s,g)
ARG1(s,r)
ARG0(r,w)
ARG1(r,t)
ARG1-of(r,c)
ARG0(c,e)
domain(e,t)

# ::snt " What does that mean - - ' ephemeral ' ? "
instance(m2,mean-01)
instance(e,ephemeral)
instance(a,amr-unknown)
ARG1(m2,e)
ARG2(m2,a)

# ::snt " Geographies , " said the geographer , " are the books which , of all books , are most concerned with matters of consequence .
instance(s,say-01)
instance(g,geographer)
instance(b,book)
instance(h,have-degree-91)
instance(c,concern-02)
instance(m2,matter)
instance(c2,consequential-01)
instance(m,most)
instance(b2,book)
instance(a,all)
instance(g2,geography)
ARG0(s,g)
ARG1(s,b)
ARG1-of(b,h)
ARG2(h,c)
ARG1(c,m2)
ARG1-of(m2,c2)
ARG3(m2,m)
ARG5(m2,b2)
mod(b2,a)
domain(b2,g2)

# ::snt They never become old - fashioned .
instance(b,become-01)
instance(t,they)
instance(f,fashion)
instance(o,old)
instance(e,ever)
instance(-,-)
ARG1(b,t)
ARG2(b,f)
mod(f,o)
time(f,e)
polarity(f,-)

# ::snt It is very rarely that a mountain changes its position .
instance(c,change-01)
instance(m,mountain)
instance(l,location)
instance(p,position-01)
instance(r,rare-02)
instance(v,very)
ARG0(c,m)
ARG1(c,l)
ARG2-of(l,p)
ARG1(p,m)
ARG1-of(p,r)
degree(r,v)

# ::snt It is very rarely that an ocean empties itself of its waters .
instance(e,empty-01)
instance(o,ocean)
instance(w,water)
instance(r,rare-02)
instance(v,very)
ARG0(e,o)
ARG1(e,o)
ARG2(o,w)
poss(w,o)
ARG1-of(w,r)
degree(r,v)

# ::snt We write of eternal things . "
instance(w3,write-01)
instance(w2,we)
instance(t,thing)
instance(e,eternal)
ARG0(w3,w2)
ARG1(w3,t)
mod(t,e)

# ::snt " But extinct volcanoes may come to life again , " the little prince interrupted .
instance(i,interrupt-01)
instance(p2,prince)
instance(l,little)
instance(c,contrast-01)
instance(p,possible-01)
instance(c2,come-04)
instance(v,volcano)
instance(e,extinct)
instance(t,thing)
instance(l3,live-01)
instance(a,again)
ARG0(i,p2)
mod(p2,l)
ARG2(p2,c)
ARG2(c,p)
ARG1(p,c2)
ARG1(c2,v)
mod(v,e)
ARG2(v,t)
ARG1-of(t,l3)
mod(t,a)

# ::snt " What does that mean - - ' ephemeral ' ? "
instance(m2,mean-01)
instance(e,ephemeral)
instance(a,amr-unknown)
ARG1(m2,e)
ARG2(m2,a)

# ::snt " Whether volcanoes are extinct or alive , it comes to the same thing for us , " said the geographer .
instance(s,say-01)
instance(g,geographer)
instance(s2,same-01)
instance(e2,extinct)
instance(v,volcano)
instance(l2,live-01)
instance(w,we)
ARG0(s,g)
ARG1(s,s2)
ARG1(s2,e2)
domain(e2,v)
ARG2(e2,l2)
ARG0(l2,v)
ARG3(l2,w)

# ::snt " The thing that matters to us is the mountain .
instance(m3,mountain)
instance(t,thing)
instance(m2,matter-01)
instance(w,we)
domain(m3,t)
ARG1-of(t,m2)
ARG2(m2,w)

# ::snt It does not change . "
instance(c2,change-01)
instance(i,it)
instance(-,-)
ARG1(c2,i)
polarity(c2,-)

# ::snt " But what does that mean - - ' ephemeral ' ? " repeated the little prince , who never in his life had let go of a question , once he had asked it .
instance(r,repeat-01)
instance(p,prince)
instance(l,little)
instance(l2,let-01)
instance(g,go-02)
instance(t,thing)
instance(q,question-01)
instance(o,once)
instance(a2,ask-01)
instance(e2,ever)
instance(t2,thing)
instance(l3,live-01)
instance(c,contrast-01)
instance(m,mean-01)
instance(e,ephemeral)
instance(a,amr-unknown)
ARG0(r,p)
mod(p,l)
ARG0-of(p,l2)
ARG1(l2,g)
ARG0(g,t)
ARG1-of(t,q)
ARG0(q,p)
time(q,o)
op1(o,a2)
ARG1(a2,t)
time(a2,e2)
duration(e2,t2)
ARG1-of(t2,l3)
ARG0(l3,p)
ARG1(l3,c)
ARG2(c,m)
ARG1(m,e)
ARG2(m,a)

# ::snt " It means , ' which is in danger of speedy disappearance . ' "
instance(m2,mean-01)
instance(i,it)
instance(t,thing)
instance(e,endanger-01)
instance(c,cause-01)
instance(d,disappear-01)
instance(s,speedy-03)
ARG1(m2,i)
ARG2(m2,t)
ARG1-of(t,e)
ARG1-of(e,c)
ARG0(c,d)
ARG1-of(d,s)

# ::snt " Is my flower in danger of speedy disappearance ? "
instance(e2,endanger-01)
instance(f2,flower)
instance(i,i)
instance(c,cause-01)
instance(d,disappear-01)
instance(s,speedy-03)
ARG1(e2,f2)
poss(f2,i)
ARG1-of(f2,c)
ARG0(c,d)
ARG1-of(d,s)

# ::snt " Certainly it is . "
instance(c2,certain)
instance(i2,it)
domain(c2,i2)

# ::snt " My flower is ephemeral , " the little prince said to himself , " and she has only four thorns to defend herself against the world .
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(a,and)
instance(e,ephemeral)
instance(f2,flower)
instance(h,have-03)
instance(t2,thorn)
instance(d,defend-01)
instance(w,world)
instance(o,only)
ARG0(s,p)
mod(p,l)
ARG1(p,a)
op1(a,e)
domain(e,f2)
poss(f2,p)
op2(f2,h)
ARG0(h,f2)
ARG1(f2,t2)
ARG2-of(t2,d)
ARG0(d,f2)
ARG1(f2,f2)
ARG3(f2,w)
quant(f2,o)
ARG2(f2,p)

# ::snt And I have left her on my planet , all alone ! "
instance(a4,and)
instance(l,leave-12)
instance(i,i)
instance(s,she)
instance(p,planet)
instance(c,cause-01)
instance(a2,alone)
instance(a3,all)
op2(a4,l)
ARG0(l,i)
ARG1(l,s)
ARG2(l,p)
source-of(p,i)
ARG0-of(p,c)
ARG1(c,a2)
degree(a2,a3)
domain(a2,s)

# ::snt That was his first moment of regret .
instance(m,moment)
instance(t,that)
instance(r,regret-01)
instance(o,ordinal-entity)
instance(h,he)
domain(m,t)
mod(m,r)
ord(m,o)
poss(m,h)

# ::snt But he took courage once more .
instance(c,contrast-01)
instance(t,take-01)
instance(h,he)
instance(c2,courage)
instance(a,again)
instance(o,once)
ARG2(c,t)
ARG0(t,h)
ARG1(t,c2)
mod(t,a)
mod(a,o)

# ::snt " What place would you advise me to visit now ? " he asked .
instance(a,ask-01)
instance(h,he)
instance(a2,advise-01)
instance(y,you)
instance(v,visit-01)
instance(p,place)
instance(a3,amr-unknown)
instance(n,now)
ARG0(a,h)
ARG1(a,a2)
ARG0(a2,y)
ARG1(a2,h)
ARG2(h,v)
ARG0(v,h)
ARG1(h,p)
domain(p,a3)
time(p,n)

# ::snt " The planet Earth , " replied the geographer .
instance(r,reply-01)
instance(g,geographer)
instance(p2,planet)
instance(n,name)
ARG0(r,g)
ARG2(r,p2)
name(p2,n)

# ::snt " It has a good reputation . "
instance(h2,have-03)
instance(i,it)
instance(r,reputation)
instance(g,good-02)
ARG0(h2,i)
ARG1(h2,r)
ARG1-of(r,g)

# ::snt And the little prince went away , thinking of his flower .
instance(a,and)
instance(a2,and)
instance(g,go-02)
instance(p,prince)
instance(l,little)
instance(a3,away)
instance(t,think-01)
instance(f2,flower)
op2(a,a2)
op1(a2,g)
ARG0(g,p)
mod(p,l)
direction(p,a3)
op2(p,t)
ARG0(t,p)
ARG1(p,f2)
poss(f2,p)

# ::snt Chapter 16 .
instance(c,chapter)
instance(16,16)
mod(c,16)

# ::snt So then the seventh planet was the Earth .
instance(p2,planet)
instance(o,ordinal-entity)
instance(p,planet)
instance(n,name)
instance(c,cause-01)
ord(p2,o)
domain(p2,p)
name(p,n)
ARG1-of(p,c)

# ::snt The Earth is not just an ordinary planet !
instance(p,planet)
instance(o,ordinary)
instance(j,just)
instance(p2,planet)
instance(n,name)
mod(p,o)
mod(o,j)
domain(o,p2)
name(p2,n)

# ::snt One can count , there 111 kings ( not forgetting , to be sure , the Negro kings among them ) , 7000 geographers , 900,000 businessmen , 7,500,000 tipplers , 311,000,000 conceited men - - that is to say , about 2,000,000,000 grown - ups .
instance(p,possible-01)
instance(a3,and)
instance(c,count-01)
instance(o,one)
instance(a,and)
instance(p5,person)
instance(h2,have-org-role-91)
instance(k,king)
instance(g2,geographer)
instance(b,businessman)
instance(p4,person)
instance(t2,tipple-01)
instance(m,man)
instance(c2,conceited)
instance(g3,grown-up)
instance(a2,about)
instance(t,there)
instance(f,forget-01)
instance(n,negro)
instance(i2,include-91)
instance(h,have-org-role-91)
instance(k2,king)
instance(t3,to-be-sure)
ARG1(p,a3)
op1(a3,c)
ARG0(c,o)
ARG1(c,a)
op1(a,p5)
ARG0-of(p5,h2)
ARG2(h2,k)
op2(h2,g2)
op3(h2,b)
op4(h2,p4)
ARG0-of(p4,t2)
op5(p4,m)
mod(m,c2)
mod(m,g3)
quant(g3,a2)
location(g3,t)
op2(g3,f)
ARG0(f,o)
ARG1(o,n)
ARG1-of(n,i2)
ARG2(i2,p5)
ARG0-of(i2,h)
ARG2(h,k2)
mod(h,t3)

# ::snt To give you an idea of the size of the Earth , I will tell you that before the invention of electricity it was necessary to maintain , over the whole of the six continents , a veritable army of 462,511 lamplighters for the street lamps .
instance(t,tell-01)
instance(i3,i)
instance(o,obligate-01)
instance(m,maintain-01)
instance(a,army)
instance(p2,person)
instance(l2,light-04)
instance(l3,lamp)
instance(v,veritable)
instance(o2,over)
instance(c,continent)
instance(w,whole)
instance(l,lamp)
instance(s2,street)
instance(b,before)
instance(i2,invent-01)
instance(e,electricity)
instance(y,y)
instance(g,give-01)
instance(i,idea)
instance(s,size-01)
instance(p3,planet)
instance(n,name)
instance(y,you)
ARG0(t,i3)
ARG1(t,o)
ARG2(o,m)
ARG1(m,a)
consist-of(a,p2)
ARG0-of(p2,l2)
ARG1(l2,l3)
mod(l2,v)
location(l2,o2)
op1(o2,c)
quant(c,w)
purpose(c,l)
location(l,s2)
time(l,b)
op1(b,i2)
ARG1(i2,e)
ARG2(i2,y)
purpose(y,g)
ARG1(g,i)
topic(i,s)
ARG1(s,p3)
name(p3,n)
ARG2(p3,y)

# ::snt Seen from a slight distance , that would make a splendid spectacle .
instance(m,make-01)
instance(t,that)
instance(s,spectacle)
instance(s2,splendid)
instance(s3,see-01)
instance(d,distance-01)
instance(s4,slight)
ARG0(m,t)
ARG1(m,s)
mod(s,s2)
condition(s,s3)
ARG1(s3,t)
manner(t,d)
ARG2(d,t)
degree(t,s4)

# ::snt The movements of this army would be regulated like those of the ballet in the opera .
instance(r,regulate-01)
instance(m,move-01)
instance(a,army)
instance(t,this)
instance(r3,resemble-01)
instance(m2,move-01)
instance(b,ballet)
instance(o,opera)
ARG1(r,m)
ARG0(m,a)
mod(a,t)
ARG1-of(a,r3)
ARG2(r3,m2)
ARG0(m2,b)
subevent-of(b,o)

# ::snt First would come the turn of the lamplighters of New Zealand and Australia .
instance(c,come-03)
instance(t,turn-01)
instance(p,person)
instance(a,and)
instance(c2,country)
instance(n,name)
instance(c3,country)
instance(n2,name)
instance(l,light-04)
instance(l2,lamp)
instance(f,first)
ARG1(c,t)
ARG1(t,p)
source(p,a)
op1(a,c2)
name(c2,n)
op2(c2,c3)
name(c3,n2)
ARG0-of(c3,l)
ARG1(l,l2)
time(l,f)

# ::snt Having set their lamps alight , these would go off to sleep .
instance(g,go-02)
instance(t,they)
instance(s,sleep-01)
instance(a,after)
instance(l2,light-04)
instance(l,lamp)
ARG0(g,t)
purpose(g,s)
ARG0(s,t)
time(s,a)
op1(a,l2)
ARG0(l2,t)
ARG1(t,l)
poss(l,t)

# ::snt Next , the lamplighters of China and Siberia would enter for their steps in the dance , and then they too would be waved back into the wings .
instance(a,and)
instance(e,enter-01)
instance(p,person)
instance(l,light-04)
instance(l2,lamp)
instance(a2,and)
instance(c,country)
instance(c2,country-region)
instance(n,next)
instance(s,step)
instance(d2,dance-01)
instance(w,wave-02)
instance(b,back)
instance(i,into)
instance(w2,wing)
instance(t,then)
instance(t2,too)
op1(a,e)
ARG0(e,p)
ARG0-of(p,l)
ARG1(l,l2)
source(l,a2)
op1(a2,c)
op2(a2,c2)
time(a2,n)
purpose(a2,s)
poss(s,p)
part-of(p,d2)
op2(p,w)
ARG1(w,p)
ARG2(p,b)
direction(b,i)
op1(i,w2)
time(i,t)
mod(i,t2)

# ::snt After that would come the turn of the lamplighters of Russia and the Indies ; then those of Africa and Europe , then those of South America ; then those of South America ; then those of North America .
instance(c8,come-03)
instance(t2,turn)
instance(p,person)
instance(l,light-04)
instance(l2,lamp)
instance(c3,continent)
instance(a,after)
instance(t,turn)
instance(p3,person)
instance(c2,continent)
instance(a6,after)
instance(t3,turn)
instance(p2,person)
instance(a4,and)
instance(c4,continent)
instance(c5,continent)
instance(a3,after)
instance(t4,turn)
instance(p4,person)
instance(a2,and)
instance(c,country)
instance(w,world-region)
ARG1(c8,t2)
poss(t2,p)
ARG0-of(p,l)
ARG1(l,l2)
location(l,c3)
time(l,a)
op1(a,t)
poss(t,p3)
ARG0-of(p3,l)
location(l,c2)
time(l,a6)
op1(a6,t3)
poss(t3,p2)
ARG0-of(p2,l)
location(l,a4)
op1(a4,c4)
op2(a4,c5)
time(a4,a3)
op1(a3,t4)
poss(t4,p4)
ARG0-of(p4,l)
location(l,a2)
op1(a2,c)
op2(a2,w)

# ::snt And never would they make a mistake in the order of their entry upon the stage .
instance(a,and)
instance(m2,mistake-02)
instance(t,they)
instance(o,order-03)
instance(e,enter-01)
instance(s,stage)
instance(e2,ever)
op2(a,m2)
ARG0(m2,t)
ARG1(m2,o)
ARG1(o,e)
ARG0(e,t)
ARG1(t,s)
time(t,e2)

# ::snt It would be magnificent .
instance(m,magnificent)
instance(i,it)
domain(m,i)

# ::snt Only the man who was in charge of the single lamp at the North Pole , and his colleague who was responsible for the single lamp at the South Pole - - only these two would live free from toil and care : they would be busy twice a year .
instance(l,live-01)
instance(a2,and)
instance(m,man)
instance(c4,charge-05)
instance(l2,lamp)
instance(s,single-02)
instance(w,world-region)
instance(o,only)
instance(c3,colleague)
instance(r,responsible-03)
instance(l4,lamp)
instance(s2,single-02)
instance(w2,world-region)
instance(p,person)
instance(t4,this)
instance(o2,only)
instance(f,free-04)
instance(a,and)
instance(t,toil-01)
instance(c,care-01)
instance(c2,cause-01)
instance(b,busy-01)
instance(r2,rate-entity-91)
instance(2,2)
instance(t3,temporal-quantity)
instance(y,year)
ARG0(l,a2)
op1(a2,m)
ARG1-of(m,c4)
ARG2(c4,l2)
ARG1-of(l2,s)
location(l2,w)
mod(l2,o)
op2(l2,c3)
poss(c3,m)
ARG0-of(m,r)
ARG1(r,l4)
ARG1-of(l4,s2)
location(l4,w2)
mod(l4,p)
mod(p,t4)
mod(p,o2)
ARG3-of(p,f)
ARG1(f,a2)
ARG2(a2,a)
op1(a,t)
op2(a,c)
ARG1-of(a,c2)
ARG0(c2,b)
ARG1(b,a2)
frequency(a2,r2)
ARG1(r2,2)
ARG2(2,t3)
unit(t3,y)

# ::snt Chapter 17 .
instance(c,chapter)
instance(17,17)
mod(c,17)

# ::snt When one wishes to play the wit , he sometimes wanders a little from the truth .
instance(w,wander-01)
instance(o,o)
instance(f,from)
instance(t,truth)
instance(w2,wish-01)
instance(o,one)
instance(p,play-02)
instance(w3,wit)
instance(l,little)
instance(s,sometimes)
ARG0(w,o)
ARG1(o,f)
op1(f,t)
time(f,w2)
ARG0(w2,o)
ARG1(w2,p)
ARG0(p,o)
ARG1(o,w3)
degree(o,l)
frequency(o,s)

# ::snt I have not been altogether honest in what I have told you about the lamplighters .
instance(h,honest-01)
instance(i,i)
instance(t2,thing)
instance(t,tell-01)
instance(y,you)
instance(p2,person)
instance(l,light-04)
instance(l2,lamp)
instance(a,altogether)
ARG0(h,i)
ARG1(h,t2)
ARG1-of(t2,t)
ARG0(t,i)
ARG2(i,y)
topic(i,p2)
ARG0-of(p2,l)
ARG1(l,l2)
degree(l,a)

# ::snt And I realize that I run the risk of giving a false idea of our planet to those who do not know it .
instance(a,and)
instance(r,realize-01)
instance(i,i)
instance(r2,risk-01)
instance(g,give-01)
instance(i2,idea)
instance(f,false)
instance(p2,planet)
instance(w,we)
instance(p,person)
instance(k,know-02)
op2(a,r)
ARG0(r,i)
ARG1(r,r2)
ARG0(r2,i)
ARG2(i,g)
ARG0(g,i)
ARG1(i,i2)
mod(i2,f)
topic(i2,p2)
source(p2,w)
ARG2(p2,p)
ARG0-of(p,k)
ARG1(k,p2)

# ::snt Men occupy a very small place upon the Earth .
instance(o,occupy-01)
instance(m,man)
instance(p2,place)
instance(s,small)
instance(v,very)
instance(p,planet)
instance(n,name)
ARG0(o,m)
ARG1(o,p2)
mod(p2,s)
degree(s,v)
location(s,p)
name(p,n)

# ::snt If the two billion inhabitants who people its surface were all to stand upright and somewhat crowded together , as they do for some big public assembly , they could easily be put into one public square twenty miles long and twenty miles wide .
instance(p,possible-01)
instance(p2,put-01)
instance(p3,p3)
instance(s5,square)
instance(p6,public-02)
instance(l,long-03)
instance(d2,distance-quantity)
instance(m,mile)
instance(w,wide-02)
instance(d3,distance-quantity)
instance(m2,mile)
instance(e,easy-05)
instance(s,stand-01)
instance(p3,person)
instance(i,inhabit-01)
instance(p4,people-01)
instance(s2,surface)
instance(i2,it)
instance(a,all)
instance(r,resemble-01)
instance(d,do-02)
instance(a3,assemble-02)
instance(p5,public)
instance(b,big)
instance(s4,some)
instance(a2,and)
instance(u,upright)
instance(c,crowd-02)
instance(t,together)
instance(s3,somewhat)
ARG1(p,p2)
ARG1(p2,p3)
ARG2(p3,s5)
ARG1-of(s5,p6)
ARG1-of(s5,l)
ARG2(l,d2)
unit(d2,m)
ARG1-of(d2,w)
mod(w,d3)
unit(d3,m2)
ARG1-of(d3,e)
condition(d3,s)
ARG0(s,p3)
ARG0-of(p3,i)
ARG2-of(p3,p4)
ARG1(p4,s2)
poss(s2,i2)
mod(s2,a)
ARG1-of(s2,r)
ARG2(r,d)
ARG0(d,p3)
purpose(p3,a3)
mod(a3,p5)
mod(a3,b)
mod(a3,s4)
manner(a3,a2)
op1(a2,u)
op2(a2,c)
manner(c,t)
degree(c,s3)

# ::snt All humanity could be piled up on a small Pacific islet .
instance(p,possible-01)
instance(p2,pile-01)
instance(h,humanity)
instance(a,all)
instance(i,islet)
instance(s,small)
instance(o2,ocean)
instance(n,name)
ARG1(p,p2)
ARG1(p2,h)
mod(h,a)
ARG2(h,i)
mod(i,s)
location(i,o2)
name(o2,n)

# ::snt The grown - ups , to be sure , will not believe you when you tell them that .
instance(b,believe-01)
instance(g2,grown-up)
instance(y,you)
instance(t,tell-01)
instance(t2,that)
instance(t3,to-be-sure)
ARG0(b,g2)
ARG1(b,y)
time(b,t)
ARG0(t,y)
ARG1(y,t2)
ARG2(y,g2)
mod(y,t3)

# ::snt They imagine that they fill a great deal of space .
instance(i,imagine-01)
instance(t,they)
instance(f,fill-01)
instance(s,space)
instance(d,deal)
instance(g,great)
ARG0(i,t)
ARG1(i,f)
ARG1(f,s)
quant(s,d)
mod(d,g)
ARG2(d,t)

# ::snt They fancy themselves as important as the baobabs .
instance(f,fancy-01)
instance(t,they)
instance(h,have-degree-91)
instance(i2,important-01)
instance(e,equal)
instance(b,baobab)
ARG0(f,t)
ARG1(f,h)
ARG1(h,t)
ARG2(t,i2)
ARG1(i2,t)
ARG3(i2,e)
ARG4(i2,b)

# ::snt You should advise them , then , to make their own calculations .
instance(r,recommend-01)
instance(a,advise-01)
instance(y,you)
instance(t,they)
instance(c,calculate-01)
ARG1(r,a)
ARG0(a,y)
ARG1(a,t)
ARG2(a,c)
ARG0(c,t)
ARG2(c,y)

# ::snt They adore figures , and that will please them .
instance(a,and)
instance(a2,adore-01)
instance(t,they)
instance(f,figure)
instance(p,please-01)
instance(t2,that)
op1(a,a2)
ARG0(a2,t)
ARG1(a2,f)
op2(a2,p)
ARG1(p,t)
ARG2(t,t2)

# ::snt But do not waste your time on this extra task .
instance(c,contrast-01)
instance(w,waste-01)
instance(y,you)
instance(t,time)
instance(t2,task-01)
instance(e,extra)
instance(t3,this)
ARG2(c,w)
ARG0(w,y)
ARG1(w,t)
poss(t,y)
ARG2(t,t2)
mod(t2,e)
mod(t2,t3)

# ::snt It is unnecessary .
instance(n,need-01)
instance(i,it)
instance(-,-)
ARG1(n,i)
polarity(n,-)

# ::snt You have , I know , confidence in me .
instance(t,trust-01)
instance(y,you)
instance(i,i)
instance(k,know-01)
ARG0(t,y)
ARG2(t,i)
ARG1-of(t,k)
ARG0(k,i)

# ::snt When the little prince arrived on the Earth , he was very much surprised not to see any people .
instance(s,surprise-01)
instance(s2,see-01)
instance(p,p)
instance(p2,person)
instance(a,any)
instance(p,prince)
instance(l,little)
instance(m,much)
instance(v,very)
instance(a2,arrive-01)
instance(p3,planet)
instance(n,name)
ARG0(s,s2)
ARG0(s2,p)
ARG1(p,p2)
quant(p2,a)
ARG1(p2,p)
mod(p,l)
degree(p,m)
degree(m,v)
time(m,a2)
ARG1(a2,p)
ARG4(p,p3)
name(p3,n)

# ::snt He was beginning to be afraid he had come to the wrong planet , when a coil of gold , the color of the moonlight , flashed across the sand .
instance(b,begin-01)
instance(h,he)
instance(f,fear-01)
instance(c,come-01)
instance(p,planet)
instance(w,wrong-04)
instance(f2,flash-02)
instance(c2,coil)
instance(g,gold)
instance(c3,color)
instance(t,thing)
instance(l,light-04)
instance(m,moon)
instance(a,across)
instance(s,sand)
ARG0(b,h)
ARG1(b,f)
ARG0(f,h)
ARG1(h,c)
ARG1(c,h)
ARG4(h,p)
ARG2-of(p,w)
time(p,f2)
ARG1(f2,c2)
mod(c2,g)
mod(g,c3)
poss(c3,t)
ARG2-of(t,l)
ARG0(l,m)
path(l,a)
op1(a,s)

# ::snt " Good evening , " said the little prince courteously .
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(e2,evening)
instance(g,good-02)
instance(c,courteous)
ARG0(s,p)
mod(p,l)
ARG1(p,e2)
ARG1-of(e2,g)
manner(e2,c)

# ::snt " Good evening , " said the snake .
instance(s,say-01)
instance(s2,snake)
instance(d,date-entity)
instance(e,evening)
instance(g,good-02)
ARG0(s,s2)
ARG1(s,d)
dayperiod(d,e)
ARG1-of(d,g)

# ::snt " What planet is this on which I have come down ? " asked the little prince .
instance(a,ask-01)
instance(p,prince)
instance(l,little)
instance(p2,planet)
instance(c,come-01)
instance(d,down)
instance(a2,amr-unknown)
ARG0(a,p)
mod(p,l)
ARG1(p,p2)
ARG4-of(p2,c)
ARG1(c,p)
direction(p,d)
domain(p,a2)

# ::snt " This is the Earth ; this is Africa , " the snake answered .
instance(a,answer-01)
instance(s,snake)
instance(a2,and)
instance(p,planet)
instance(n,name)
instance(t,this)
instance(c,continent)
instance(n2,name)
instance(t2,this)
ARG0(a,s)
ARG2(a,a2)
op1(a2,p)
name(p,n)
domain(p,t)
op2(p,c)
name(c,n2)
domain(c,t2)

# ::snt " Ah !
instance(a,ah)

# ::snt Then there are no people on the Earth ? "
instance(p,person)
instance(p2,planet)
instance(r,request-confirmation-91)
location(p,p2)
ARG1-of(p,r)

# ::snt " This is the desert .
instance(d2,desert)
instance(t,this)
domain(d2,t)

# ::snt There are no people in the desert .
instance(p,person)
instance(d,desert)
location(p,d)

# ::snt The Earth is large , " said the snake .
instance(s,say-01)
instance(s2,snake)
instance(l,large)
instance(p,planet)
instance(n,name)
ARG0(s,s2)
ARG1(s,l)
domain(l,p)
name(p,n)

# ::snt The little prince sat down on a stone , and raised his eyes toward the sky .
instance(a,and)
instance(s,sit-down-02)
instance(p,prince)
instance(l,little)
instance(s2,stone)
instance(d,down)
instance(r,raise-01)
instance(e,eye)
instance(s3,sky)
op1(a,s)
ARG1(s,p)
mod(p,l)
ARG2(p,s2)
direction(p,d)
op2(p,r)
ARG0(r,p)
ARG1(p,e)
part-of(e,p)
direction(e,s3)

# ::snt " I wonder , " he said , " whether the stars are set alight in heaven so that one day each one of us may find his own again ...
instance(s,say-01)
instance(h,he)
instance(w2,wonder-01)
instance(t,truth-value)
instance(l,light-04)
instance(s2,star)
instance(h2,heaven)
instance(f,find-01)
instance(w,we)
instance(e,each)
instance(s3,star)
instance(d,day)
instance(o,one)
instance(a,again)
instance(p,possible-01)
ARG0(s,h)
ARG1(s,w2)
ARG0(w2,h)
ARG1(h,t)
polarity-of(t,l)
ARG1(l,s2)
location(l,h2)
purpose(l,f)
ARG0(f,w)
mod(w,e)
ARG1(w,s3)
poss(s3,w)
time(s3,d)
mod(d,o)
mod(d,a)
ARG1-of(d,p)

# ::snt Look at my planet .
instance(l2,look-01)
instance(y,you)
instance(p,planet)
instance(i,i)
ARG0(l2,y)
ARG1(l2,p)
source(p,i)

# ::snt It is right there above us .
instance(b2,be-located-at-91)
instance(i,it)
instance(t,there)
instance(r,right)
instance(a,above)
instance(w,we)
ARG1(b2,i)
ARG2(b2,t)
mod(t,r)
direction(t,a)
op1(a,w)

# ::snt But how far away it is ! "
instance(c2,contrast-01)
instance(f,far)
instance(a,away)
instance(i,it)
instance(s,so)
ARG2(c2,f)
direction(f,a)
domain(f,i)
degree(f,s)

# ::snt " It is beautiful , " the snake said .
instance(s,say-01)
instance(s2,snake)
instance(b,beautiful-02)
instance(i,it)
ARG0(s,s2)
ARG1(s,b)
ARG1(b,i)

# ::snt " What has brought you here ? "
instance(b2,bring-01)
instance(a,amr-unknown)
instance(y,you)
instance(h,here)
ARG0(b2,a)
ARG1(b2,y)
ARG2(b2,h)

# ::snt " I have been having some trouble with a flower , " said the little prince .
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(h,have-trouble-04)
instance(f2,flower)
instance(s2,some)
ARG0(s,p)
mod(p,l)
ARG1(p,h)
ARG0(h,p)
ARG1(p,f2)
mod(p,s2)

# ::snt " Ah ! " said the snake .
instance(s,say-01)
instance(s2,snake)
instance(a,ah-01)
ARG0(s,s2)
ARG1(s,a)

# ::snt And they were both silent .
instance(a,and)
instance(s,silent)
instance(t,they)
instance(b,both)
op2(a,s)
domain(s,t)
mod(t,b)

# ::snt " Where are the men ? " the little prince at last took up the conversation again .
instance(a3,and)
instance(t,take-up-31)
instance(p,prince)
instance(l,little)
instance(c,converse-01)
instance(a,again)
instance(a2,at-last)
instance(b2,be-located-at-91)
instance(m,man)
instance(a4,amr-unknown)
op1(a3,t)
ARG0(t,p)
mod(p,l)
ARG1(p,c)
mod(p,a)
time(p,a2)
op2(p,b2)
ARG1(b2,m)
ARG2(b2,a4)

# ::snt " It is a little lonely in the desert ... "
instance(l2,lonely)
instance(b,be-located-at-91)
instance(d,desert)
instance(l,little)
domain(l2,b)
ARG2(b,d)
degree(b,l)

# ::snt " It is also lonely among men , " the snake said .
instance(s,say-01)
instance(s2,snake)
instance(l,lonely)
instance(b,be-located-at-91)
instance(a3,among)
instance(m,man)
instance(a2,also)
ARG0(s,s2)
ARG1(s,l)
domain(l,b)
ARG2(b,a3)
op1(a3,m)
mod(a3,a2)

# ::snt The little prince gazed at him for a long time .
instance(g,gaze-01)
instance(p,prince)
instance(l,little)
instance(h,he)
instance(l2,long-03)
ARG0(g,p)
mod(p,l)
ARG1(p,h)
ARG1-of(p,l2)

# ::snt " You are a funny animal , " he said at last .
instance(s,say-01)
instance(h,he)
instance(a2,animal)
instance(f,funny)
instance(y,you)
instance(a,at-last)
ARG0(s,h)
ARG1(s,a2)
mod(a2,f)
domain(a2,y)
time(a2,a)

# ::snt " You are no thicker than a finger ... "
instance(h,have-degree-91)
instance(y,you)
instance(t,thick-03)
instance(m,more)
instance(f,finger)
ARG1(h,y)
ARG2(h,t)
ARG1(t,y)
ARG3(t,m)
ARG4(t,f)

# ::snt " But I am more powerful than the finger of a king , " said the snake .
instance(s,say-01)
instance(s2,snake)
instance(c2,contrast-01)
instance(h,have-degree-91)
instance(i,i)
instance(p,powerful-02)
instance(m,more)
instance(f,finger)
instance(k,king)
ARG0(s,s2)
ARG1(s,c2)
ARG2(c2,h)
ARG1(h,i)
ARG2(h,p)
ARG1(p,i)
ARG3(p,m)
ARG4(p,f)
part-of(f,k)

# ::snt The little prince smiled .
instance(s,smile-01)
instance(p,prince)
instance(l,little)
ARG0(s,p)
mod(p,l)

# ::snt " You are not very powerful .
instance(p,powerful-02)
instance(y,you)
instance(v,very)
ARG1(p,y)
degree(p,v)

# ::snt You have n't even any feet .
instance(h,have-03)
instance(y,you)
instance(f,foot)
instance(a,any)
instance(e,even)
ARG0(h,y)
ARG1(h,f)
quant(f,a)
mod(f,e)

# ::snt You can not even travel ... "
instance(p,possible-01)
instance(t,travel-01)
instance(y,you)
instance(e,even)
ARG1(p,t)
ARG0(t,y)
mod(t,e)

# ::snt " I can carry you farther than any ship could take you , " said the snake .
instance(s,say-01)
instance(s2,snake)
instance(p,possible-01)
instance(c,carry-01)
instance(y,you)
instance(f,far)
instance(h,have-degree-91)
instance(m,more)
instance(d,distance-quantity)
instance(t,take-01)
instance(s3,ship)
instance(a,any)
ARG0(s,s2)
ARG1(s,p)
ARG1(p,c)
ARG0(c,s2)
ARG1(s2,y)
extent(s2,f)
ARG2-of(f,h)
ARG1(h,c)
ARG3(c,m)
ARG4(c,d)
extent-of(d,t)
ARG0(t,s3)
mod(s3,a)
ARG1(s3,y)

# ::snt He twined himself around the little prince 's ankle , like a golden bracelet .
instance(t,twine-01)
instance(h,he)
instance(a,ankle)
instance(p,prince)
instance(l,little)
instance(r,resemble-01)
instance(b,bracelet)
instance(g,gold)
ARG0(t,h)
ARG1(t,h)
ARG2(h,a)
part-of(a,p)
mod(p,l)
manner(p,r)
ARG2(r,b)
consist-of(b,g)

# ::snt " Whomever I touch , I send back to the earth from whence he came , " the snake spoke again .
instance(s,speak-01)
instance(s2,snake)
instance(s3,send-01)
instance(p,person)
instance(t,touch-01)
instance(a2,any)
instance(b,back)
instance(e,earth)
instance(c,come-01)
instance(a,again)
ARG0(s,s2)
ARG1(s,s3)
ARG0(s3,s2)
ARG1(s2,p)
ARG1-of(p,t)
ARG0(t,s2)
mod(t,a2)
ARG2(t,b)
op1(b,e)
ARG3-of(e,c)
ARG1(c,p)
mod(c,a)

# ::snt " But you are innocent and true , and you come from a star ... "
instance(c,contrast-01)
instance(a,and)
instance(a2,and)
instance(i,innocent-01)
instance(y,you)
instance(t,true-01)
instance(c2,come-01)
instance(s2,star)
ARG2(c,a)
op1(a,a2)
op1(a2,i)
ARG1(i,y)
op2(i,t)
ARG1(t,y)
op2(t,c2)
ARG1(c2,y)
ARG3(y,s2)

# ::snt The little prince made no reply .
instance(r,reply-01)
instance(p,prince)
instance(l,little)
instance(-,-)
ARG0(r,p)
mod(p,l)
polarity(p,-)

# ::snt " You move me to pity - - you are so weak on this Earth made of granite , " the snake said .
instance(s,say-01)
instance(s2,snake)
instance(p3,pity-01)
instance(y,you)
instance(c,cause-01)
instance(w,weak-02)
instance(s3,so)
instance(p2,planet)
instance(g,granite)
instance(t,this)
ARG0(s,s2)
ARG1(s,p3)
ARG0(p3,s2)
ARG1(s2,y)
ARG1-of(s2,c)
ARG0(c,w)
ARG1(w,y)
degree(y,s3)
location(y,p2)
consist-of(y,g)
mod(y,t)

# ::snt " I can help you , some day , if you grow too homesick for your own planet .
instance(p,possible-01)
instance(h,help-01)
instance(i,i)
instance(y,you)
instance(d,day)
instance(s,some)
instance(g,grow-02)
instance(h2,homesick)
instance(p2,planet)
instance(h3,have-degree-91)
instance(t,too)
ARG1(p,h)
ARG0(h,i)
ARG1(h,y)
time(h,d)
mod(d,s)
condition(d,g)
ARG1(g,y)
ARG2(y,h2)
topic(h2,p2)
source-of(p2,y)
ARG2-of(p2,h3)
ARG1(h3,y)
ARG3(y,t)

# ::snt I can - - "
instance(p,possible-01)
instance(d,do-02)
instance(i,i)
ARG1(p,d)
ARG0(d,i)

# ::snt " Oh !
instance(o,oh)

# ::snt I understand you very well , " said the little prince .
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(u,understand-01)
instance(y,you)
instance(w,well)
instance(v,very)
ARG0(s,p)
mod(p,l)
ARG1(p,u)
ARG0(u,p)
ARG1(p,y)
mod(p,w)
degree(w,v)

# ::snt " But why do you always speak in riddles ? "
instance(c,contrast-01)
instance(s2,speak-01)
instance(y,you)
instance(r,riddle)
instance(a,always)
instance(a2,amr-unknown)
ARG2(c,s2)
ARG0(s2,y)
ARG1(s2,r)
time(s2,a)
purpose(s2,a2)

# ::snt " I solve them all , " said the snake .
instance(s,say-01)
instance(s2,snake)
instance(s3,solve-01)
instance(t,they)
instance(a,all)
ARG0(s,s2)
ARG1(s,s3)
ARG0(s3,s2)
ARG1(s2,t)
mod(t,a)

# ::snt And they were both silent .
instance(a,and)
instance(s,silent)
instance(t,they)
instance(b,both)
op2(a,s)
domain(s,t)
mod(t,b)

# ::snt Chapter 18 .
instance(c,chapter)

# ::snt The little prince crossed the desert and met with only one flower .
instance(a,and)
instance(c,cross-02)
instance(p,prince)
instance(l,little)
instance(d,desert)
instance(m,meet-03)
instance(f,flower)
instance(o2,only)
op1(a,c)
ARG0(c,p)
mod(p,l)
ARG1(p,d)
op2(p,m)
ARG0(m,p)
ARG1(p,f)
mod(p,o2)

# ::snt It was a flower with three petals , a flower of no account at all .
instance(f2,flower)
instance(h,have-03)
instance(p,petal)
instance(a,account-01)
instance(a2,at-all)
instance(i,it)
ARG0-of(f2,h)
ARG1(h,p)
ARG1-of(h,a)
degree(a,a2)
domain(a,i)

# ::snt " Good morning , " said the little prince .
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(m2,morning)
instance(g,good-02)
ARG0(s,p)
mod(p,l)
ARG1(p,m2)
ARG1-of(m2,g)

# ::snt " Good morning , " said the flower .
instance(s,say-01)
instance(f,flower-01)
instance(m2,morning)
instance(g,good-02)
ARG0(s,f)
ARG1(s,m2)
ARG1-of(m2,g)

# ::snt " Where are the men ? " the little prince asked , politely .
instance(a,ask-01)
instance(p,prince)
instance(l,little)
instance(b,be-located-at-91)
instance(m,man)
instance(a2,amr-unknown)
instance(p3,polite-01)
ARG0(a,p)
mod(p,l)
ARG1(p,b)
ARG1(b,m)
ARG2(b,a2)
manner(b,p3)

# ::snt The flower had once seen a caravan passing .
instance(s,see-01)
instance(f,flower)
instance(p,pass-02)
instance(c,caravan-01)
ARG0(s,f)
ARG1(s,p)
ARG0(p,c)

# ::snt " Men ? " she echoed .
instance(e,echo-01)
instance(s,she)
instance(m,man)
instance(a,amr-unknown)
ARG0(e,s)
ARG1(e,m)
polarity(m,a)

# ::snt " I think there are six or seven of them in existence .
instance(t,think-01)
instance(i,i)
instance(e,exist-01)
instance(t2,they)
instance(o,or)
ARG0(t,i)
ARG1(t,e)
ARG1(e,t2)
quant(t2,o)

# ::snt I saw them , several years ago .
instance(s,see-01)
instance(i,i)
instance(t,they)
instance(b,before)
instance(n,now)
instance(s2,several)
instance(t2,temporal-quantity)
instance(y,year)
ARG0(s,i)
ARG1(s,t)
time(s,b)
op1(b,n)
quant(b,s2)
op1(s2,t2)
unit(t2,y)

# ::snt But one never knows where to find them .
instance(c,contrast-01)
instance(k,know-01)
instance(o,one)
instance(l,location)
instance(f,find-01)
instance(t,they)
instance(e,ever)
ARG2(c,k)
ARG0(k,o)
ARG1(k,l)
location-of(l,f)
ARG0(f,o)
ARG1(o,t)
time(o,e)

# ::snt The wind blows them away .
instance(b,blow-01)
instance(w,wind)
instance(t,they)
instance(a,away)
ARG0(b,w)
ARG1(b,t)
direction(b,a)

# ::snt They have no roots , and that makes their life very difficult . "
instance(a,and)
instance(h,have-03)
instance(t,they)
instance(r,root)
instance(m,make-02)
instance(d,difficult)
instance(t2,thing)
instance(l,live-01)
instance(v,very)
op1(a,h)
ARG0(h,t)
ARG1(h,r)
op2(h,m)
ARG0(m,h)
ARG1(h,d)
domain(d,t2)
ARG1-of(t2,l)
poss(t2,t)
degree(t2,v)

# ::snt " Goodbye , " said the little prince .
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(g,goodbye)
ARG0(s,p)
mod(p,l)
ARG1(p,g)

# ::snt " Goodbye , " said the flower .
instance(s,say-01)
instance(f,flower)
instance(g,goodbye)
ARG0(s,f)
ARG1(s,g)

# ::snt Chapter 19 .
instance(c,chapter)

# ::snt After that , the little prince climbed a high mountain .
instance(c,climb-01)
instance(p,prince)
instance(l,little)
instance(m,mountain)
instance(h,high-02)
instance(a,after)
instance(t,that)
ARG0(c,p)
mod(p,l)
ARG1(p,m)
ARG1-of(m,h)
time(m,a)
op1(a,t)

# ::snt The only mountains he had ever known were the three volcanoes , which came up to his knees .
instance(v,volcano)
instance(m,mountain)
instance(o,only)
instance(k,know-01)
instance(h,he)
instance(e,ever)
instance(c,come-04)
instance(u,up-to)
instance(k2,knee)
domain(v,m)
mod(m,o)
ARG1-of(m,k)
ARG0(k,h)
time(k,e)
ARG1-of(k,c)
ARG2(c,u)
op1(u,k2)
part-of(k2,h)

# ::snt And he used the extinct volcano as a footstool .
instance(a,and)
instance(u,use-01)
instance(h,he)
instance(v,volcano)
instance(e,extinct)
instance(f,footstool)
op2(a,u)
ARG0(u,h)
ARG1(u,v)
mod(v,e)
ARG2(v,f)

# ::snt " From a mountain as high as this one , " he said to himself , " I shall be able to see the whole planet at one glance , and all the people ... "
instance(s,say-01)
instance(h,he)
instance(p,possible-01)
instance(s2,see-01)
instance(a,and)
instance(p2,planet)
instance(w,whole)
instance(p3,person)
instance(a3,all)
instance(m,mountain)
instance(h3,have-degree-91)
instance(h2,high-02)
instance(e,equal)
instance(m2,mountain)
instance(t,this)
instance(g,glance-01)
ARG0(s,h)
ARG1(s,p)
ARG1(p,s2)
ARG0(s2,h)
ARG1(h,a)
op1(a,p2)
extent(p2,w)
op2(p2,p3)
mod(p3,a3)
source(p3,m)
ARG1-of(m,h3)
ARG2(h3,h2)
ARG1(h2,m)
ARG3(h2,e)
ARG4(h2,m2)
mod(m2,t)
manner(m2,g)
ARG2(m2,h)

# ::snt But he saw nothing , save peaks of rock that were sharpened like needles .
instance(c,contrast-01)
instance(s,see-01)
instance(h,he)
instance(n,nothing)
instance(e,except-01)
instance(p,peak)
instance(r,rock)
instance(s2,sharpen-01)
instance(r2,resemble-01)
instance(n2,needle)
ARG2(c,s)
ARG0(s,h)
ARG1(s,n)
ARG2-of(n,e)
ARG1(e,p)
consist-of(p,r)
ARG1-of(p,s2)
manner(s2,r2)
ARG1(r2,p)
ARG2(p,n2)

# ::snt " Good morning , " he said courteously .
instance(s,say-01)
instance(h,he)
instance(m,morning)
instance(g,good-02)
instance(c,courtesy)
ARG0(s,h)
ARG1(s,m)
ARG1-of(m,g)
manner(m,c)

# ::snt " Good morning - - Good morning - - Good morning , " answered the echo .
instance(a,answer-01)
instance(e,echo-01)
instance(m2,morning)
instance(g,good-02)
ARG0(a,e)
ARG1(a,m2)
ARG1-of(m2,g)

# ::snt " Who are you ? " said the little prince .
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(y,you)
instance(a,amr-unknown)
ARG0(s,p)
mod(p,l)
ARG2(p,y)
domain(y,a)

# ::snt " Who are you - - Who are you - - Who are you ? " answered the echo .
instance(a,answer-01)
instance(e,echo-01)
instance(y,you)
instance(a2,amr-unknown)
ARG0(a,e)
ARG2(a,y)
domain(y,a2)

# ::snt " Be my friends .
instance(h,have-rel-role-91)
instance(y,you)
instance(i,i)
instance(f,friend)
ARG0(h,y)
ARG1(h,i)
ARG2(h,f)

# ::snt I am all alone , " he said .
instance(s,say-01)
instance(h,he)
instance(a,alone)
instance(a2,all)
ARG0(s,h)
ARG1(s,a)
degree(a,a2)
domain(a,h)

# ::snt " I am all alone - - all alone - - all alone , " answered the echo .
instance(a,answer-01)
instance(e,echo-01)
instance(a2,alone)
instance(i,i)
instance(a3,all)
ARG0(a,e)
ARG2(a,a2)
domain(a2,i)
mod(a2,a3)

# ::snt " What a queer planet ! " he thought .
instance(t,think-01)
instance(h,he)
instance(p,planet)
instance(q,queer)
instance(s,so)
ARG0(t,h)
ARG1(t,p)
mod(p,q)
degree(q,s)

# ::snt " It is altogether dry , and altogether pointed , and altogether harsh and forbidding .
instance(a,and)
instance(d,dry-08)
instance(i,it)
instance(a2,altogether)
instance(p,pointed)
instance(a3,altogether)
instance(a4,and)
instance(h,harsh-02)
instance(f,forbidding)
instance(a5,altogether)
op1(a,d)
ARG1(d,i)
degree(d,a2)
op2(d,p)
degree(p,a3)
domain(p,i)
op3(p,a4)
op1(a4,h)
ARG1(h,i)
op2(h,f)
domain(f,i)
degree(f,a5)

# ::snt And the people have no imagination .
instance(a,and)
instance(h,have-03)
instance(p,person)
instance(i2,imagine-01)
op2(a,h)
ARG0(h,p)
ARG1(h,i2)

# ::snt They repeat whatever one says to them ...
instance(r,repeat-01)
instance(t2,they)
instance(t,thing)
instance(s2,say-01)
instance(o,one)
instance(a,all)
ARG0(r,t2)
ARG1(r,t)
ARG1-of(t,s2)
ARG0(s2,o)
ARG2(s2,t2)
mod(s2,a)

# ::snt On my planet I had a flower ; she always was the first to speak ... "
instance(h,have-03)
instance(i,i)
instance(f,flower)
instance(s,speak-01)
instance(o,ordinal-entity)
instance(a,always)
instance(p2,planet)
ARG0(h,i)
ARG1(h,f)
ARG0-of(f,s)
ord(s,o)
time(s,a)
location(s,p2)
poss(p2,i)

# ::snt Chapter 20 .
instance(c,chapter)

# ::snt But it happened that after walking for a long time through sand , and rocks , and snow , the little prince at last came upon a road .
instance(c,contrast-01)
instance(c2,come-upon-26)
instance(p,prince)
instance(l,little)
instance(r,road)
instance(a,after)
instance(w,walk-01)
instance(a2,and)
instance(s,sand)
instance(r2,rock)
instance(t,thing)
instance(s2,snow-01)
instance(l3,long-03)
instance(a3,at-last)
ARG2(c,c2)
ARG0(c2,p)
mod(p,l)
ARG1(p,r)
time(p,a)
op1(a,w)
ARG0(w,p)
path(p,a2)
op1(a2,s)
op2(a2,r2)
op3(a2,t)
ARG1-of(t,s2)
ARG1-of(t,l3)
time(t,a3)

# ::snt And all roads lead to the abodes of men .
instance(a,and)
instance(l,lead-01)
instance(r,road)
instance(a2,all)
instance(a3,abode)
instance(m,man)
op2(a,l)
ARG0(l,r)
mod(r,a2)
ARG4(r,a3)
poss(a3,m)

# ::snt " Good morning , " he said .
instance(s,say-01)
instance(h,he)
instance(m,morning)
instance(g,good-02)
ARG0(s,h)
ARG1(s,m)
ARG1-of(m,g)

# ::snt He was standing before a garden , all a - bloom with roses .
instance(s,stand-01)
instance(h,he)
instance(b,before)
instance(g,garden)
instance(b2,bloom-01)
instance(r,rose)
ARG1(s,h)
ARG2(s,b)
op1(b,g)
location-of(g,b2)
ARG0(b2,r)

# ::snt " Good morning , " said the roses .
instance(s,say-01)
instance(r,rose)
instance(m,morning)
instance(g,good-02)
ARG0(s,r)
ARG1(s,m)
ARG1-of(m,g)

# ::snt The little prince gazed at them .
instance(g,gaze-01)
instance(p,prince)
instance(l,little)
instance(t,they)
ARG0(g,p)
mod(p,l)
ARG1(p,t)

# ::snt They all looked like his flower .
instance(l,look-02)
instance(t,they)
instance(a,all)
instance(f,flower)
instance(h,he)
ARG0(l,t)
mod(t,a)
ARG1(t,f)
poss(f,h)

# ::snt " Who are you ? " he demanded , thunderstruck .
instance(d,demand-01)
instance(h,he)
instance(t,thunderstruck)
instance(a,amr-unknown)
instance(y2,you)
ARG0(d,h)
mod(h,t)
ARG1(h,a)
domain(a,y2)

# ::snt " We are roses , " the roses said .
instance(s,say-01)
instance(r,rose)
instance(r2,rose)
ARG0(s,r)
ARG1(s,r2)
domain(r2,r)

# ::snt And he was overcome with sadness .
instance(a,and)
instance(o,overcome-01)
instance(s,sad-02)
instance(h,he)
op2(a,o)
ARG0(o,s)
ARG1(o,h)

# ::snt His flower had told him that she was the only one of her kind in all the universe .
instance(t,tell-01)
instance(f,flower)
instance(h,he)
instance(u2,unique-01)
instance(s,she)
instance(u,universe)
instance(a,all)
ARG0(t,f)
poss(f,h)
ARG1(f,u2)
ARG1(u2,s)
ARG3(u2,u)
mod(u,a)
ARG2(u,h)

# ::snt And here were five thousand of them , all alike , in one single garden !
instance(a,and)
instance(t,they)
instance(a2,alike-05)
instance(a3,all)
instance(h,here)
instance(g,garden)
op1(a,t)
ARG1-of(t,a2)
mod(a2,a3)
location(a2,h)
location(a2,g)

# ::snt " She would be very much annoyed , " he said to himself , " if she should see that ... she would cough most dreadfully , and she would pretend that she was dying , to avoid being laughed at .
instance(s,say-01)
instance(h,he)
instance(a,and)
instance(a2,annoy-01)
instance(s2,she)
instance(m2,much)
instance(v,very)
instance(c,cough-01)
instance(h2,have-degree-91)
instance(d2,dreadful-02)
instance(m,most)
instance(p,pretend-01)
instance(d,die-01)
instance(a3,avoid-01)
instance(l,laugh-01)
instance(s3,see-01)
instance(t,that)
ARG0(s,h)
ARG1(s,a)
op1(a,a2)
ARG1(a2,s2)
degree(a2,m2)
degree(m2,v)
op2(m2,c)
ARG0(c,s2)
ARG1-of(s2,h2)
ARG2(h2,d2)
ARG1(d2,c)
ARG3(d2,m)
op3(d2,p)
ARG0(p,s2)
ARG1(s2,d)
ARG1(d,s2)
purpose(d,a3)
ARG0(a3,s2)
ARG1(s2,l)
ARG2(l,s2)
condition(l,s3)
ARG0(s3,s2)
ARG1(s2,t)
ARG2(s2,h)

# ::snt And I should be obliged to pretend that I was nursing her back to life - - for if I did not do that , to humble myself also , she would really allow herself to die ... "
instance(a,and)
instance(o,oblige-02)
instance(i,i)
instance(p,pretend-01)
instance(n,nurse-01)
instance(s,s)
instance(l,live-01)
instance(c,cause-01)
instance(a2,allow-01)
instance(s,she)
instance(d,die-01)
instance(r,real-04)
instance(p2,pretend-01)
instance(h,humble-01)
instance(i,i)
instance(a3,also)
op2(a,o)
ARG1(o,i)
ARG2(i,p)
ARG0(p,i)
ARG1(i,n)
ARG0(n,i)
ARG1(i,s)
purpose(s,l)
ARG0(l,s)
ARG1-of(l,c)
ARG0(c,a2)
ARG0(a2,s)
ARG1(a2,d)
ARG1(d,s)
ARG1-of(d,r)
condition(d,p2)
ARG0(p2,i)
ARG1(i,n)
purpose(n,h)
ARG0(h,i)
ARG1(i,i)
mod(i,a3)

# ::snt Then he went on with his reflections : " I thought that I was rich , with a flower that was unique in all the world ; and all I had was a common rose .
instance(g,go-on-25)
instance(h,h)
instance(r,reflect-02)
instance(h,he)
instance(c2,contrast-01)
instance(t,think-01)
instance(r3,rich)
instance(c3,cause-01)
instance(h3,have-03)
instance(f,flower)
instance(u,unique-01)
instance(w,world)
instance(a2,all)
instance(h2,have-03)
instance(r2,rose)
instance(c,common)
instance(a,all)
instance(t2,then)
ARG0(g,h)
ARG1(h,r)
ARG0(r,h)
ARG1(r,c2)
ARG1(c2,t)
ARG0(t,h)
ARG1(h,r3)
ARG1-of(r3,c3)
ARG0(c3,h3)
ARG0(h3,h)
ARG1(h,f)
ARG1-of(f,u)
ARG3(u,w)
mod(w,a2)
domain(w,h)
ARG2(w,h2)
ARG0(h2,h)
ARG1(h,r2)
mod(r2,c)
mod(r2,a)
time(r2,t2)

# ::snt A common rose , and three volcanoes that come up to my knees - - and one of them perhaps extinct forever ... that does n't make me a very great prince ... "
instance(m,make-02)
instance(a,and)
instance(r,rose)
instance(c,common)
instance(v2,volcano)
instance(c2,come-01)
instance(k,knee)
instance(i,i)
instance(u,up)
instance(i2,include-91)
instance(v3,volcano)
instance(e,extinct)
instance(p2,perhaps)
instance(f,forever)
instance(p,prince)
instance(g,great)
instance(v,very)
instance(i,i)
ARG0(m,a)
op1(a,r)
mod(r,c)
op2(r,v2)
ARG1-of(v2,c2)
ARG4(c2,k)
part-of(k,i)
direction(k,u)
ARG2-of(k,i2)
ARG1(i2,v3)
mod(v3,e)
mod(e,p2)
duration(e,f)
ARG1(e,p)
mod(p,g)
degree(g,v)
domain(g,i)

# ::snt And he lay down in the grass and cried .
instance(a2,and)
instance(a,and)
instance(l,lie-07)
instance(h,he)
instance(g,grass)
instance(d,down)
instance(c,cry-02)
op2(a2,a)
op1(a,l)
ARG1(l,h)
ARG2(l,g)
direction(l,d)
op2(l,c)
ARG0(c,h)

# ::snt Chapter 21 .
instance(c,chapter)

# ::snt It was then that the fox appeared .
instance(a,appear-01)
instance(f,fox)
instance(t,then)
ARG1(a,f)
time(a,t)

# ::snt " Good morning , " said the fox .
instance(s,say-01)
instance(f,fox)
instance(m,morning)
instance(g,good-02)
ARG0(s,f)
ARG1(s,m)
ARG1-of(m,g)

# ::snt " Good morning , " the little prince responded politely , although when he turned around he saw nothing .
instance(r,respond-01)
instance(p,prince)
instance(l,little)
instance(m,morning)
instance(g,good-02)
instance(p2,polite-01)
instance(s,see-01)
instance(n,nothing)
instance(t,turn-01)
instance(a,around)
ARG0(r,p)
mod(p,l)
ARG2(p,m)
ARG1-of(m,g)
manner(m,p2)
concession(m,s)
ARG0(s,p)
ARG1(p,n)
time(p,t)
ARG1(t,p)
direction(p,a)

# ::snt " I am right here , " the voice said , " under the apple tree . "
instance(s,say-01)
instance(v,voice)
instance(i,i)
instance(h,here)
instance(u,under)
instance(t,tree)
instance(a,apple)
instance(r,right)
ARG0(s,v)
ARG1(s,i)
location(i,h)
location(h,u)
op1(u,t)
mod(t,a)
mod(t,r)

# ::snt " Who are you ? " asked the little prince , and added , " You are very pretty to look at . "
instance(a,and)
instance(a2,ask-01)
instance(p,prince)
instance(l,little)
instance(y2,you)
instance(a3,amr-unknown)
instance(a4,add-01)
instance(l2,look-01)
instance(p2,pretty)
instance(v,very)
op1(a,a2)
ARG0(a2,p)
mod(p,l)
ARG1(p,y2)
mod(y2,a3)
op2(y2,a4)
ARG0(a4,p)
ARG1(p,l2)
ARG0(l2,p)
ARG1(p,y2)
ARG2(y2,p2)
degree(p2,v)

# ::snt " I am a fox , " said the fox .
instance(s,say-01)
instance(f,fox)
instance(f2,fox)
ARG0(s,f)
ARG1(s,f2)
domain(f2,f)

# ::snt " Come and play with me , " proposed the little prince .
instance(p,propose-01)
instance(p2,prince)
instance(l,little)
instance(a,and)
instance(c,come-01)
instance(p3,play-01)
ARG0(p,p2)
mod(p2,l)
ARG1(p2,a)
op1(a,c)
op2(a,p3)
ARG3(p3,p2)

# ::snt " I am so unhappy . "
instance(h,happy-01)
instance(i,i)
instance(s,so)
ARG1(h,i)
mod(h,s)

# ::snt " I can not play with you , " the fox said .
instance(s,say-01)
instance(f,fox)
instance(p,possible-01)
instance(p2,play-01)
instance(y,you)
ARG0(s,f)
ARG1(s,p)
ARG1(p,p2)
ARG0(p2,f)
ARG3(f,y)

# ::snt " I am not tamed . "
instance(t,tame-01)
instance(i,i)
instance(-,-)
ARG1(t,i)
polarity(t,-)

# ::snt " Ah !
instance(a,ah)

# ::snt Please excuse me , " said the little prince .
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(e,excuse-01)
instance(y,you)
instance(i,i)
ARG0(s,p)
mod(p,l)
ARG1(p,e)
ARG0(e,y)
ARG1(e,i)

# ::snt But , after some thought , he added : " What does that mean - - ' tame ' ? "
instance(c,contrast-01)
instance(a,add-01)
instance(h,he)
instance(m,mean-01)
instance(t2,tame-01)
instance(a3,amr-unknown)
instance(a2,after)
instance(t,think-01)
instance(s,some)
ARG2(c,a)
ARG0(a,h)
ARG1(a,m)
ARG1(m,t2)
ARG2(m,a3)
time(m,a2)
op1(a2,t)
mod(t,s)

# ::snt " You do not live here , " said the fox .
instance(s,say-01)
instance(f,fox)
instance(l,live-01)
instance(y,you)
instance(h,here)
instance(-,-)
ARG0(s,f)
ARG1(s,l)
ARG0(l,y)
location(l,h)
polarity(h,-)

# ::snt " What is it that you are looking for ? "
instance(l,look-01)
instance(y,you)
instance(a,amr-unknown)
ARG0(l,y)
ARG1(l,a)

# ::snt " I am looking for men , " said the little prince .
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(l2,look-01)
instance(m,man)
ARG0(s,p)
mod(p,l)
ARG1(p,l2)
ARG0(l2,p)
ARG1(p,m)

# ::snt " What does that mean - - ' tame ' ? "
instance(m,mean-01)
instance(t,tame-01)
instance(a,amr-unknown)
ARG1(m,t)
ARG2(m,a)

# ::snt " Men , " said the fox .
instance(s,say-01)
instance(f,fox)
instance(m,man)
ARG0(s,f)
ARG1(s,m)

# ::snt " They have guns , and they hunt .
instance(a,and)
instance(h,have-03)
instance(t,they)
instance(g,gun)
instance(h2,hunt-01)
op1(a,h)
ARG0(h,t)
ARG1(h,g)
op2(h,h2)
ARG0(h2,t)

# ::snt It is very disturbing .
instance(d,disturb-01)
instance(i,it)
instance(v,very)
ARG0(d,i)
degree(d,v)

# ::snt They also raise chickens .
instance(r,raise-03)
instance(t,they)
instance(c,chicken)
instance(a,also)
ARG0(r,t)
ARG1(r,c)
mod(r,a)

# ::snt These are their only interests .
instance(i,interest-01)
instance(t,this)
instance(t2,they)
instance(o,only)
ARG0(i,t)
ARG1(i,t2)
mod(i,o)

# ::snt Are you looking for chickens ? "
instance(l,look-01)
instance(y,you)
instance(c,chicken)
instance(a,amr-unknown)
ARG0(l,y)
ARG1(l,c)
polarity(l,a)

# ::snt " No , " said the little prince .
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(n,no)
ARG0(s,p)
mod(p,l)
ARG1(p,n)

# ::snt " I am looking for friends .
instance(l,look-01)
instance(i,i)
instance(p,person)
instance(h,have-rel-role-91)
instance(f,friend)
ARG0(l,i)
ARG1(l,p)
ARG0-of(p,h)
ARG1(h,i)
ARG2(i,f)

# ::snt What does that mean - - ' tame ' ? "
instance(m,mean-01)
instance(t,tame-01)
instance(a,amr-unknown)
ARG1(m,t)
ARG2(m,a)

# ::snt " It is an act too often neglected , " said the fox .
instance(s,say-01)
instance(f,fox)
instance(n,neglect-01)
instance(a,act-02)
instance(h,have-degree-91)
instance(o,often)
instance(t,too)
ARG0(s,f)
ARG1(s,n)
ARG1(n,a)
ARG1-of(n,h)
ARG2(h,o)
frequency-of(o,n)
ARG3(o,t)

# ::snt It means to establish ties . "
instance(m,mean-01)
instance(i,it)
instance(e,establish-01)
instance(t,tie-01)
ARG1(m,i)
ARG2(m,e)
ARG1(e,t)

# ::snt " ' To establish ties ' ? "
instance(e,establish-01)
instance(t,tie-01)
instance(a,amr-unknown)
ARG1(e,t)
polarity(e,a)

# ::snt " Just that , " said the fox .
instance(s,say-01)
instance(f,fox)
instance(t,that)
instance(j,just)
ARG0(s,f)
ARG1(s,t)
mod(t,j)

# ::snt " To me , you are still nothing more than a little boy who is just like a hundred thousand other little boys .
instance(o2,opine-01)
instance(i,i)
instance(b,boy)
instance(l,little)
instance(r,resemble-01)
instance(b2,boy)
instance(l2,little)
instance(o,other)
instance(j,just)
instance(y2,you)
instance(m2,more)
instance(s2,still)
ARG0(o2,i)
ARG1(o2,b)
mod(b,l)
ARG1-of(b,r)
ARG2(r,b2)
mod(b2,l2)
mod(b2,o)
mod(b2,j)
domain(b2,y2)
mod(y2,m2)
mod(y2,s2)

# ::snt And I have no need of you .
instance(a,and)
instance(n,need-01)
instance(i,i)
instance(y,you)
instance(-,-)
op2(a,n)
ARG0(n,i)
ARG1(n,y)
polarity(n,-)

# ::snt And you , on your part , have no need of me .
instance(a,and)
instance(n,need-01)
instance(y,you)
instance(i,i)
op2(a,n)
ARG0(n,y)
ARG1(n,i)

# ::snt To you , I am nothing more than a fox like a hundred thousand other foxes .
instance(o,opine-01)
instance(y2,you)
instance(f,fox)
instance(r3,resemble-01)
instance(f2,fox)
instance(o3,other)
instance(i,i)
instance(m2,more)
ARG0(o,y2)
ARG1(o,f)
ARG1-of(f,r3)
ARG2(r3,f2)
mod(f2,o3)
domain(f2,i)
mod(i,m2)

# ::snt But if you tame me , then we shall need each other .
instance(c,contrast-01)
instance(n,need-01)
instance(w,we)
instance(o,other)
instance(e,each)
instance(t,tame-01)
instance(y,you)
instance(i,i)
ARG2(c,n)
ARG0(n,w)
ARG1(n,o)
mod(o,e)
condition(o,t)
ARG0(t,y)
ARG1(t,i)

# ::snt To me , you will be unique in all the world .
instance(o,opine-01)
instance(i,i)
instance(u,unique-01)
instance(y,you)
instance(w,world)
instance(a,all)
ARG0(o,i)
ARG1(o,u)
ARG1(u,y)
ARG3(u,w)
mod(w,a)

# ::snt To you , I shall be unique in all the world ... "
instance(o,opine-01)
instance(y,you)
instance(u,unique-01)
instance(i,i)
instance(w,world)
instance(a,all)
ARG0(o,y)
ARG1(o,u)
ARG1(u,i)
ARG3(u,w)
mod(w,a)

# ::snt " I am beginning to understand , " said the little prince .
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(b,begin-01)
instance(i,i)
instance(u,understand-01)
ARG0(s,p)
mod(p,l)
ARG1(p,b)
ARG0(b,i)
ARG1(b,u)
ARG0(u,i)

# ::snt " There is a flower ...
instance(f,flower)

# ::snt I think that she has tamed me ... "
instance(t,think-01)
instance(i,i)
instance(t2,tame-01)
instance(s,she)
ARG0(t,i)
ARG1(t,t2)
ARG0(t2,s)
ARG1(t2,i)

# ::snt " It is possible , " said the fox .
instance(s,say-01)
instance(f,fox)
instance(p,possible-01)
instance(i,it)
ARG0(s,f)
ARG1(s,p)
ARG1(p,i)

# ::snt " On the Earth one sees all sorts of things . "
instance(s,see-01)
instance(o,one)
instance(t,thing)
instance(s2,sort)
instance(a,all)
instance(p,planet)
instance(n,name)
ARG0(s,o)
ARG1(s,t)
mod(t,s2)
mod(s2,a)
location(s2,p)
name(p,n)

# ::snt " Oh , but this is not on the Earth ! " said the little prince .
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(a,and)
instance(o,oh)
instance(c,contrast-01)
instance(b,be-located-at-91)
instance(t,this)
instance(p2,planet)
ARG0(s,p)
mod(p,l)
ARG1(p,a)
op1(a,o)
op2(a,c)
ARG2(c,b)
ARG1(b,t)
ARG2(b,p2)

# ::snt The fox seemed perplexed , and very curious .
instance(s,seem-01)
instance(a,and)
instance(p,perplex-01)
instance(f,fox)
instance(c,curious-01)
instance(v,very)
ARG1(s,a)
op1(a,p)
ARG1(p,f)
op2(p,c)
ARG1(c,f)
degree(f,v)

# ::snt " On another planet ? "
instance(b,be-located-at-91)
instance(p,planet)
instance(a2,another)
instance(a,amr-unknown)
ARG2(b,p)
mod(p,a2)
polarity(p,a)

# ::snt " Yes . "
instance(y,yes)

# ::snt " Are there hunters on this planet ? "
instance(p,person)
instance(h,hunt-01)
instance(p2,planet)
instance(t,this)
instance(a,amr-unknown)
ARG0-of(p,h)
location(p,p2)
mod(p2,t)
polarity(p2,a)

# ::snt " No . "
instance(n,no)

# ::snt " Ah , that is interesting !
instance(a,ah-01)
instance(i2,interest-01)
instance(t,that)
ARG1(a,i2)
ARG0(i2,t)

# ::snt Are there chickens ? "
instance(c,chicken)
instance(a,amr-unknown)
polarity(c,a)

# ::snt " No . "
instance(n,no)

# ::snt " Nothing is perfect , " sighed the fox .
instance(s,sigh-01)
instance(f,fox)
instance(p,perfect-02)
instance(n,nothing)
ARG0(s,f)
ARG1(s,p)
ARG1(p,n)

# ::snt But he came back to his idea .
instance(c2,contrast-01)
instance(c,come-01)
instance(h,he)
instance(i,idea)
instance(b2,back)
ARG2(c2,c)
ARG1(c,h)
ARG4(c,i)
poss(i,h)
direction(i,b2)

# ::snt " My life is very monotonous , " the fox said .
instance(s,say-01)
instance(f,fox)
instance(m,monotonous)
instance(l,life)
instance(i,i)
instance(v,very)
ARG0(s,f)
ARG1(s,m)
domain(m,l)
poss(l,i)
degree(l,v)

# ::snt " I hunt chickens ; men hunt me .
instance(a,and)
instance(h,hunt-01)
instance(i,i)
instance(c,chicken)
instance(h2,hunt-01)
instance(m,man)
op1(a,h)
ARG0(h,i)
ARG1(h,c)
op2(h,h2)
ARG0(h2,m)
ARG1(h2,i)

# ::snt All the chickens are just alike , and all the men are just alike .
instance(a,and)
instance(a2,alike-05)
instance(c,chicken)
instance(a5,all)
instance(j,just)
instance(a3,alike-05)
instance(m,man)
instance(a7,all)
instance(j2,just)
op1(a,a2)
ARG1(a2,c)
mod(c,a5)
mod(c,j)
op2(c,a3)
ARG1(a3,m)
mod(m,a7)
mod(m,j2)

# ::snt And , in consequence , I am a little bored .
instance(a,and)
instance(c,consequence-03)
instance(b,bore-02)
instance(i,i)
instance(l,little)
op2(a,c)
ARG2(c,b)
ARG1(b,i)
degree(b,l)

# ::snt But if you tame me , it will be as if the sun came to shine on my life .
instance(c,contrast-01)
instance(s,shine-01)
instance(s2,sun)
instance(l,life)
instance(i,i)
instance(t,tame-01)
instance(y,you)
ARG2(c,s)
ARG1(s,s2)
ARG2(s,l)
poss(l,i)
condition(l,t)
ARG0(t,y)
ARG1(t,i)

# ::snt I shall know the sound of a step that will be different from all the others .
instance(k,know-04)
instance(i,i)
instance(s,sound-02)
instance(s2,step-01)
instance(d,differ-02)
instance(s3,step-01)
instance(o,other)
instance(a,all)
ARG0(k,i)
ARG1(k,s)
ARG1(s,s2)
ARG1-of(s2,d)
ARG2(d,s3)
mod(s3,o)
mod(o,a)

# ::snt Other steps send me hurrying back underneath the ground .
instance(s,send-03)
instance(s2,step-01)
instance(o,other)
instance(i,i)
instance(u,underneath)
instance(g,ground)
instance(b,back)
instance(h,hurry-01)
ARG0(s,s2)
mod(s2,o)
ARG1(s2,i)
ARG4(s2,u)
op1(u,g)
ARG5(u,b)
manner(u,h)
ARG1(h,i)

# ::snt Yours will call me , like music , out of my burrow .
instance(c,call-03)
instance(s,step-01)
instance(y,you)
instance(o,out-06)
instance(i,i)
instance(b,burrow)
instance(i,i)
instance(r,resemble-01)
instance(m,music)
ARG0(c,s)
ARG1(s,y)
ARG1(s,o)
ARG1(o,i)
ARG2(i,b)
poss(b,i)
ARG2(b,i)
ARG1-of(b,r)
ARG2(r,m)

# ::snt And then look : you see the grain - fields down yonder ?
instance(a,and)
instance(l,look-01)
instance(y,y)
instance(t,then)
instance(s,see-01)
instance(y,you)
instance(f,field)
instance(g,grain)
instance(y2,yonder)
instance(d,down)
instance(a2,amr-unknown)
op2(a,l)
ARG0(l,y)
time(y,t)
op3(y,s)
ARG0(s,y)
ARG1(s,f)
mod(f,g)
location(f,y2)
mod(y2,d)
polarity(y2,a2)

# ::snt I do not eat bread .
instance(e,eat-01)
instance(i,i)
instance(b,bread)
instance(-,-)
ARG0(e,i)
ARG1(e,b)
polarity(e,-)

# ::snt Wheat is of no use to me .
instance(u,use-01)
instance(i,i)
instance(w,wheat)
instance(-,-)
ARG0(u,i)
ARG1(u,w)
polarity(u,-)

# ::snt The wheat fields have nothing to say to me .
instance(s,say-01)
instance(f,field)
instance(w,wheat)
instance(n,nothing)
instance(i,i)
ARG0(s,f)
mod(f,w)
ARG1(f,n)
ARG2(f,i)

# ::snt And that is sad .
instance(a,and)
instance(s,sad-02)
instance(t2,that)
op2(a,s)
ARG0(s,t2)

# ::snt But you have hair that is the colour of gold .
instance(c2,contrast-01)
instance(h,have-03)
instance(y,you)
instance(h2,hair)
instance(c,color)
instance(g,gold)
ARG2(c2,h)
ARG0(h,y)
ARG1(h,h2)
mod(h2,c)
mod(c,g)

# ::snt Think how wonderful that will be when you have tamed me !
instance(t,think-01)
instance(y,y)
instance(w,wonderful-03)
instance(t2,tame-01)
instance(y,you)
instance(i,i)
instance(a,amr-unknown)
ARG0(t,y)
ARG1(y,w)
ARG1(w,t2)
ARG0(t2,y)
ARG1(t2,i)
degree(t2,a)

# ::snt The grain , which is also golden , will bring me back the thought of you .
instance(b,bring-01)
instance(g,grain)
instance(g2,golden)
instance(a,also)
instance(t,think-01)
instance(y,you)
instance(i,i)
instance(b2,back)
ARG0(b,g)
mod(g,g2)
mod(g2,a)
ARG1(g2,t)
ARG1(t,y)
ARG2(t,i)
direction(t,b2)

# ::snt And I shall love to listen to the wind in the wheat ... "
instance(a,and)
instance(l,love-02)
instance(i,i)
instance(l2,listen-01)
instance(w,wind)
instance(w2,wheat)
op2(a,l)
ARG0(l,i)
ARG1(l,l2)
ARG0(l2,i)
ARG1(i,w)
location(w,w2)

# ::snt The fox gazed at the little prince , for a long time .
instance(g,gaze-01)
instance(f,fox)
instance(p,prince)
instance(l,little)
instance(l2,long-03)
ARG0(g,f)
ARG1(g,p)
mod(p,l)
ARG1-of(p,l2)

# ::snt " Please - - tame me ! " he said .
instance(s,say-01)
instance(h,he)
instance(t,tame-01)
instance(y,you)
ARG0(s,h)
ARG1(s,t)
ARG0(t,y)
ARG1(t,h)

# ::snt " I want to , very much , " the little prince replied .
instance(r,reply-01)
instance(p,prince)
instance(l,little)
instance(w,want-01)
instance(t,tame-01)
instance(y,you)
instance(m,much)
instance(v,very)
ARG0(r,p)
mod(p,l)
ARG2(p,w)
ARG0(w,p)
ARG1(p,t)
ARG0(t,p)
ARG1(p,y)
degree(p,m)
degree(m,v)

# ::snt " But I have not much time .
instance(c,contrast-01)
instance(h,have-03)
instance(i,i)
instance(t,time)
instance(m,much)
instance(-,-)
ARG2(c,h)
ARG0(h,i)
ARG1(h,t)
quant(t,m)
polarity(m,-)

# ::snt I have friends to discover , and a great many things to understand . "
instance(o,obligate-01)
instance(a,and)
instance(d,discover-01)
instance(i,i)
instance(p,person)
instance(h,have-rel-role-91)
instance(f,friend)
instance(u,understand-01)
instance(t,thing)
instance(m,many)
instance(g,great)
ARG2(o,a)
op1(a,d)
ARG0(d,i)
ARG1(d,p)
ARG0-of(p,h)
ARG1(h,i)
ARG2(i,f)
op2(i,u)
ARG0(u,i)
ARG1(i,t)
quant(t,m)
mod(m,g)

# ::snt " One only understands the things that one tames , " said the fox .
instance(s,say-01)
instance(f,fox)
instance(u,understand-01)
instance(o,one)
instance(t,thing)
instance(t2,tame-01)
instance(o2,only)
ARG0(s,f)
ARG1(s,u)
ARG0(u,o)
ARG1(u,t)
ARG1-of(t,t2)
ARG0(t2,o)
mod(t2,o2)

# ::snt " Men have no more time to understand anything .
instance(h,have-03)
instance(m,man)
instance(t,time)
instance(u,understand-01)
instance(a,anything)
instance(-,-)
ARG0(h,m)
ARG1(h,t)
duration-of(t,u)
ARG0(u,m)
ARG1(m,a)
polarity(m,-)

# ::snt They buy things all ready made at the shops .
instance(b,buy-01)
instance(t,they)
instance(t2,thing)
instance(m,make-01)
instance(a,already)
instance(s,shop)
ARG0(b,t)
ARG1(b,t2)
ARG1-of(t2,m)
time(m,a)
location(m,s)

# ::snt But there is no shop anywhere where one can buy friendship , and so men have no friends any more .
instance(c,contrast-01)
instance(p,possible-01)
instance(b,buy-01)
instance(o,one)
instance(f,friendship)
instance(s,shop)
instance(a2,anywhere)
instance(c2,cause-01)
instance(h,have-rel-role-91)
instance(p2,person)
instance(m,man)
instance(f2,friend)
instance(a,anymore)
ARG2(c,p)
ARG1(p,b)
ARG0(b,o)
ARG1(b,f)
location(b,s)
location(s,a2)
ARG0-of(s,c2)
ARG1(c2,h)
ARG0(h,p2)
ARG1(h,m)
ARG2(h,f2)
mod(h,a)

# ::snt If you want a friend , tame me ... "
instance(t,tame-01)
instance(y,you)
instance(i,i)
instance(w,want-01)
instance(h,have-rel-role-91)
instance(p,person)
instance(f,friend)
ARG0(t,y)
ARG1(t,i)
condition(t,w)
ARG0(w,y)
ARG1(y,h)
ARG0(h,p)
ARG1(h,y)
ARG2(y,f)

# ::snt " What must I do , to tame you ? " asked the little prince .
instance(a,ask-01)
instance(p,prince)
instance(l,little)
instance(o,obligate-01)
instance(d,do-02)
instance(a2,amr-unknown)
instance(t,tame-01)
instance(y,you)
ARG0(a,p)
mod(p,l)
ARG1(p,o)
ARG2(o,d)
ARG0(d,p)
ARG1(p,a2)
purpose(p,t)
ARG0(t,p)
ARG1(p,y)

# ::snt " You must be very patient , " replied the fox .
instance(r,reply-01)
instance(f,fox)
instance(o,obligate-01)
instance(p,patient-01)
instance(y,you)
instance(v,very)
ARG0(r,f)
ARG2(r,o)
ARG2(o,p)
ARG1(p,y)
degree(p,v)

# ::snt " First you will sit down at a little distance from me - - like that - - in the grass .
instance(s,sit-down-02)
instance(y,you)
instance(f,first)
instance(r,relative-position)
instance(i,i)
instance(d,distance)
instance(l,little)
instance(d2,down)
instance(g,grass)
instance(t,that)
ARG1(s,y)
time(s,f)
location(s,r)
op1(r,i)
quant(r,d)
mod(d,l)
direction(d,d2)
location(d2,g)
example(d2,t)

# ::snt I shall look at you out of the corner of my eye , and you will say nothing .
instance(a,and)
instance(l,look-01)
instance(i,i)
instance(y,you)
instance(o,out-of)
instance(c,corner)
instance(e,eye)
instance(s,say-01)
instance(n,nothing)
op1(a,l)
ARG0(l,i)
ARG1(l,y)
direction(l,o)
op1(o,c)
part-of(c,e)
part-of(e,i)
op2(e,s)
ARG0(s,y)
ARG1(y,n)

# ::snt Words are the source of misunderstandings .
instance(s,source-01)
instance(m,misunderstand-01)
instance(w,word)
ARG1(s,m)
ARG2(s,w)

# ::snt But you will sit a little closer to me , every day ... "
instance(c2,contrast-01)
instance(s,sit-01)
instance(y,you)
instance(h,have-degree-91)
instance(c,close-10)
instance(i,i)
instance(r2,rate-entity-91)
instance(t,temporal-quantity)
instance(d,day)
instance(m,more)
instance(l,little)
ARG2(c2,s)
ARG1(s,y)
ARG1-of(s,h)
ARG2(h,c)
ARG1(c,y)
ARG2(y,i)
frequency(y,r2)
ARG3(r2,t)
unit(t,d)
ARG3(t,m)
quant(m,l)

# ::snt The next day the little prince came back .
instance(c,come-01)
instance(p,prince)
instance(l,little)
instance(b,back)
instance(d,day)
instance(n,next)
ARG1(c,p)
mod(p,l)
direction(p,b)
time(p,d)
mod(d,n)

# ::snt " It would have been better to come back at the same hour , " said the fox .
instance(s,say-01)
instance(f,fox)
instance(h2,have-degree-91)
instance(c,come-01)
instance(b2,back)
instance(h,hour)
instance(s2,same-01)
instance(g,good-02)
instance(m,more)
ARG0(s,f)
ARG1(s,h2)
ARG1(h2,c)
direction(c,b2)
time(c,h)
ARG1-of(h,s2)
ARG2(h,g)
ARG1(g,c)
ARG3(g,m)

# ::snt " If , for example , you come at four o'clock in the afternoon , then at three o'clock I shall begin to be happy .
instance(b,begin-01)
instance(i,i)
instance(h,happy-01)
instance(c,come-01)
instance(y,you)
instance(d2,date-entity)
instance(e,exemplify-01)
instance(d,date-entity)
ARG0(b,i)
ARG1(b,h)
ARG1(h,i)
condition(h,c)
ARG1(c,y)
time(c,d2)
ARG0-of(c,e)
time(c,d)

# ::snt I shall feel happier and happier as the hour advances .
instance(c,correlate-91)
instance(m,more)
instance(h,have-degree-91)
instance(i,i)
instance(h4,happy-01)
instance(m2,more)
instance(h2,have-quant-91)
instance(a,advance-01)
instance(h3,hour)
ARG1(c,m)
ARG3-of(m,h)
ARG1(h,i)
ARG2(h,h4)
ARG1(h4,i)
ARG2(h4,m2)
ARG3-of(m2,h2)
ARG1(h2,a)
ARG1(a,h3)

# ::snt At four o'clock , I shall already be worrying and jumping about .
instance(a,and)
instance(w,worry-01)
instance(i,i)
instance(j,jump-03)
instance(a2,about)
instance(d,date-entity)
instance(a3,already)
op1(a,w)
ARG1(w,i)
op2(w,j)
ARG0(j,i)
direction(i,a2)
time(i,d)
time(i,a3)

# ::snt I shall show you how happy I am !
instance(s,show-01)
instance(i,i)
instance(h,happy-01)
instance(s2,so)
instance(y,you)
ARG0(s,i)
ARG1(s,h)
ARG1(h,i)
degree(i,s2)
ARG2(i,y)

# ::snt But if you come at just any time , I shall never know at what hour my heart is to be ready to greet you ...
instance(c,contrast-01)
instance(k,know-01)
instance(i,i)
instance(h3,hour)
instance(r,ready-02)
instance(h2,heart)
instance(g,greet-01)
instance(y,you)
instance(e,ever)
instance(c2,come-01)
instance(t,time)
instance(a2,any)
instance(j2,just)
ARG2(c,k)
ARG0(k,i)
ARG1(k,h3)
time(h3,r)
ARG1(r,h2)
part-of(h2,i)
ARG2(h2,g)
ARG0(g,h2)
ARG1(h2,y)
time(h2,e)
condition(h2,c2)
ARG1(c2,y)
time(y,t)
mod(t,a2)
mod(a2,j2)

# ::snt One must observe the proper rites ... "
instance(o,obligate-01)
instance(o3,one)
instance(o2,observe-01)
instance(r,rite)
instance(p2,proper)
ARG1(o,o3)
ARG2(o,o2)
ARG0(o2,o3)
ARG1(o3,r)
mod(r,p2)

# ::snt " What is a rite ? " asked the little prince .
instance(a,ask-01)
instance(p,prince)
instance(l,little)
instance(r,rite)
instance(a2,amr-unknown)
ARG0(a,p)
mod(p,l)
ARG1(p,r)
domain(r,a2)

# ::snt " Those also are actions too often neglected , " said the fox .
instance(s,say-01)
instance(f,fox)
instance(a,act-02)
instance(t2,that)
instance(n2,neglect-01)
instance(h,have-degree-91)
instance(o,often)
instance(t3,too)
instance(a3,also)
ARG0(s,f)
ARG1(s,a)
domain(a,t2)
ARG1-of(a,n2)
ARG1-of(n2,h)
ARG2(h,o)
frequency-of(o,n2)
ARG3(o,t3)
mod(o,a3)

# ::snt " They are what make one day different from other days , one hour from other hours .
instance(t2,thing)
instance(t,they)
instance(m,make-02)
instance(a,and)
instance(d,differ-02)
instance(d2,day)
instance(o4,one)
instance(d3,day)
instance(o,other)
instance(d4,differ-02)
instance(h,hour)
instance(o3,one)
instance(h2,hour)
instance(o2,other)
domain(t2,t)
ARG0-of(t2,m)
ARG1(m,a)
op1(a,d)
ARG1(d,d2)
mod(d2,o4)
ARG2(d2,d3)
mod(d3,o)
op2(d3,d4)
ARG1(d4,h)
mod(h,o3)
ARG2(h,h2)
mod(h2,o2)

# ::snt There is a rite , for example , among my hunters .
instance(r,rite)
instance(h,have-03)
instance(p,person)
instance(h2,hunt-01)
instance(i,i)
instance(e,exemplify-01)
ARG1-of(r,h)
ARG0(h,p)
ARG0-of(p,h2)
ARG1(h2,i)
ARG0-of(h2,e)

# ::snt Every Thursday they dance with the village girls .
instance(d,dance-01)
instance(t,they)
instance(g,girl)
instance(v,village)
instance(r,rate-entity-91)
instance(d2,date-entity)
instance(t2,thursday)
ARG0(d,t)
ARG2(d,g)
source(g,v)
frequency(g,r)
ARG4(r,d2)
weekday(d2,t2)

# ::snt So Thursday is a wonderful day for me !
instance(c,cause-01)
instance(d2,day)
instance(d,date-entity)
instance(t,thursday)
instance(w,wonderful-03)
instance(i,i)
ARG1(c,d2)
domain(d2,d)
weekday(d,t)
ARG1-of(d,w)
beneficiary(d,i)

# ::snt I can take a walk as far as the vineyards .
instance(p,possible-01)
instance(w,walk-01)
instance(i,i)
instance(f,far)
instance(h,have-degree-91)
instance(e,equal)
instance(v,vineyard)
ARG1(p,w)
ARG0(w,i)
extent(w,f)
ARG2-of(f,h)
ARG1(h,w)
ARG3(w,e)
ARG4(w,v)

# ::snt But if the hunters danced at just any time , every day would be like every other day , and I should never have any vacation at all . "
instance(c2,contrast-01)
instance(v2,vacation-01)
instance(i,i)
instance(d,dance-01)
instance(p,person)
instance(h2,hunt-01)
instance(a2,any)
instance(j,just)
instance(c,cause-01)
instance(r,resemble-01)
instance(d2,day)
instance(e,every)
instance(d3,day)
instance(o,other)
instance(e2,every)
instance(a4,any)
instance(a3,at-all)
ARG2(c2,v2)
ARG0(v2,i)
condition(v2,d)
ARG0(d,p)
ARG0-of(p,h2)
time(p,a2)
mod(a2,j)
ARG1-of(a2,c)
ARG0(c,r)
ARG1(r,d2)
mod(d2,e)
ARG2(d2,d3)
mod(d3,o)
mod(o,e2)
quant(o,a4)
mod(o,a3)

# ::snt So the little prince tamed the fox .
instance(c,cause-01)
instance(t,tame-01)
instance(p,prince)
instance(l,little)
instance(f,fox)
ARG1(c,t)
ARG0(t,p)
mod(p,l)
ARG1(p,f)

# ::snt And when the hour of his departure drew near - - " Ah , " said the fox , " I shall cry . "
instance(a,and)
instance(s,say-01)
instance(f,fox)
instance(a2,and)
instance(a3,ah)
instance(c,cry-02)
instance(h2,hour)
instance(d,depart-01)
instance(n2,near-01)
op1(a,s)
ARG0(s,f)
ARG1(s,a2)
op1(a2,a3)
op2(a2,c)
ARG0(c,f)
time(c,h2)
time-of(h2,d)
ARG0(d,f)
ARG1-of(d,n2)

# ::snt " It is your own fault , " said the little prince .
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(f,fault-01)
instance(y,you)
instance(i,it)
ARG0(s,p)
mod(p,l)
ARG1(p,f)
ARG1(f,y)
ARG2(f,i)

# ::snt " I never wished you any sort of harm ; but you wanted me to tame you ... "
instance(c,contrast-01)
instance(w,wish-01)
instance(i,i)
instance(h,harm-01)
instance(y,you)
instance(s,sort)
instance(a,any)
instance(e,ever)
instance(w2,want-01)
instance(t,tame-01)
ARG1(c,w)
ARG0(w,i)
ARG1(w,h)
ARG1(h,y)
mod(h,s)
mod(s,a)
ARG2(s,y)
time(y,e)
ARG2(y,w2)
ARG0(w2,y)
ARG1(y,t)
ARG0(t,i)
ARG1(i,y)

# ::snt " Yes , that is so , " said the fox .
instance(s,say-01)
instance(f,fox)
instance(s2,so)
instance(t,that)
ARG0(s,f)
ARG1(s,s2)
domain(s2,t)

# ::snt " But now you are going to cry ! " said the little prince .
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(c,contrast-01)
instance(c2,cry-02)
instance(y,you)
instance(n,now)
ARG0(s,p)
mod(p,l)
ARG1(p,c)
ARG2(c,c2)
ARG0(c2,y)
time(c2,n)

# ::snt " Yes , that is so , " said the fox .
instance(s,say-01)
instance(f,fox)
instance(s2,so)
instance(t,that)
ARG0(s,f)
ARG1(s,s2)
domain(s2,t)

# ::snt " Then it has done you no good at all ! "
instance(d,do-02)
instance(i,it)
instance(g,good-04)
instance(y,you)
instance(a,at-all)
ARG0(d,i)
ARG1(d,g)
ARG2(d,y)
mod(d,a)

# ::snt " It has done me good , " said the fox , " because of the color of the wheat fields . "
instance(s,say-01)
instance(f2,fox)
instance(d,do-02)
instance(i,it)
instance(g,good-04)
instance(c,cause-01)
instance(c2,color-01)
instance(f,field)
instance(w,wheat)
ARG0(s,f2)
ARG1(s,d)
ARG0(d,i)
ARG1(d,g)
ARG1(g,i)
ARG2(i,f2)
ARG2(i,f2)
ARG1-of(f2,c)
ARG0(c,c2)
ARG1(c2,f)
mod(f,w)

# ::snt And then he added : " Go and look again at the roses .
instance(a,and)
instance(a2,add-01)
instance(h,he)
instance(a3,and)
instance(g,go-02)
instance(y,you)
instance(imperative,imperative)
instance(l,look-01)
instance(r,rose)
instance(a4,again)
instance(t,then)
op1(a,a2)
ARG0(a2,h)
ARG1(a2,a3)
op1(a3,g)
ARG0(g,y)
mode(g,imperative)
op2(g,l)
ARG0(l,y)
ARG1(y,r)
mod(y,a4)
mode(y,imperative)
time(y,t)

# ::snt You will understand now that yours is unique in all the world .
instance(u,understand-01)
instance(y,you)
instance(u2,unique-01)
instance(r,rose)
instance(w,world)
instance(a,all)
instance(n,now)
ARG0(u,y)
ARG1(u,u2)
ARG1(u2,r)
poss(r,y)
ARG3(r,w)
extent(w,a)
time(w,n)

# ::snt Then come back to say goodbye to me , and I will make you a present of a secret . "
instance(a,and)
instance(c,come-01)
instance(y,you)
instance(b,back)
instance(t,then)
instance(s,say-01)
instance(g,goodbye)
instance(i,i)
instance(g2,give-01)
instance(p,present)
instance(r,reveal-01)
instance(s2,secret)
op1(a,c)
ARG1(c,y)
direction(c,b)
time(c,t)
purpose(c,s)
ARG0(s,y)
ARG1(y,g)
ARG2(y,i)
op2(y,g2)
ARG0(g2,i)
ARG1(i,p)
ARG2(i,y)
manner(y,r)
ARG0(r,i)
ARG1(i,s2)
ARG2(i,y)

# ::snt The little prince went away , to look again at the roses .
instance(g,go-02)
instance(p,prince)
instance(l,little)
instance(a,away)
instance(l2,look-01)
instance(r,rose)
instance(a2,again)
ARG0(g,p)
mod(p,l)
direction(p,a)
purpose(p,l2)
ARG0(l2,p)
ARG1(p,r)
mod(p,a2)

# ::snt " You are not at all like my rose , " he said .
instance(s,say-01)
instance(h,he)
instance(r,resemble-01)
instance(y,you)
instance(r2,rose)
instance(i,i)
instance(a,at-all)
ARG0(s,h)
ARG1(s,r)
ARG1(r,y)
ARG2(r,r2)
poss(r2,i)
degree(r2,a)

# ::snt " As yet you are nothing .
instance(n,nothing)
instance(y,you)
instance(a,as-yet)
domain(n,y)
time(n,a)

# ::snt No one has tamed you , and you have tamed no one .
instance(a,and)
instance(t,tame-01)
instance(n,no-one)
instance(y,you)
instance(t2,tame-01)
op1(a,t)
ARG0(t,n)
ARG1(t,y)
op2(t,t2)
ARG0(t2,y)
ARG1(y,n)

# ::snt You are like my fox when I first knew him .
instance(r,resemble-01)
instance(y,you)
instance(f,fox)
instance(i,i)
instance(k,know-02)
instance(o,ordinal-entity)
ARG1(r,y)
ARG2(r,f)
poss(f,i)
time(f,k)
ARG0(k,i)
ARG1(i,f)
ord(f,o)

# ::snt He was only a fox like a hundred thousand other foxes .
instance(f2,fox)
instance(h,he)
instance(r,resemble-01)
instance(f3,fox)
instance(o,other)
instance(o2,only)
domain(f2,h)
ARG1-of(f2,r)
ARG2(r,f3)
mod(f3,o)
mod(f3,o2)

# ::snt But I have made him my friend , and now he is unique in all the world . "
instance(c,contrast-01)
instance(m,make-01)
instance(i,i)
instance(h,have-rel-role-91)
instance(h2,he)
instance(f,friend)
instance(c2,cause-01)
instance(u,unique-01)
instance(w,world)
instance(a2,all)
instance(n,now)
ARG2(c,m)
ARG0(m,i)
ARG1(m,h)
ARG0(h,h2)
ARG1(h,i)
ARG2(i,f)
ARG0-of(i,c2)
ARG1(c2,u)
ARG1(u,h2)
ARG3(h2,w)
extent(w,a2)
time(w,n)

# ::snt And the roses were very much embarassed .
instance(a,and)
instance(e,embarrass-01)
instance(r,rose)
instance(m,much)
instance(v,very)
op1(a,e)
ARG1(e,r)
degree(e,m)
degree(m,v)

# ::snt " You are beautiful , but you are empty , " he went on .
instance(g,go-on-25)
instance(h,he)
instance(c,contrast-01)
instance(b,beautiful-02)
instance(y,you)
instance(e,empty-02)
ARG0(g,h)
ARG1(g,c)
ARG1(c,b)
ARG1(b,y)
ARG2(b,e)
ARG1(e,y)

# ::snt " One could not die for you .
instance(p,possible-01)
instance(d,die-01)
instance(o,one)
instance(y,you)
ARG1(p,d)
ARG1(d,o)
beneficiary(d,y)

# ::snt To be sure , an ordinary passerby would think that my rose looked just like you - - the rose that belongs to me .
instance(t,think-01)
instance(p2,person)
instance(p3,pass-by-17)
instance(o,ordinary)
instance(l,look-02)
instance(r,rose)
instance(i,i)
instance(b,belong-01)
instance(y,you)
instance(j,just)
instance(t2,to-be-sure)
ARG0(t,p2)
ARG0-of(p2,p3)
mod(p2,o)
ARG1(p2,l)
ARG0(l,r)
poss(r,i)
ARG0-of(r,b)
ARG1(b,i)
ARG1(b,y)
degree(b,j)
mod(b,t2)

# ::snt But in herself alone she is more important than all the hundreds of you other roses : because it is she that I have watered ; because it is she that I have put under the glass globe ; because it is she that I have sheltered behind the screen ; because it is for her that I have killed the caterpillars ( except the two or three that we saved to become butterflies ) ; because it is she that I have listened to , when she grumbled , or boasted , or ever sometimes when she said nothing .
instance(c4,contrast-01)
instance(h,have-degree-91)
instance(s,she)
instance(a,alone)
instance(i3,important-01)
instance(m,more)
instance(r,rose)
instance(a3,all)
instance(o,other)
instance(m2,multiple)
instance(c,cause-01)
instance(a2,and)
instance(w,water-01)
instance(i2,i)
instance(p,put-01)
instance(u,under)
instance(g,globe)
instance(g2,glass)
instance(s3,shelter-01)
instance(b2,behind)
instance(s4,screen)
instance(k,kill-01)
instance(c2,caterpillar)
instance(e2,except-01)
instance(c3,caterpillar)
instance(o2,or)
instance(s2,save-02)
instance(w2,we)
instance(b3,become-01)
instance(b4,butterfly)
instance(l,listen-01)
instance(o3,or)
instance(g3,grumble-01)
instance(b5,boast-01)
instance(s6,say-01)
instance(n,nothing)
instance(s7,sometimes)
instance(e,ever)
ARG2(c4,h)
ARG1(h,s)
mod(s,a)
ARG2(s,i3)
ARG1(i3,s)
ARG3(i3,m)
ARG4(i3,r)
mod(r,a3)
mod(r,o)
quant(r,m2)
ARG1-of(r,c)
ARG0(c,a2)
op1(a2,w)
ARG0(w,i2)
ARG1(w,s)
op2(w,p)
ARG0(p,i2)
ARG1(i2,s)
ARG2(s,u)
op1(u,g)
consist-of(g,g2)
op3(g,s3)
ARG0(s3,i2)
ARG1(i2,s)
ARG2(s,b2)
op1(b2,s4)
op4(b2,k)
ARG0(k,i2)
ARG1(i2,c2)
ARG2-of(c2,e2)
ARG1(e2,c3)
quant(c3,o2)
ARG1-of(c3,s2)
ARG0(s2,w2)
purpose(s2,b3)
ARG1(b3,c3)
ARG2(c3,b4)
beneficiary(c3,s)
op5(c3,l)
ARG0(l,i2)
ARG1(i2,s)
time(s,o3)
op1(o3,g3)
ARG0(g3,s)
op2(g3,b5)
ARG0(b5,s)
op3(b5,s6)
ARG0(s6,s)
ARG1(s,n)
frequency(s,s7)
time(s7,e)

# ::snt Because she is my rose .
instance(c,cause-01)
instance(r,rose)
instance(s,she)
instance(i,i)
ARG0(c,r)
domain(r,s)
poss(r,i)

# ::snt And he went back to meet the fox .
instance(a,and)
instance(g,go-02)
instance(h,he)
instance(b,back)
instance(m,meet-03)
instance(f,fox)
op1(a,g)
ARG0(g,h)
direction(g,b)
purpose(g,m)
ARG0(m,h)
ARG1(h,f)

# ::snt " Goodbye , " he said .
instance(s,say-01)
instance(h,he)
instance(g,goodbye)
ARG0(s,h)
ARG1(s,g)

# ::snt " Goodbye , " said the fox .
instance(s,say-01)
instance(f,fox)
instance(g,goodbye)
ARG0(s,f)
ARG1(s,g)

# ::snt " And now here is my secret , a very simple secret : It is only with the heart that one can see rightly ; what is essential is invisible to the eye . "
instance(a,and)
instance(s,secret)
instance(i,i)
instance(s2,simple-02)
instance(v,very)
instance(a2,and)
instance(p,possible-01)
instance(s3,see-01)
instance(o2,one)
instance(r,right-06)
instance(h2,heart)
instance(o,only)
instance(p2,possible-01)
instance(s4,see-01)
instance(t,thing)
instance(e,essential)
instance(e2,eye)
instance(n,now)
op1(a,s)
poss(s,i)
ARG1-of(s,s2)
degree(s2,v)
domain(s2,a2)
op1(a2,p)
ARG1(p,s3)
ARG0(s3,o2)
ARG2-of(s3,r)
instrument(s3,h2)
mod(s3,o)
op2(s3,p2)
ARG1(p2,s4)
ARG0(s4,o2)
ARG1(o2,t)
mod(t,e)
instrument(t,e2)
time(t,n)

# ::snt " What is essential is invisible to the eye , " the little prince repeated , so that he would be sure to remember .
instance(r,repeat-01)
instance(p,prince)
instance(l,little)
instance(p2,possible-01)
instance(s2,see-01)
instance(t,thing)
instance(e,essential)
instance(e2,eye)
instance(r2,remember-01)
instance(s,sure-02)
ARG0(r,p)
mod(p,l)
ARG1(p,p2)
ARG1(p2,s2)
ARG1(s2,t)
mod(t,e)
instrument(t,e2)
purpose(t,r2)
ARG0(r2,p)
ARG1(p,p2)
ARG1-of(p2,s)

# ::snt " It is the time you have wasted for your rose that makes your rose so important . "
instance(t,time)
instance(w,waste-01)
instance(y,you)
instance(r,rose)
instance(m,make-02)
instance(i,important-01)
instance(s,so)
ARG1-of(t,w)
ARG0(w,y)
beneficiary(w,r)
poss(r,y)
ARG0-of(r,m)
ARG1(m,i)
ARG1(i,r)
degree(r,s)

# ::snt " It is the time I have wasted for my rose - - " said the little prince , so that he would be sure to remember .
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(t,time)
instance(w,waste-01)
instance(r,rose)
instance(r2,remember-01)
instance(s2,sure-02)
ARG0(s,p)
mod(p,l)
ARG1(p,t)
ARG1-of(t,w)
ARG0(w,p)
beneficiary(w,r)
poss(r,p)
purpose(r,r2)
ARG0(r2,p)
ARG1-of(p,s2)

# ::snt " Men have forgotten this truth , " said the fox .
instance(s,say-01)
instance(f,fox)
instance(f2,forget-01)
instance(m,man)
instance(t,truth)
instance(t2,this)
ARG0(s,f)
ARG1(s,f2)
ARG0(f2,m)
ARG1(f2,t)
mod(t,t2)

# ::snt " But you must not forget it .
instance(c,contrast-01)
instance(o,obligate-01)
instance(y,you)
instance(f,forget-01)
instance(i,it)
ARG2(c,o)
ARG1(o,y)
ARG2(o,f)
ARG0(f,y)
ARG1(y,i)

# ::snt You become responsible , forever , for what you have tamed .
instance(b,become-01)
instance(y,you)
instance(r,responsible-03)
instance(t2,thing)
instance(t,tame-01)
instance(f,forever)
ARG1(b,y)
ARG2(b,r)
ARG0(r,y)
ARG1(y,t2)
ARG1-of(t2,t)
ARG0(t,y)
extent(t,f)

# ::snt You are responsible for your rose ... "
instance(r,responsible-03)
instance(y,you)
instance(r2,rose)
ARG0(r,y)
ARG1(r,r2)
poss(r2,y)

# ::snt " I am responsible for my rose , " the little prince repeated , so that he would be sure to remember .
instance(r,repeat-01)
instance(p,prince)
instance(l,little)
instance(r2,responsible-03)
instance(r3,rose)
instance(r4,remember-01)
instance(s,sure-02)
ARG0(r,p)
mod(p,l)
ARG1(p,r2)
ARG0(r2,p)
ARG1(p,r3)
poss(r3,p)
purpose(r3,r4)
ARG0(r4,p)
ARG1-of(p,s)

# ::snt Chapter 22 .
instance(c,chapter)

# ::snt " Good morning , " said the little prince .
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(m,morning)
instance(g,good-02)
ARG0(s,p)
mod(p,l)
ARG1(p,m)
ARG1-of(m,g)

# ::snt " Good morning , " said the railway switchman .
instance(s,say-01)
instance(s2,switchman)
instance(r,railway)
instance(m,morning)
instance(g,good-02)
ARG0(s,s2)
mod(s2,r)
ARG1(s2,m)
ARG1-of(m,g)

# ::snt " What do you do here ? " the little prince asked .
instance(a,ask-01)
instance(p,prince)
instance(l,little)
instance(d,do-02)
instance(y,you)
instance(a2,amr-unknown)
instance(h,here)
ARG0(a,p)
mod(p,l)
ARG1(p,d)
ARG0(d,y)
ARG1(d,a2)
location(d,h)

# ::snt " I sort out travelers , in bundles of a thousand , " said the switchman .
instance(s,say-01)
instance(s2,switchman)
instance(s3,sort-01)
instance(p,person)
instance(t,travel-01)
instance(b,bundle-01)
instance(p2,person)
instance(1000,1000)
ARG0(s,s2)
ARG1(s,s3)
ARG0(s3,s2)
ARG1(s2,p)
ARG0-of(p,t)
ARG2(p,b)
ARG0(b,s2)
ARG1(s2,p)
ARG2(p,p2)
quant(p2,1000)

# ::snt " I send off the trains that carry them ; now to the right , now to the left . "
instance(s,send-03)
instance(i,i)
instance(t,train)
instance(c,carry-01)
instance(t2,they)
instance(a,and)
instance(r,right-04)
instance(n,now)
instance(l,left-20)
instance(n2,now)
ARG0(s,i)
ARG1(s,t)
ARG0-of(t,c)
ARG1(c,t2)
ARG5(c,a)
op1(a,r)
time(r,n)
op2(r,l)
time(l,n2)

# ::snt And a brilliantly lighted express train shook the switchman 's cabin as it rushed by with a roar like thunder .
instance(a,and)
instance(s,shake-01)
instance(t,train)
instance(e,express-02)
instance(l,light-04)
instance(b,brilliant-02)
instance(c,cabin)
instance(s2,switchman)
instance(r,rush-01)
instance(b2,by)
instance(r2,roar-01)
instance(r3,resemble-01)
instance(t2,thunder)
op2(a,s)
ARG0(s,t)
mod(t,e)
ARG1-of(t,l)
manner(l,b)
ARG1(l,c)
poss(c,s2)
time(c,r)
ARG1(r,t)
direction(t,b2)
ARG0-of(t,r2)
ARG1-of(r2,r3)
ARG2(r3,t2)

# ::snt " They are in a great hurry , " said the little prince .
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(h,hurry-01)
instance(t,they)
instance(g,great)
ARG0(s,p)
mod(p,l)
ARG1(p,h)
ARG1(h,t)
degree(h,g)

# ::snt " What are they looking for ? "
instance(l,look-01)
instance(t,they)
instance(a,amr-unknown)
ARG0(l,t)
ARG1(l,a)

# ::snt " Not even the locomotive engineer knows that , " said the switchman .
instance(s,say-01)
instance(s2,switchman)
instance(k,know-01)
instance(p,person)
instance(e,engineer-01)
instance(l,locomotive)
instance(e2,even)
instance(t,that)
ARG0(s,s2)
ARG1(s,k)
ARG0(k,p)
ARG0-of(p,e)
ARG1(e,l)
mod(e,e2)
ARG1(e,t)

# ::snt And a second brilliantly lighted express thundered by , in the opposite direction .
instance(a,and)
instance(t,thunder-01)
instance(t2,train)
instance(e,express-02)
instance(l,light-04)
instance(b2,brilliant-02)
instance(o2,ordinal-entity)
instance(b,by)
instance(o,opposite-01)
instance(d,direction)
op2(a,t)
ARG0(t,t2)
mod(t2,e)
ARG1-of(t2,l)
manner(l,b2)
ord(l,o2)
direction(l,b)
direction(l,o)
ARG2(o,d)

# ::snt " Are they coming back already ? " demanded the little prince .
instance(d,demand-01)
instance(p,prince)
instance(l,little)
instance(c,come-01)
instance(t,they)
instance(b,back)
instance(a,already)
ARG0(d,p)
mod(p,l)
ARG1(p,c)
ARG1(c,t)
direction(c,b)
time(c,a)

# ::snt " These are not the same ones , " said the switchman .
instance(s,say-01)
instance(s2,switchman)
instance(o,one)
instance(s3,same-01)
instance(-,-)
instance(t,this)
ARG0(s,s2)
ARG1(s,o)
ARG1-of(o,s3)
polarity(s3,-)
domain(s3,t)

# ::snt " It is an exchange . "
instance(e,exchange-01)
instance(i,it)
domain(e,i)

# ::snt " Were they not satisfied where they were ? " asked the little prince .
instance(a,ask-01)
instance(p,prince)
instance(l,little)
instance(s,satisfy-01)
instance(t,they)
instance(a2,amr-unknown)
ARG0(a,p)
mod(p,l)
ARG1(p,s)
ARG1(s,t)
location-of(s,t)
polarity(s,a2)

# ::snt " No one is ever satisfied where he is , " said the switchman .
instance(s,say-01)
instance(s2,switchman)
instance(s3,satisfy-01)
instance(n,no-one)
instance(e,ever)
ARG0(s,s2)
ARG1(s,s3)
ARG1(s3,n)
time(s3,e)
location(s3,n)

# ::snt And they heard the roaring thunder of a third brilliantly lighted express .
instance(a,and)
instance(h,hear-01)
instance(t,they)
instance(t2,thunder-01)
instance(r,roar-01)
instance(t3,train)
instance(e,express-02)
instance(l,light-04)
instance(b,brilliant-02)
instance(o,ordinal-entity)
op2(a,h)
ARG0(h,t)
ARG1(h,t2)
ARG1-of(t2,r)
ARG2(t2,t3)
mod(t3,e)
ARG1-of(t3,l)
manner(l,b)
ord(l,o)

# ::snt " Are they pursuing the first travelers ? " demanded the little prince .
instance(d,demand-01)
instance(p,prince)
instance(l,little)
instance(p2,pursue-01)
instance(t,they)
instance(p3,person)
instance(t2,travel-01)
instance(o,ordinal-entity)
ARG0(d,p)
mod(p,l)
ARG1(p,p2)
ARG0(p2,t)
ARG1(p2,p3)
ARG0-of(p3,t2)
ord(t2,o)

# ::snt " They are pursuing nothing at all , " said the switchman .
instance(s,say-01)
instance(s2,switchman)
instance(p,pursue-01)
instance(t,they)
instance(n,nothing)
instance(a,at-all)
ARG0(s,s2)
ARG1(s,p)
ARG0(p,t)
ARG1(p,n)
extent(n,a)

# ::snt " They are asleep in there , or if they are not asleep they are yawning .
instance(o,or)
instance(s,sleep-01)
instance(t,they)
instance(t2,there)
instance(y,yawn-01)
instance(s2,sleep-01)
op1(o,s)
ARG0(s,t)
location(s,t2)
op2(s,y)
ARG0(y,t)
condition(t,s2)
ARG0(s2,t)

# ::snt Only the children are flattening their noses against the windowpanes . "
instance(f,flatten-01)
instance(c,child)
instance(o,only)
instance(n,nose)
instance(c2,cause-01)
instance(p,push-01)
instance(w,windowpane)
ARG0(f,c)
mod(c,o)
ARG1(c,n)
part-of(n,c)
ARG1-of(n,c2)
ARG0(c2,p)
ARG0(p,c)
ARG1(c,n)
ARG2(n,w)

# ::snt " Only the children know what they are looking for , " said the little prince .
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(k,know-01)
instance(c,child)
instance(o,only)
instance(t,thing)
instance(l2,look-01)
ARG0(s,p)
mod(p,l)
ARG1(p,k)
ARG0(k,c)
mod(c,o)
ARG1(c,t)
ARG1-of(t,l2)
ARG0(l2,c)

# ::snt " They waste their time over a rag doll and it becomes very important to them ; and if anybody takes it away from them , they cry ... "
instance(a,and)
instance(c3,cause-01)
instance(w,waste-01)
instance(t,they)
instance(t2,time)
instance(c,cause-01)
instance(d,doll)
instance(r,rag)
instance(b,become-01)
instance(i2,important-01)
instance(v,very)
instance(c2,cry-02)
instance(t3,take-away-05)
instance(a3,anybody)
op1(a,c3)
ARG0(c3,w)
ARG0(w,t)
ARG1(w,t2)
poss(t2,t)
ARG1-of(t2,c)
ARG0(c,d)
mod(d,r)
ARG1(d,b)
ARG1(b,d)
ARG2(d,i2)
ARG1(i2,d)
ARG2(d,t)
degree(t,v)
op2(t,c2)
ARG0(c2,t)
condition(t,t3)
ARG0(t3,a3)
ARG1(t3,d)
source(d,t)

# ::snt " They are lucky , " the switchman said .
instance(s,say-01)
instance(s2,switchman)
instance(l,lucky)
instance(t,they)
ARG0(s,s2)
ARG1(s,l)
domain(l,t)

# ::snt Chapter 23 .
instance(c,chapter)

# ::snt " Good morning , " said the little prince .
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(m,morning)
instance(g,good-02)
ARG0(s,p)
mod(p,l)
ARG1(p,m)
ARG1-of(m,g)

# ::snt " Good morning , " said the merchant .
instance(s,say-01)
instance(p,person)
instance(m,merchandise-01)
instance(m2,morning)
instance(g,good-02)
ARG0(s,p)
ARG0-of(p,m)
ARG1(p,m2)
ARG1-of(m2,g)

# ::snt This was a merchant who sold pills that had been invented to quench thirst .
instance(s,sell-01)
instance(p,person)
instance(m,merchandise-01)
instance(t2,this)
instance(p2,pill)
instance(i,invent-01)
instance(q,quench-01)
instance(t,thirst-01)
ARG0(s,p)
ARG0-of(p,m)
domain(p,t2)
ARG1(p,p2)
ARG1-of(p2,i)
purpose(p2,q)
ARG0(q,p2)
ARG1(p2,t)

# ::snt You need only swallow one pill a week , and you would feel no need of anything to drink .
instance(c,cause-01)
instance(n,need-01)
instance(y,you)
instance(s,swallow-01)
instance(r,rate-entity-91)
instance(p,pill)
instance(t,temporal-quantity)
instance(w,week)
instance(o,only)
instance(f,feel-01)
instance(n2,need-01)
instance(d,drink-01)
instance(a2,anything)
ARG0(c,n)
ARG0(n,y)
ARG1(n,s)
ARG1(s,r)
ARG1(r,p)
ARG3(r,t)
unit(t,w)
mod(t,o)
ARG1(t,f)
ARG0(f,y)
ARG1(y,n2)
ARG0(n2,y)
ARG1(y,d)
ARG0(d,y)
ARG1(y,a2)

# ::snt " Why are you selling those ? " asked the little prince .
instance(a,ask-01)
instance(p,prince)
instance(l,little)
instance(s,sell-01)
instance(y,you)
instance(t,that)
instance(c,cause-01)
instance(a2,amr-unknown)
ARG0(a,p)
mod(p,l)
ARG1(p,s)
ARG0(s,y)
ARG1(s,t)
ARG1-of(s,c)
ARG0(c,a2)

# ::snt " Because they save a tremendous amount of time , " said the merchant .
instance(s,say-01)
instance(p,person)
instance(m,merchandise-01)
instance(c,cause-01)
instance(t,they)
instance(s2,save-01)
instance(t2,time)
instance(a,amount-01)
instance(t3,tremendous)
ARG0(s,p)
ARG0-of(p,m)
ARG1(p,c)
ARG0(c,t)
ARG1(c,s2)
ARG0(s2,t)
ARG1(t,t2)
ARG1-of(t2,a)
ARG2(a,t3)

# ::snt " Computations have been made by experts .
instance(m,make-01)
instance(p,person)
instance(e,expert-01)
instance(t,thing)
instance(c,compute-01)
ARG0(m,p)
ARG1-of(p,e)
ARG1(p,t)
ARG1-of(t,c)

# ::snt With these pills , you save fifty - three minutes in every week . "
instance(s,save-03)
instance(y,you)
instance(r,rate-entity-91)
instance(t,temporal-quantity)
instance(m,minute)
instance(t3,temporal-quantity)
instance(w,week)
instance(p,pill)
instance(t2,this)
ARG0(s,y)
ARG1(s,r)
ARG1(r,t)
unit(t,m)
ARG2(t,t3)
unit(t3,w)
instrument(t3,p)
mod(p,t2)

# ::snt " And what do I do with those fifty - three minutes ? "
instance(a,and)
instance(d,do-02)
instance(i,i)
instance(a2,amr-unknown)
instance(t,temporal-quantity)
instance(m,minute)
instance(t2,that)
op1(a,d)
ARG0(d,i)
ARG1(d,a2)
ARG2(d,t)
unit(t,m)
mod(t,t2)

# ::snt " Anything you like ... "
instance(d,do-02)
instance(y2,you)
instance(a2,anything)
instance(l,like-02)
ARG0(d,y2)
ARG1(d,a2)
ARG1-of(a2,l)
ARG0(l,y2)

# ::snt " As for me , " said the little prince to himself , " if I had fifty - three minutes to spend as I liked , I should walk at my leisure toward a spring of fresh water . "
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(w,walk-01)
instance(i,i)
instance(t,toward)
instance(s2,spring)
instance(w2,water)
instance(f,fresh-04)
instance(l2,leisure)
instance(h,have-03)
instance(t2,temporal-quantity)
instance(m,minute)
instance(s3,spend-02)
instance(l3,like-02)
ARG0(s,p)
mod(p,l)
ARG1(p,w)
ARG0(w,i)
direction(w,t)
destination(t,s2)
source-of(s2,w2)
ARG1-of(w2,f)
manner(w2,l2)
poss(l2,p)
condition(l2,h)
ARG0(h,p)
ARG1(p,t2)
unit(t2,m)
ARG1-of(t2,s3)
ARG2(s3,l3)
ARG0(l3,p)
ARG2(l3,p)

# ::snt Chapter 24 .
instance(c,chapter)
instance(24,24)
mod(c,24)

# ::snt It was now the eighth day since I had had my accident in the desert , and I had listened to the story of the merchant as I was drinking the last drop of my water supply .
instance(a,and)
instance(p,pass-03)
instance(t2,temporal-quantity)
instance(d,day)
instance(s,since)
instance(a2,accident)
instance(i,i)
instance(d2,desert)
instance(l,listen-01)
instance(s2,story)
instance(p2,person)
instance(m2,merchandise-01)
instance(d3,drink-01)
instance(d4,drop)
instance(w,water)
instance(s3,supply-01)
instance(o,ordinal-entity)
op1(a,p)
ARG1(p,t2)
unit(t2,d)
time(t2,s)
op1(s,a2)
poss(a2,i)
location(a2,d2)
op2(a2,l)
ARG0(l,i)
ARG1(i,s2)
poss(s2,p2)
ARG0-of(p2,m2)
time(p2,d3)
ARG0(d3,i)
ARG1(i,d4)
part-of(d4,w)
ARG1-of(w,s3)
ARG2(s3,i)
ord(s3,o)

# ::snt " Ah , "
instance(a,ah)

# ::snt I said to the little prince , " these memories of yours are very charming ; but I have not yet succeeded in repairing my plane ; I have nothing more to drink ; and I , too , should be very happy if I could walk at my leisure toward a spring of fresh water ! "
instance(s,say-01)
instance(i,i)
instance(a,and)
instance(c2,charm-01)
instance(m,memory)
instance(y,you)
instance(t,this)
instance(a2,and)
instance(s2,succeed-01)
instance(r,repair-01)
instance(p2,plane)
instance(y2,yet)
instance(h,have-03)
instance(n,nothing)
instance(d,drink-01)
instance(h2,happy-01)
instance(v2,very)
instance(p3,possible-01)
instance(w,walk-01)
instance(s3,spring)
instance(w2,water)
instance(f,fresh-04)
instance(a3,at)
instance(l2,leisure)
instance(v,very)
instance(p,prince)
instance(l,little)
ARG0(s,i)
ARG1(s,a)
op1(a,c2)
ARG0(c2,m)
poss(m,y)
mod(m,t)
concession-of(m,a2)
op1(a2,s2)
ARG0(s2,i)
ARG1(i,r)
ARG0(r,i)
ARG1(i,p2)
poss(p2,i)
time(p2,y2)
op2(p2,h)
ARG0(h,i)
ARG1(i,n)
purpose(n,d)
ARG0(d,i)
op3(d,h2)
ARG1(h2,i)
degree(i,v2)
condition(i,p3)
ARG1(p3,w)
ARG0(w,i)
direction(i,s3)
source-of(s3,w2)
ARG1-of(w2,f)
manner(w2,a3)
op1(a3,l2)
poss(l2,i)
degree(l2,v)
ARG2(l2,p)
mod(p,l)

# ::snt " My friend the fox - - " the little prince said to me .
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(f,fox)
instance(h,have-rel-role-91)
instance(i,i)
instance(f2,friend)
instance(i,i)
ARG0(s,p)
mod(p,l)
ARG1(p,f)
ARG0-of(f,h)
ARG1(h,i)
ARG2(i,f2)
ARG2(i,i)

# ::snt " My dear little man , this is no longer a matter that has anything to do with the fox ! "
instance(s,say-01)
instance(i,i)
instance(c,concern-02)
instance(m2,matter)
instance(t,this)
instance(f,fox)
instance(n,no-longer)
instance(m,man)
instance(l,little)
instance(d,dear)
ARG0(s,i)
ARG1(s,c)
ARG0(c,m2)
domain(m2,t)
ARG1(m2,f)
time(m2,n)
ARG2(m2,m)
mod(m,l)
poss(m,i)
mod(i,d)

# ::snt " Why not ? "
instance(c2,concern-02)
instance(-,-)
instance(c3,cause-01)
instance(a,amr-unknown)
polarity(c2,-)
ARG1-of(-,c3)
ARG0(c3,a)

# ::snt " Because I am about to die of thirst ... "
instance(c,cause-01)
instance(d,die-01)
instance(i,i)
instance(c2,cause-01)
instance(t,thirst-01)
instance(a,about-to)
ARG0(c,d)
ARG1(d,i)
ARG1-of(d,c2)
ARG0(c2,t)
ARG0(t,i)
time(t,a)

# ::snt He did not follow my reasoning , and he answered me : " It is a good thing to have had a friend , even if one is about to die .
instance(a,and)
instance(f,follow-02)
instance(h,he)
instance(r,reason-01)
instance(i,i)
instance(a2,answer-01)
instance(g,good-02)
instance(h2,have-rel-role-91)
instance(o,o)
instance(f2,friend)
instance(e,even-if)
instance(d,die-01)
instance(o,one)
instance(a3,about-to)
op1(a,f)
ARG0(f,h)
ARG1(f,r)
ARG0(r,i)
op2(r,a2)
ARG0(a2,h)
ARG1(h,i)
ARG2(i,g)
ARG1(g,h2)
ARG1(h2,o)
ARG2(o,f2)
concession(o,e)
op1(e,d)
ARG1(d,o)
time(d,a3)

# ::snt I , for instance , am very glad to have had a fox as a friend ... "
instance(g,glad-02)
instance(h,have-rel-role-91)
instance(f2,fox)
instance(i,i)
instance(f,friend)
instance(i,i)
instance(e,exemplify-01)
instance(v,very)
ARG0(g,h)
ARG0(h,f2)
ARG1(h,i)
ARG2(i,f)
ARG1(i,i)
ARG0-of(i,e)
degree(i,v)

# ::snt " He has no way of guessing the danger , "
instance(p,possible-01)
instance(g,guess-01)
instance(h,he)
instance(d,danger)
instance(-,-)
ARG1(p,g)
ARG0(g,h)
ARG1(g,d)
polarity(g,-)

# ::snt I said to myself .
instance(s,say-01)
instance(i,i)
ARG0(s,i)
ARG2(s,i)

# ::snt " He has never been either hungry or thirsty .
instance(a,and)
instance(h,hunger-01)
instance(h2,he)
instance(-,-)
instance(t,thirst-01)
instance(e,ever)
op1(a,h)
ARG0(h,h2)
polarity(h,-)
op2(h,t)
ARG0(t,h2)
polarity(h2,-)
time(h2,e)

# ::snt A little sunshine is all he needs ... "
instance(n,need-01)
instance(h,he)
instance(s,sunshine)
instance(l,little)
instance(a,all)
ARG0(n,h)
ARG1(n,s)
quant(s,l)
mod(s,a)

# ::snt But he looked at me steadily , and replied to my thought : " I am thirsty , too .
instance(c,contrast-01)
instance(a2,and)
instance(l,look-01)
instance(h,he)
instance(i,i)
instance(s,steady)
instance(r,reply-01)
instance(t,thing)
instance(t2,think-01)
instance(t3,thirst-01)
instance(t4,too)
ARG2(c,a2)
op1(a2,l)
ARG0(l,h)
ARG1(l,i)
manner(l,s)
op2(l,r)
ARG0(r,h)
ARG1(h,t)
ARG1-of(t,t2)
ARG0(t2,i)
ARG2(t2,t3)
ARG0(t3,h)
mod(h,t4)

# ::snt Let us look for a well ... "
instance(l,look-01)
instance(w,we)
instance(w2,well)
instance(imperative,imperative)
ARG0(l,w)
ARG1(l,w2)
mode(l,imperative)

# ::snt I made a gesture of weariness .
instance(g2,gesture-01)
instance(i,i)
instance(w,weary-01)
ARG0(g2,i)
ARG1(g2,w)
ARG1(w,i)

# ::snt It is absurd to look for a well , at random , in the immensity of the desert .
instance(a,absurd)
instance(l,look-01)
instance(w,well)
instance(d,desert)
instance(i,immense)
instance(r,random)
domain(a,l)
ARG1(l,w)
location(l,d)
mod(d,i)
manner(d,r)

# ::snt But nevertheless we started walking .
instance(h,have-concession-91)
instance(s,start-01)
instance(w,we)
instance(w2,walk-01)
ARG1(h,s)
ARG0(s,w)
ARG1(s,w2)

# ::snt When we had trudged along for several hours , in silence , the darkness fell , and the stars began to come out .
instance(a,and)
instance(f,fall-04)
instance(d,darkness)
instance(b,begin-01)
instance(s,star)
instance(c,come-out-09)
instance(t,trudge-01)
instance(w,we)
instance(s2,several)
instance(t2,temporal-quantity)
instance(h,hour)
instance(s3,silent)
op1(a,f)
ARG1(f,d)
op2(f,b)
ARG0(b,s)
ARG1(b,c)
ARG1(c,s)
time(c,t)
ARG0(t,w)
duration(t,s2)
op1(s2,t2)
unit(t2,h)
manner(t2,s3)

# ::snt Thirst had made me a little feverish , and I looked at them as if I were in a dream .
instance(a,and)
instance(m,make-02)
instance(t,thirst-01)
instance(i,i)
instance(f,feverish)
instance(l,little)
instance(l2,look-01)
instance(t2,they)
instance(r,resemble-01)
instance(d,dream-01)
op1(a,m)
ARG0(m,t)
ARG0(t,i)
ARG1(t,f)
domain(f,i)
degree(i,l)
op2(i,l2)
ARG0(l2,i)
ARG1(i,t2)
ARG1-of(i,r)
ARG2(r,d)
ARG0(d,i)

# ::snt The little prince 's last words came reeling back into my memory : " Then you are thirsty , too ? "
instance(c,come-01)
instance(w,word-01)
instance(p,prince)
instance(l2,little)
instance(t3,truth-value)
instance(t,thirst-01)
instance(y,you)
instance(t2,too)
instance(l,last)
instance(m,memory)
instance(i,i)
instance(r,reel-03)
ARG1(c,w)
ARG0(w,p)
mod(p,l2)
ARG1(p,t3)
polarity-of(t3,t)
ARG0(t,y)
mod(y,t2)
mod(y,l)
ARG4(y,m)
poss(m,i)
manner(m,r)
ARG1(r,w)
ARG2(w,m)

# ::snt I demanded .
instance(d,demand-01)
instance(i,i)
ARG0(d,i)

# ::snt But he did not reply to my question .
instance(c,contrast-01)
instance(r,reply-01)
instance(h,he)
instance(q,question-01)
instance(i,i)
instance(-,-)
ARG2(c,r)
ARG0(r,h)
ARG1(r,q)
ARG0(q,i)
polarity(q,-)

# ::snt He merely said to me : " Water may also be good for the heart ... "
instance(s,say-01)
instance(h,he)
instance(p,possible-01)
instance(g,good-04)
instance(w,water)
instance(h2,heart)
instance(a,also)
instance(i,i)
instance(m,mere)
ARG0(s,h)
ARG1(s,p)
ARG1(p,g)
ARG1(g,w)
ARG2(g,h2)
mod(g,a)
ARG2(g,i)
mod(g,m)

# ::snt I did not understand this answer , but I said nothing .
instance(u2,understand-01)
instance(i,i)
instance(a,answer)
instance(t,this)
instance(-,-)
instance(s,say-01)
instance(n,nothing)
ARG0(u2,i)
ARG1(u2,a)
mod(a,t)
polarity(a,-)
concession-of(-,s)
ARG0(s,i)
ARG1(i,n)

# ::snt I knew very well that it was impossible to cross - examine him .
instance(k,know-01)
instance(i,i)
instance(p,possible-01)
instance(c,crossexamine-01)
instance(h,he)
instance(w,well)
instance(v,very)
ARG0(k,i)
ARG1(k,p)
ARG1(p,c)
ARG0(c,i)
ARG1(i,h)
degree(i,w)
degree(w,v)

# ::snt He was tired .
instance(t,tire-01)
instance(h,he)
ARG1(t,h)

# ::snt He sat down .
instance(s,sit-down-02)
instance(h,he)
ARG1(s,h)

# ::snt I sat down beside him .
instance(s,sit-down-02)
instance(i,i)
instance(b,beside)
instance(h,he)
ARG1(s,i)
location(s,b)
op1(b,h)

# ::snt And , after a little silence , he spoke again : " The stars are beautiful , because of a flower that can not be seen . "
instance(a,and)
instance(s,speak-01)
instance(h,he)
instance(b,beautiful-02)
instance(s5,star)
instance(c,cause-01)
instance(f,flower)
instance(s6,see-01)
instance(p,possible-01)
instance(a2,after)
instance(s2,silent)
instance(l,little)
instance(a3,again)
op2(a,s)
ARG0(s,h)
ARG1(s,b)
ARG1(b,s5)
ARG1-of(b,c)
ARG0(c,f)
ARG1-of(f,s6)
ARG1-of(s6,p)
time(s6,a2)
op1(a2,s2)
duration(s2,l)
mod(s2,a3)

# ::snt I replied , " Yes , that is so . "
instance(r,reply-01)
instance(i,i)
instance(s,so)
instance(t,that)
ARG0(r,i)
ARG2(r,s)
domain(s,t)

# ::snt And , without saying anything more , I looked across the ridges of sand that were stretched out before us in the moonlight .
instance(a,and)
instance(l,look-01)
instance(i,i)
instance(a3,across)
instance(r,ridge)
instance(s,sand)
instance(s2,stretch-out-02)
instance(b,before)
instance(w,we)
instance(l2,light-04)
instance(m,moon)
instance(s3,say-01)
instance(a2,anything)
instance(m2,more)
op2(a,l)
ARG0(l,i)
ARG1(l,a3)
op1(a3,r)
consist-of(r,s)
ARG1-of(r,s2)
location(s2,b)
op1(b,w)
ARG1-of(b,l2)
ARG0(l2,m)
manner(l2,s3)
ARG0(s3,i)
ARG1(i,a2)
mod(a2,m2)

# ::snt " The desert is beautiful , " the little prince added .
instance(a,add-01)
instance(p,prince)
instance(l,little)
instance(b,beautiful-02)
instance(d,desert)
ARG0(a,p)
mod(p,l)
ARG1(p,b)
ARG1(b,d)

# ::snt And that was true .
instance(a,and)
instance(t,true-01)
instance(t2,that)
op2(a,t)
ARG1(t,t2)

# ::snt I have always loved the desert .
instance(l,love-01)
instance(i,i)
instance(d,desert)
instance(a,always)
ARG0(l,i)
ARG1(l,d)
time(l,a)

# ::snt One sits down on a desert sand dune , sees nothing , hears nothing .
instance(a,and)
instance(s,sit-down-02)
instance(o,one)
instance(d,dune)
instance(s2,sand)
instance(d2,desert)
instance(s3,see-01)
instance(n,nothing)
instance(h,hear-01)
instance(n2,nothing)
op1(a,s)
ARG1(s,o)
location(s,d)
consist-of(d,s2)
location(d,d2)
op2(d,s3)
ARG0(s3,o)
ARG1(o,n)
op3(o,h)
ARG0(h,o)
ARG1(o,n2)

# ::snt Yet through the silence something throbs , and gleams ...
instance(a2,and)
instance(t,throb-01)
instance(s,something)
instance(g,gleam-01)
instance(s2,silent)
op1(a2,t)
ARG1(t,s)
op2(t,g)
ARG0(g,s)
concession(g,s2)

# ::snt " What makes the desert beautiful , " said the little prince , " is that somewhere it hides a well ... "
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(m,make-02)
instance(h,hide-01)
instance(d,d)
instance(w,well)
instance(s2,somewhere)
instance(b,beautiful-02)
instance(d,desert)
ARG0(s,p)
mod(p,l)
ARG1(p,m)
ARG0(m,h)
ARG0(h,d)
ARG1(d,w)
location(d,s2)
ARG1(d,b)
ARG1(b,d)

# ::snt I was astonished by a sudden understanding of that mysterious radiation of the sands .
instance(a,astonish-01)
instance(u,understand-01)
instance(i,i)
instance(r,radiate-01)
instance(s2,sand)
instance(m,mystery)
instance(t,that)
instance(s,sudden)
instance(i,i)
ARG0(a,u)
ARG0(u,i)
ARG1(i,r)
ARG0(r,s2)
mod(r,m)
mod(r,t)
manner(r,s)
ARG1(r,i)

# ::snt When I was a little boy I lived in an old house , and legend told us that a treasure was buried there .
instance(a,and)
instance(l,live-01)
instance(i,i)
instance(h,house)
instance(o,old)
instance(b,boy)
instance(l2,little)
instance(t,tell-01)
instance(l3,legend)
instance(b2,bury-01)
instance(t2,treasure)
instance(w,we)
op1(a,l)
ARG0(l,i)
location(l,h)
mod(h,o)
time(h,b)
mod(b,l2)
domain(b,i)
op2(b,t)
ARG0(t,l3)
ARG1(t,b2)
ARG1(b2,t2)
location(b2,h)
ARG2(b2,w)

# ::snt To be sure , no one had ever known how to find it ; perhaps no one had ever even looked for it .
instance(a,and)
instance(s,sure-02)
instance(n,no-one)
instance(t,thing)
instance(f,find-01)
instance(i,it)
instance(e2,ever)
instance(t2,to-be-sure)
instance(p2,possible-01)
instance(l,look-01)
op1(a,s)
ARG0(s,n)
ARG1(s,t)
manner-of(t,f)
ARG0(f,n)
ARG1(n,i)
time(n,e2)
mod(n,t2)
op2(n,p2)
ARG1(p2,l)
ARG0(l,n)
ARG1(n,i)
time(i,e2)

# ::snt But it cast an enchantment over that house .
instance(c,contrast-01)
instance(c2,cast-01)
instance(i,it)
instance(e,enchant-01)
instance(h,house)
instance(t,that)
ARG2(c,c2)
ARG0(c2,i)
ARG1(c2,e)
ARG2(c2,h)
mod(h,t)

# ::snt My home was hiding a secret in the depths of its heart ...
instance(h,hide-01)
instance(h2,home)
instance(i,i)
instance(s,secret)
instance(d,deep-02)
instance(h3,heart)
ARG0(h,h2)
poss(h2,i)
ARG1(h2,s)
location(h2,d)
ARG1(d,h3)
part-of(h3,h2)

# ::snt " Yes , "
instance(y,yes)

# ::snt I said to the little prince .
instance(s,say-01)
instance(i,i)
instance(p,prince)
instance(l,little)
ARG0(s,i)
ARG2(s,p)
mod(p,l)

# ::snt " The house , the stars , the desert - - what gives them their beauty is something that is invisible ! "
instance(g2,give-01)
instance(s3,something)
instance(s4,see-01)
instance(p,possible-01)
instance(b,beautiful-02)
instance(a,a)
instance(a,and)
instance(h,house)
instance(s2,star)
instance(d,desert)
ARG0(g2,s3)
ARG1-of(s3,s4)
ARG1-of(s4,p)
ARG1(s4,b)
ARG1(b,a)
ARG2(b,a)
op1(a,h)
op2(a,s2)
op3(a,d)

# ::snt " I am glad , " he said , " that you agree with my fox . "
instance(s,say-01)
instance(h,he)
instance(g,glad-02)
instance(a,agree-01)
instance(y,you)
instance(f,fox)
ARG0(s,h)
ARG1(s,g)
ARG0(g,a)
ARG0(a,y)
ARG2(a,f)
poss(f,h)
ARG1(f,h)

# ::snt As the little prince dropped off to sleep , I took him in my arms and set out walking once more .
instance(a2,and)
instance(t,take-01)
instance(i,i)
instance(p,prince)
instance(l,little)
instance(a,arm)
instance(s,set-out-07)
instance(w,walk-01)
instance(a3,again)
instance(o,once)
instance(d,drop-off-03)
instance(s2,sleep-01)
op1(a2,t)
ARG0(t,i)
ARG1(t,p)
mod(p,l)
ARG3(p,a)
part-of(a,i)
op2(a,s)
ARG0(s,i)
manner(i,w)
mod(i,a3)
mod(a3,o)
time(a3,d)
ARG0(d,p)
ARG2(p,s2)
ARG0(s2,p)

# ::snt I felt deeply moved , and stirred .
instance(f,feel-01)
instance(i,i)
instance(a,and)
instance(m,move-05)
instance(d,deep-02)
instance(s,stir-02)
ARG0(f,i)
ARG1(f,a)
op1(a,m)
ARG1(m,i)
ARG1-of(i,d)
op2(i,s)
ARG1(s,i)

# ::snt It seemed to me that I was carrying a very fragile treasure .
instance(s,seem-01)
instance(c,carry-01)
instance(i,i)
instance(t,treasure)
instance(f,fragile)
instance(v,very)
instance(i,i)
ARG1(s,c)
ARG0(c,i)
ARG1(i,t)
mod(t,f)
degree(f,v)
ARG2(f,i)

# ::snt It seemed to me , even , that there was nothing more fragile on all Earth .
instance(s,seem-01)
instance(t,thing)
instance(p,planet)
instance(a,all)
instance(h,have-degree-91)
instance(f,fragile)
instance(m,more)
instance(i,i)
instance(e,even)
ARG1(s,t)
location(t,p)
mod(t,a)
ARG1-of(t,h)
ARG2(h,f)
ARG3(h,m)
ARG2(h,i)
mod(h,e)

# ::snt In the moonlight I looked at his pale forehead , his closed eyes , his locks of hair that trembled in the wind , and I said to myself : " What I see here is nothing but a shell .
instance(a,and)
instance(l,look-01)
instance(i,i)
instance(a2,and)
instance(f,forehead)
instance(h,he)
instance(p,pale-03)
instance(e,eye)
instance(c,close-01)
instance(l2,lock)
instance(h2,hair)
instance(t,tremble-01)
instance(c2,cause-01)
instance(w,wind)
instance(l3,light-04)
instance(m2,moon)
instance(s,say-01)
instance(s2,see-01)
instance(s3,shell)
instance(n,nothing-but)
instance(h3,here)
op1(a,l)
ARG0(l,i)
ARG1(l,a2)
op1(a2,f)
part-of(f,h)
ARG1-of(f,p)
op2(f,e)
ARG1-of(e,c)
part-of(e,h)
op3(e,l2)
consist-of(l2,h2)
ARG1-of(l2,t)
ARG1-of(t,c2)
ARG0(c2,w)
part-of(c2,h)
ARG1-of(c2,l3)
ARG0(l3,m2)
op2(l3,s)
ARG0(s,i)
ARG1(i,s2)
ARG0(s2,i)
ARG1(i,s3)
mod(i,n)
location(i,h3)
ARG2(i,i)

# ::snt What is most important is invisible ... "
instance(s,see-01)
instance(t,thing)
instance(h,have-degree-91)
instance(i2,important-01)
instance(m,most)
instance(p,possible-01)
ARG1(s,t)
ARG1-of(t,h)
ARG2(h,i2)
ARG1(i2,t)
ARG3(i2,m)
ARG1-of(i2,p)

# ::snt As his lips opened slightly with the suspicious of a half - smile , I said to myself , again : " What moves me so deeply , about this little prince who is sleeping here , is his loyalty to a flower - - the image of a rose that shines through his whole being like the flame of a lamp , even when he is asleep ... "
instance(s,say-01)
instance(i,i)
instance(m,move-05)
instance(p,prince)
instance(l,little)
instance(s2,sleep-01)
instance(h,here)
instance(l2,loyal-01)
instance(f,flower)
instance(i2,image)
instance(r,rose)
instance(s3,shine-01)
instance(t,through)
instance(b,being)
instance(w,whole)
instance(r2,resemble-01)
instance(f2,flame-01)
instance(l3,lamp)
instance(e,even-when)
instance(s6,sleep-01)
instance(d,deep-02)
instance(o,open-01)
instance(l4,lip)
instance(s4,slight)
instance(s8,smile-01)
instance(h3,half)
instance(s5,suspicion)
instance(a2,again)
ARG0(s,i)
ARG1(s,m)
ARG0(m,p)
mod(p,l)
ARG0-of(p,s2)
location(s2,h)
ARG1(s2,i)
ARG2(i,l2)
ARG1(l2,p)
ARG2(p,f)
op1(f,i2)
poss(i2,r)
ARG1-of(r,s3)
ARG2(s3,t)
op1(t,b)
poss(b,p)
mod(p,w)
ARG1-of(p,r2)
ARG2(r2,f2)
ARG1(f2,l3)
concession(f2,e)
op1(e,s6)
ARG0(s6,p)
ARG1-of(s6,d)
ARG2(s6,i)
time(i,o)
ARG1(o,l4)
part-of(l4,p)
degree(l4,s4)
manner(l4,s8)
mod(s8,h3)
degree(s8,s5)
mod(s8,a2)

# ::snt And I felt him to be more fragile still .
instance(a,and)
instance(f,feel-02)
instance(i,i)
instance(h2,have-degree-91)
instance(h,he)
instance(f2,fragile)
instance(m,more)
instance(s,still)
op2(a,f)
ARG0(f,i)
ARG1(f,h2)
ARG1(h2,h)
ARG2(h2,f2)
ARG3(h2,m)
mod(h2,s)

# ::snt I felt the need of protecting him , as if he himself were a flame that might be extinguished by a little puff of wind ...
instance(f,feel-01)
instance(i,i)
instance(n,need-01)
instance(p,protect-01)
instance(h,he)
instance(f2,flame-01)
instance(e,extinguish-01)
instance(p3,puff-up-04)
instance(w,wind)
instance(l,little)
instance(p2,possible-01)
ARG0(f,i)
ARG1(f,n)
ARG0(n,i)
ARG1(i,p)
ARG0(p,i)
ARG1(i,h)
conj-as-if(i,f2)
ARG1(f2,h)
ARG1-of(h,e)
ARG0(e,p3)
ARG1(p3,w)
mod(p3,l)
ARG1-of(p3,p2)

# ::snt And , as I walked on so , I found the well , at daybreak .
instance(a,and)
instance(f,find-01)
instance(i,i)
instance(w,well)
instance(d,daybreak)
instance(w2,walk-01)
instance(o,on)
instance(s,so)
op2(a,f)
ARG0(f,i)
ARG1(f,w)
time(f,d)
time(f,w2)
ARG0(w2,i)
mod(i,o)
manner(i,s)

# ::snt Chapter 25 .
instance(c,chapter)
instance(25,25)
mod(c,25)

# ::snt " Men , " said the little prince , " set out on their way in express trains , but they do not know what they are looking for .
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(h,have-concession-91)
instance(k,know-01)
instance(m,m)
instance(t2,thing)
instance(l2,look-01)
instance(s2,set-out-07)
instance(m,man)
instance(w,way)
instance(t,train)
instance(e,express)
ARG0(s,p)
mod(p,l)
ARG1(p,h)
ARG1(h,k)
ARG0(k,m)
ARG1(m,t2)
ARG1-of(t2,l2)
ARG0(l2,m)
ARG2(l2,s2)
ARG0(s2,m)
path(s2,w)
poss(w,m)
manner(w,t)
mod(t,e)

# ::snt Then they rush about , and get excited , and turn round and round ... "
instance(a,and)
instance(r,rush-01)
instance(t,they)
instance(a2,about)
instance(e,excite-01)
instance(t2,turn-01)
instance(a3,and)
instance(r2,round)
instance(r3,round)
instance(t3,then)
op1(a,r)
ARG1(r,t)
ARG2(r,a2)
op2(r,e)
ARG1(e,t)
op3(e,t2)
ARG1(t2,t)
direction(t,a3)
op1(a3,r2)
op2(a3,r3)
time(a3,t3)

# ::snt And he added : " It is not worth the trouble ... "
instance(a,and)
instance(a2,add-01)
instance(h,he)
instance(w,worth-02)
instance(i,it)
instance(t,trouble-05)
op2(a,a2)
ARG0(a2,h)
ARG1(a2,w)
ARG1(w,i)
ARG2(w,t)
ARG2(t,i)

# ::snt The well that we had come to was not like the wells of the Sahara .
instance(w,well)
instance(c,come-01)
instance(w2,we)
instance(r,resemble-01)
instance(w3,well)
instance(d,desert)
instance(n,name)
ARG4-of(w,c)
ARG1(c,w2)
ARG1-of(c,r)
ARG2(r,w3)
location(w3,d)
name(d,n)

# ::snt The wells of the Sahara are mere holes dug in the sand .
instance(h,hole)
instance(d,dig-01)
instance(s,sand)
instance(m,mere)
instance(w,well)
instance(d2,desert)
ARG1-of(h,d)
ARG2(d,s)
mod(d,m)
domain(d,w)
location(w,d2)

# ::snt This one was like a well in a village .
instance(r,resemble-01)
instance(w,well)
instance(t,this)
instance(w2,well)
instance(v,village)
ARG1(r,w)
mod(w,t)
ARG2(w,w2)
location(w2,v)

# ::snt But there was no village here , and I thought I must be dreaming ...
instance(c3,contrast-01)
instance(a,and)
instance(v,village)
instance(-,-)
instance(h,here)
instance(t,think-01)
instance(i,i)
instance(d,dream-01)
ARG2(c3,a)
op1(a,v)
polarity(v,-)
location(-,h)
op2(-,t)
ARG0(t,i)
ARG1(t,d)
ARG0(d,i)

# ::snt " It is strange , "
instance(s,strange)
instance(i,it)
domain(s,i)

# ::snt I said to the little prince .
instance(s,say-01)
instance(i,i)
instance(p,prince)
instance(l,little)
ARG0(s,i)
ARG2(s,p)
mod(p,l)

# ::snt " Everything is ready for use : the pulley , the bucket , the rope ... "
instance(r,ready-02)
instance(e,everything)
instance(a,and)
instance(p2,pulley)
instance(b,bucket)
instance(r2,rope)
instance(u,use-01)
ARG1(r,e)
example(e,a)
op1(a,p2)
op2(a,b)
op3(a,r2)
ARG2(a,u)
ARG1(u,e)

# ::snt He laughed , touched the rope , and set the pulley to working .
instance(a,and)
instance(l,laugh-01)
instance(h,he)
instance(t,touch-01)
instance(r,rope)
instance(s,set-08)
instance(p,pulley)
instance(w,work-09)
op1(a,l)
ARG0(l,h)
op2(l,t)
ARG0(t,h)
ARG1(h,r)
op3(h,s)
ARG0(s,h)
ARG1(h,p)
ARG2(h,w)
ARG1(w,p)

# ::snt And the pulley moaned , like an old weathervane which the wind has long since forgotten .
instance(a,and)
instance(m,moan-01)
instance(p,pulley)
instance(r,resemble-01)
instance(m2,moan-01)
instance(w,weathervane)
instance(o,old)
instance(f,forget-01)
instance(w2,wind)
instance(s,since)
instance(l,long)
op2(a,m)
ARG0(m,p)
ARG1-of(m,r)
ARG2(r,m2)
ARG0(m2,w)
mod(w,o)
ARG1-of(w,f)
ARG0(f,w2)
time(f,s)
op1(s,l)

# ::snt " Do you hear ? " said the little prince .
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(t,truth-value)
instance(h,hear-01)
instance(y,you)
ARG0(s,p)
mod(p,l)
ARG1(p,t)
polarity-of(t,h)
ARG0(h,y)

# ::snt " We have wakened the well , and it is singing ... "
instance(a,and)
instance(w,wake-01)
instance(w2,we)
instance(w3,well)
instance(s,sing-01)
op1(a,w)
ARG0(w,w2)
ARG1(w,w3)
op2(w,s)
ARG0(s,w3)

# ::snt I did not want him to tire himself with the rope .
instance(w,want-01)
instance(i,i)
instance(t,tire-01)
instance(h,he)
instance(r,rope)
instance(-,-)
ARG0(w,i)
ARG1(w,t)
ARG0(t,h)
ARG1(t,h)
instrument(h,r)
polarity(h,-)

# ::snt " Leave it to me , "
instance(l,leave-02)
instance(y,you)
instance(i2,it)
instance(i,i)
instance(imperative,imperative)
ARG0(l,y)
ARG1(l,i2)
ARG2(l,i)
mode(l,imperative)

# ::snt I said .
instance(s,say-01)
instance(i,i)
ARG0(s,i)

# ::snt " It is too heavy for you . "
instance(h,have-degree-91)
instance(i2,it)
instance(h2,heavy)
instance(t,too)
instance(c,carry-01)
instance(y,you)
ARG1(h,i2)
ARG2(h,h2)
ARG3(h,t)
ARG6(h,c)
ARG0(c,y)
ARG1(c,i2)

# ::snt I hoisted the bucket slowly to the edge of the well and set it there - - happy , tired as I was , over my achievement .
instance(a,and)
instance(h,hoist-01)
instance(i,i)
instance(b,bucket)
instance(s,slow-05)
instance(e,edge)
instance(w,well)
instance(s2,set-01)
instance(c,cause-01)
instance(h2,happy-01)
instance(t3,thing)
instance(a2,achieve-01)
instance(t2,tire-01)
op1(a,h)
ARG0(h,i)
ARG1(h,b)
ARG1-of(h,s)
destination(h,e)
part-of(e,w)
op2(e,s2)
ARG0(s2,i)
ARG1(i,b)
ARG2(b,e)
ARG0-of(b,c)
ARG1(c,h2)
ARG0(h2,t3)
ARG1-of(t3,a2)
ARG0(a2,i)
ARG1(a2,i)
concession(i,t2)
ARG1(t2,i)

# ::snt The song of the pulley was still in my ears , and I could see the sunlight shimmer in the still trembling water .
instance(a,and)
instance(h,hear-01)
instance(i,i)
instance(s,sing-01)
instance(p,pulley)
instance(s2,still)
instance(p2,possible-01)
instance(s3,see-01)
instance(s4,shimmer-01)
instance(s5,sunlight)
instance(w,water)
instance(t,tremble-01)
instance(s6,still)
op1(a,h)
ARG0(h,i)
ARG1(h,s)
ARG0(s,p)
mod(s,s2)
op2(s,p2)
ARG1(p2,s3)
ARG0(s3,i)
ARG1(i,s4)
ARG1(s4,s5)
location(s4,w)
ARG1-of(w,t)
mod(t,s6)

# ::snt " I am thirsty for this water , " said the little prince .
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(t,thirst-01)
instance(i,i)
instance(w,water)
instance(t2,this)
ARG0(s,p)
mod(p,l)
ARG1(p,t)
ARG0(t,i)
ARG1(t,w)
mod(w,t2)

# ::snt " Give me some of it to drink ... "
instance(g,give-01)
instance(y,you)
instance(t,thing)
instance(i3,include-91)
instance(i,it)
instance(s,some)
instance(i2,i)
instance(imperative,imperative)
instance(d,drink-01)
ARG0(g,y)
ARG1(g,t)
ARG1-of(t,i3)
ARG2(i3,i)
quant(i3,s)
ARG2(i3,i2)
mode(i3,imperative)
purpose(imperative,d)
ARG0(d,i2)
ARG1(i2,t)

# ::snt And I understood what he had been looking for .
instance(a,and)
instance(u,understand-01)
instance(i,i)
instance(t,thing)
instance(l,look-01)
instance(h,he)
op2(a,u)
ARG0(u,i)
ARG1(u,t)
ARG1-of(t,l)
ARG0(l,h)

# ::snt I raised the bucket to his lips .
instance(r,raise-01)
instance(i,i)
instance(b,bucket)
instance(l,lip)
instance(h,he)
ARG0(r,i)
ARG1(r,b)
ARG4(r,l)
part-of(l,h)

# ::snt He drank , his eyes closed .
instance(a,and)
instance(d,drink-01)
instance(h,he)
instance(c,close-01)
instance(e,eye)
op1(a,d)
ARG0(d,h)
op2(d,c)
ARG0(c,h)
ARG1(h,e)
part-of(e,h)

# ::snt It was as sweet as some special festival treat .
instance(h,have-degree-91)
instance(i2,it)
instance(s,sweet-04)
instance(e,equal)
instance(f2,food-dish)
instance(f,festival)
instance(s2,some)
instance(s3,special-02)
instance(t,treat-02)
ARG1(h,i2)
ARG2(h,s)
ARG3(h,e)
ARG4(h,f2)
mod(f2,f)
mod(f2,s2)
ARG1-of(f2,s3)
ARG1-of(f2,t)

# ::snt This water was indeed a different thing from ordinary nourishment .
instance(r2,resemble-01)
instance(w,water)
instance(t,this)
instance(t2,thing)
instance(n,nourish-01)
instance(o,ordinary)
instance(i,indeed)
instance(-,-)
ARG1(r2,w)
mod(w,t)
ARG2(w,t2)
ARG2-of(t2,n)
mod(t2,o)
mod(t2,i)
polarity(t2,-)

# ::snt Its sweetness was born of the walk under the stars , the song of the pulley , the effort of my arms .
instance(b2,bear-02)
instance(a,and)
instance(w2,walk-01)
instance(u,under)
instance(s2,star)
instance(s3,sing-01)
instance(p,pulley)
instance(e,effort-01)
instance(a2,arm)
instance(i,i)
instance(s,sweet-05)
instance(i3,it)
ARG0(b2,a)
op1(a,w2)
location(w2,u)
op1(u,s2)
op2(u,s3)
ARG0(s3,p)
op3(s3,e)
ARG0(e,a2)
part-of(a2,i)
ARG1(a2,s)
ARG1(s,i3)

# ::snt It was good for the heart , like a present .
instance(g,good-04)
instance(i,it)
instance(r,resemble-01)
instance(p,present)
instance(h,heart)
ARG1(g,i)
ARG1-of(i,r)
ARG2(r,p)
ARG2(r,h)

# ::snt When I was a little boy , the lights of the Christmas tree , the music of the Midnight Mass , the tenderness of smiling faces , used to make up , so , the radiance of the gifts I received .
instance(m,make-up-07)
instance(a,and)
instance(l,light-04)
instance(t2,tree)
instance(f2,festival)
instance(m2,music)
instance(e2,event)
instance(t4,tender)
instance(f,face)
instance(s2,smile-01)
instance(r3,radiant)
instance(g2,gift)
instance(r4,receive-01)
instance(i,i)
instance(s,so)
instance(b,boy)
instance(l2,little)
instance(u,use-03)
ARG0(m,a)
op1(a,l)
ARG0(l,t2)
mod(t2,f2)
op2(t2,m2)
poss(m2,e2)
op3(m2,t4)
domain(t4,f)
ARG0-of(f,s2)
ARG1(f,r3)
domain(r3,g2)
ARG1-of(g2,r4)
ARG0(r4,i)
manner(r4,s)
time(r4,b)
mod(b,l2)
domain(b,i)
time(b,u)

# ::snt " The men where you live , " said the little prince , " raise five thousand roses in the same garden - - and they do not find in it what they are looking for . "
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(a,and)
instance(r,raise-03)
instance(m,man)
instance(l2,live-01)
instance(y,you)
instance(r2,rose)
instance(g,garden)
instance(s2,same-01)
instance(f,find-01)
instance(t,thing)
instance(l3,look-01)
ARG0(s,p)
mod(p,l)
ARG1(p,a)
op1(a,r)
ARG0(r,m)
location(m,l2)
ARG0(l2,y)
ARG1(l2,r2)
location(l2,g)
ARG1-of(g,s2)
op2(g,f)
ARG0(f,m)
ARG1(m,t)
ARG1-of(t,l3)
ARG0(l3,m)
location(l3,g)

# ::snt " They do not find it , "
instance(f,find-01)
instance(t,they)
instance(i,it)
instance(-,-)
ARG0(f,t)
ARG1(f,i)
polarity(f,-)

# ::snt I replied .
instance(r,reply-01)
instance(i,i)
ARG0(r,i)

# ::snt " And yet what they are looking for could be found in one single rose , or in a little water . "
instance(c,contrast-01)
instance(p2,possible-01)
instance(f,find-01)
instance(t,thing)
instance(l2,look-01)
instance(t2,they)
instance(o,or)
instance(r,rose)
instance(s,single-02)
instance(w,water)
instance(l3,little)
ARG2(c,p2)
ARG1(p2,f)
ARG1(f,t)
ARG1-of(t,l2)
ARG0(l2,t2)
location(l2,o)
op1(o,r)
ARG1-of(r,s)
op2(r,w)
quant(w,l3)

# ::snt " Yes , that is true , "
instance(t,true-01)
instance(t2,that)
ARG1(t,t2)

# ::snt I said .
instance(s,say-01)
instance(i,i)
ARG0(s,i)

# ::snt And the little prince added : " But the eyes are blind .
instance(a,and)
instance(a2,add-01)
instance(p,prince)
instance(l,little)
instance(c,contrast-01)
instance(b,blind-02)
instance(e,eye)
op2(a,a2)
ARG0(a2,p)
mod(p,l)
ARG1(p,c)
ARG2(c,b)
ARG1(b,e)

# ::snt One must look with the heart ... "
instance(r,recommend-01)
instance(l,look-01)
instance(o,one)
instance(h,heart)
ARG1(r,l)
ARG0(l,o)
instrument(l,h)

# ::snt I had drunk the water .
instance(d,drink-01)
instance(i,i)
instance(w,water)
ARG0(d,i)
ARG1(d,w)

# ::snt I breathed easily .
instance(b,breathe-01)
instance(i,i)
instance(e,easy-05)
ARG0(b,i)
ARG1-of(b,e)

# ::snt At sunrise the sand is the color of honey .
instance(r2,resemble-01)
instance(c,color)
instance(s,sand)
instance(c2,color)
instance(h,honey)
instance(r,rise-01)
instance(s2,sun)
ARG1(r2,c)
poss(c,s)
ARG2(c,c2)
poss(c2,h)
time(c2,r)
ARG1(r,s2)

# ::snt And that honey color was making me happy , too .
instance(a,and)
instance(m,make-02)
instance(c,color)
instance(h,honey)
instance(h2,happy-01)
instance(i,i)
instance(t,too)
op2(a,m)
ARG0(m,c)
mod(c,h)
ARG1(c,h2)
ARG1(h2,i)
mod(h2,t)

# ::snt What brought me , then , this sense of grief ?
instance(b2,bring-01)
instance(a,amr-unknown)
instance(s,sense-01)
instance(i,i)
instance(g,grieve-01)
instance(t,this)
instance(i,i)
instance(t2,then)
ARG0(b2,a)
ARG1(b2,s)
ARG0(s,i)
ARG1(i,g)
ARG1(g,i)
mod(g,t)
ARG2(g,i)
time(g,t2)

# ::snt " You must keep your promise , " said the little prince , softly , as he sat down beside me once more .
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(o,obligate-01)
instance(y,you)
instance(h,honor-02)
instance(t,thing)
instance(p2,promise-01)
instance(s2,soft)
instance(s3,sit-down-02)
instance(b,beside)
instance(i,i)
instance(a,again)
instance(o2,once)
ARG0(s,p)
mod(p,l)
ARG1(p,o)
ARG1(o,y)
ARG2(o,h)
ARG0(h,y)
ARG1(y,t)
ARG1-of(t,p2)
ARG0(p2,y)
manner(p2,s2)
time(p2,s3)
ARG1(s3,p)
location(p,b)
op1(b,i)
mod(b,a)
mod(a,o2)

# ::snt " What promise ? "
instance(t,thing)
instance(p2,promise-01)
instance(i,i)
instance(a,amr-unknown)
ARG1-of(t,p2)
ARG0(p2,i)
domain(p2,a)

# ::snt " You know - - a muzzle for my sheep ...
instance(t,thing)
instance(m2,muzzle-01)
instance(s,sheep)
instance(i,i)
ARG2-of(t,m2)
ARG1(m2,s)
poss(s,i)

# ::snt I am responsible for this flower ... "
instance(r,responsible-03)
instance(i,i)
instance(f,flower)
instance(t,this)
ARG0(r,i)
ARG1(r,f)
mod(f,t)

# ::snt I took my rough drafts of drawings out of my pocket .
instance(t,take-01)
instance(i,i)
instance(p2,picture)
instance(d3,draft-01)
instance(r,rough-04)
instance(d4,draw-01)
instance(p,pocket)
ARG0(t,i)
ARG1(t,p2)
ARG1-of(p2,d3)
ARG1-of(p2,r)
ARG1-of(p2,d4)
ARG2(p2,p)
poss(p,i)

# ::snt The little prince looked them over , and laughed as he said : " Your baobabs - - they look a little like cabbages . "
instance(a,and)
instance(l,look-01)
instance(p,prince)
instance(l2,little)
instance(t,they)
instance(l3,laugh-01)
instance(s,say-01)
instance(l4,look-02)
instance(b,baobab)
instance(y,you)
instance(c,cabbage)
instance(l5,little)
op1(a,l)
ARG0(l,p)
mod(p,l2)
ARG1(p,t)
op2(p,l3)
ARG0(l3,p)
time(p,s)
ARG0(s,p)
ARG1(p,l4)
ARG0(l4,b)
poss(b,y)
ARG1(b,c)
degree(b,l5)

# ::snt " Oh ! "
instance(o,oh)

# ::snt I had been so proud of my baobabs !
instance(p,pride-01)
instance(i,i)
instance(b,baobab)
instance(s,so)
ARG0(p,i)
ARG1(p,b)
poss(b,i)
degree(b,s)

# ::snt " Your fox - - his ears look a little like horns ; and they are too long . "
instance(a2,and)
instance(l4,look-02)
instance(e,ear)
instance(f,fox)
instance(y,you)
instance(h,horn)
instance(l,little)
instance(h2,have-degree-91)
instance(l2,long-03)
instance(t2,too)
op1(a2,l4)
ARG0(l4,e)
part-of(e,f)
poss(f,y)
ARG1(f,h)
degree(f,l)
op2(f,h2)
ARG1(h2,e)
ARG2(e,l2)
ARG1(l2,e)
ARG3(l2,t2)

# ::snt And he laughed again .
instance(a,and)
instance(l,laugh-01)
instance(h,he)
instance(a2,again)
op2(a,l)
ARG0(l,h)
mod(l,a2)

# ::snt " You are not fair , little prince , "
instance(f,fair-01)
instance(p,prince)
instance(l,little)
ARG0(f,p)
mod(p,l)

# ::snt I said .
instance(s,say-01)
instance(i,i)
ARG0(s,i)

# ::snt " I do n't know how to draw anything except boa constrictors from the outside and boa constrictors from the inside . "
instance(k,know-01)
instance(i,i)
instance(d,draw-01)
instance(a2,and)
instance(o,outside)
instance(b,boa)
instance(c,constrictor)
instance(i2,inside)
ARG0(k,i)
ARG1(k,d)
ARG0(d,i)
ARG1(i,a2)
op1(a2,o)
part-of(o,b)
mod(b,c)
op2(b,i2)
part-of(i2,b)

# ::snt " Oh , that will be all right , " he said , " children understand . "
instance(s,say-01)
instance(h,he)
instance(a,all-right)
instance(t,that)
instance(c,cause-01)
instance(u,understand-01)
instance(c2,child)
ARG0(s,h)
ARG1(s,a)
domain(a,t)
ARG1-of(a,c)
ARG0(c,u)
ARG0(u,c2)

# ::snt So then I made a pencil sketch of a muzzle .
instance(s2,sketch-01)
instance(i,i)
instance(m,muzzle)
instance(p,pencil)
instance(t,then)
ARG0(s2,i)
ARG1(s2,m)
instrument(s2,p)
time(s2,t)

# ::snt And as I gave it to him my heart was torn .
instance(a,and)
instance(t,tear-01)
instance(h,heart)
instance(i,i)
instance(g,give-01)
instance(i2,it)
instance(h2,he)
op2(a,t)
ARG1(t,h)
part-of(h,i)
time(h,g)
ARG0(g,i)
ARG1(i,i2)
ARG2(i,h2)

# ::snt " You have plans that I do not know about , "
instance(p2,plan-01)
instance(y,you)
instance(t,thing)
instance(k,know-01)
instance(i,i)
instance(-,-)
ARG0(p2,y)
ARG1(p2,t)
ARG1-of(t,k)
ARG0(k,i)
polarity(k,-)

# ::snt I said .
instance(s,say-01)
instance(i,i)
ARG0(s,i)

# ::snt But he did not answer me .
instance(h2,have-concession-91)
instance(a,answer-01)
instance(h,he)
instance(i,i)
instance(-,-)
ARG1(h2,a)
ARG0(a,h)
ARG1(a,i)
polarity(a,-)

# ::snt He said to me , instead : " You know - - my descent to the earth ...
instance(s,say-01)
instance(h,he)
instance(d,descend-01)
instance(e,earth)
instance(i,i)
instance(i2,instead-of-91)
ARG0(s,h)
ARG1(s,d)
ARG0(d,h)
ARG1(h,e)
ARG2(h,i)
ARG1-of(h,i2)

# ::snt Tomorrow will be its anniversary . "
instance(a,anniversary)
instance(t,tomorrow)
instance(i,it)
time(a,t)
poss(a,i)

# ::snt Then , after a silence , he went on : " I came down very near here . "
instance(g,go-23)
instance(h,he)
instance(c,come-01)
instance(n,near-02)
instance(h2,here)
instance(v,very)
instance(d,down)
instance(t,then)
instance(a,after)
instance(s,silent)
ARG0(g,h)
ARG1(g,c)
ARG1(c,h)
ARG4(h,n)
ARG1(n,h)
ARG2(h,h2)
degree(h,v)
direction(h,d)
time(h,t)
time(h,a)
op1(a,s)

# ::snt And he flushed .
instance(a,and)
instance(f,flush-03)
instance(h,he)
op2(a,f)
ARG1(f,h)

# ::snt And once again , without understanding why , I had a queer sense of sorrow .
instance(a2,and)
instance(s,sense-01)
instance(i,i)
instance(s2,sorrow-01)
instance(q,queer)
instance(a,again)
instance(o,once)
instance(c2,cause-01)
instance(a3,amr-unknown)
instance(u2,understand-01)
op2(a2,s)
ARG0(s,i)
ARG1(s,s2)
ARG0(s2,i)
mod(s2,q)
mod(s2,a)
mod(a,o)
ARG1-of(a,c2)
ARG0(c2,a3)
ARG1-of(a3,u2)
ARG0(u2,i)

# ::snt One question , however , occurred to me : " Then it was not by chance that on the morning when I first met you - - a week ago - - you were strolling along like that , all alone , a thousand miles from any inhabited region ?
instance(c,contrast-01)
instance(q,question-01)
instance(i,i)
instance(t3,truth-value)
instance(s,stroll-01)
instance(y,y)
instance(a3,alone)
instance(a4,all)
instance(r,resemble-01)
instance(t2,that)
instance(a6,along)
instance(r3,relative-position)
instance(r2,region)
instance(i3,inhabit-01)
instance(a5,any)
instance(d2,distance-quantity)
instance(m3,mile)
instance(m,meet-03)
instance(y,you)
instance(o2,ordinal-entity)
instance(b,before)
instance(n,now)
instance(t,temporal-quantity)
instance(w,week)
instance(d,date-entity)
instance(m2,morning)
instance(c2,cause-01)
instance(c3,chance-02)
ARG2(c,q)
ARG0(q,i)
ARG1(q,t3)
polarity-of(t3,s)
ARG0(s,y)
manner(y,a3)
degree(a3,a4)
ARG1-of(a3,r)
ARG2(r,t2)
direction(r,a6)
location(r,r3)
op1(r3,r2)
ARG1-of(r2,i3)
mod(r2,a5)
quant(r2,d2)
unit(d2,m3)
time(d2,m)
ARG0(m,i)
ARG1(i,y)
ord(i,o2)
time(i,b)
op1(b,n)
quant(b,t)
unit(t,w)
time(t,d)
dayperiod(d,m2)
ARG1-of(d,c2)
ARG0(c2,c3)

# ::snt You were on the your back to the place where you landed ? "
instance(g,go-02)
instance(y,you)
instance(p2,place)
instance(l,land-01)
instance(a,amr-unknown)
instance(b,back)
ARG1(g,y)
ARG4(g,p2)
location-of(p2,l)
ARG0(l,y)
polarity(l,a)
direction(l,b)

# ::snt The little prince flushed again .
instance(f,flush-03)
instance(p,prince)
instance(l,little)
instance(a,again)
ARG1(f,p)
mod(p,l)
mod(p,a)

# ::snt And I added , with some hesitancy : " Perhaps it was because of the anniversary ? "
instance(a4,and)
instance(a,add-01)
instance(i,i)
instance(t,truth-value)
instance(p2,possible-01)
instance(c,cause-01)
instance(a3,anniversary)
instance(i2,it)
instance(h,hesitate-01)
instance(s,some)
op2(a4,a)
ARG0(a,i)
ARG1(a,t)
polarity-of(t,p2)
ARG1(p2,c)
ARG0(c,a3)
ARG1(c,i2)
manner(c,h)
ARG0(h,i)
degree(i,s)

# ::snt The little prince flushed once more .
instance(f,flush-03)
instance(p,prince)
instance(l,little)
instance(a,again)
instance(o,once)
ARG1(f,p)
mod(p,l)
mod(p,a)
mod(a,o)

# ::snt He never answered questions - - but when one flushes does that not mean " Yes " ?
instance(c,contrast-01)
instance(a,answer-01)
instance(h,he)
instance(q,question-01)
instance(e,ever)
instance(m,mean-01)
instance(f,flush-03)
instance(o,one)
instance(y,yes)
instance(r,request-confirmation-91)
ARG1(c,a)
ARG0(a,h)
ARG1(a,q)
ARG2(q,h)
time(q,e)
ARG2(q,m)
ARG1(m,f)
ARG1(f,o)
ARG2(f,y)
ARG1-of(f,r)

# ::snt " Ah , "
instance(a,ah)
instance(expressive,expressive)
mode(a,expressive)

# ::snt I said to him , " I am a little frightened - - "
instance(s,say-01)
instance(i,i)
instance(f,frighten-01)
instance(l,little)
instance(h,he)
ARG0(s,i)
ARG1(s,f)
ARG1(f,i)
degree(i,l)
ARG2(i,h)

# ::snt But he interrupted me .
instance(c,contrast-01)
instance(i,interrupt-01)
instance(h,he)
instance(i2,i)
ARG2(c,i)
ARG0(i,h)
ARG1(i,i2)

# ::snt " Now you must work .
instance(o,obligate-01)
instance(y,you)
instance(w,work-01)
instance(n,now)
ARG1(o,y)
ARG2(o,w)
ARG0(w,y)
time(w,n)

# ::snt You must return to your engine .
instance(o2,obligate-01)
instance(y,you)
instance(r,return-01)
instance(e,engine)
ARG1(o2,y)
ARG2(o2,r)
ARG1(r,y)
ARG4(y,e)
poss(e,y)

# ::snt I will be waiting for you here .
instance(w,wait-01)
instance(i,i)
instance(y,you)
instance(h,here)
ARG1(w,i)
ARG2(w,y)
location(w,h)

# ::snt Come back tomorrow evening ... "
instance(c,come-01)
instance(y,you)
instance(b,back)
instance(d,date-entity)
instance(e2,evening)
instance(t,tomorrow)
ARG1(c,y)
direction(c,b)
time(c,d)
dayperiod(d,e2)
mod(d,t)

# ::snt But I was not reassured .
instance(h,have-concession-91)
instance(r,reassure-01)
instance(i,i)
instance(-,-)
ARG1(h,r)
ARG1(r,i)
polarity(r,-)

# ::snt I remembered the fox .
instance(r,remember-01)
instance(i,i)
instance(f,fox)
ARG0(r,i)
ARG1(r,f)

# ::snt One runs the risk of weeping a little , if one lets himself be tamed ...
instance(r2,risk-01)
instance(o,one)
instance(w,weep-01)
instance(l,little)
instance(l2,let-01)
instance(t,tame-01)
ARG0(r2,o)
ARG2(r2,w)
ARG0(w,o)
degree(o,l)
condition(o,l2)
ARG0(l2,o)
ARG1(o,t)
ARG1(t,o)

# ::snt Chapter 26 .
instance(c,chapter)

# ::snt Beside the well there was the ruin of an old stone wall .
instance(w,wall)
instance(o,old)
instance(s,stone)
instance(r,ruin-01)
instance(b,beside)
instance(w2,well)
mod(w,o)
consist-of(w,s)
ARG1-of(w,r)
location(w,b)
op1(b,w2)

# ::snt When I came back from my work , the next evening , I saw from some distance away my little price sitting on top of a wall , with his feet dangling .
instance(s,see-01)
instance(i,i)
instance(r2,relative-position)
instance(d2,distant-02)
instance(s2,sit-01)
instance(p2,prince)
instance(l,little)
instance(d,dangle-01)
instance(f,foot)
instance(t,top)
instance(w,wall)
instance(r,return-01)
instance(w2,work-01)
instance(d3,date-entity)
instance(e,evening)
instance(n,next)
ARG0(s,i)
location(i,r2)
quant(r2,d2)
ARG1(r2,s2)
ARG1(s2,p2)
mod(p2,l)
poss(p2,i)
ARG0-of(i,d)
ARG1(d,f)
part-of(f,p2)
ARG2(f,t)
op1(t,w)
time(t,r)
ARG1(r,i)
ARG3(i,w2)
ARG0(w2,i)
time(w2,d3)
dayperiod(d3,e)
mod(d3,n)

# ::snt And I heard him say : " Then you do n't remember .
instance(a,and)
instance(h,hear-01)
instance(i,i)
instance(s,say-01)
instance(h2,he)
instance(r,remember-01)
instance(y,you)
instance(t,then)
op2(a,h)
ARG0(h,i)
ARG1(h,s)
ARG0(s,h2)
ARG1(s,r)
ARG0(r,y)
mod(r,t)

# ::snt This is not the exact spot . "
instance(s2,spot)
instance(t,this)
instance(e2,exact)
domain(s2,t)
mod(s2,e2)

# ::snt Another voice must have answered him , for he replied to it : " Yes , yes !
instance(o,obligate-01)
instance(v,voice)
instance(a,another)
instance(h2,h2)
instance(a2,answer-01)
instance(c,cause-01)
instance(r,reply-01)
instance(h2,he)
instance(y,yes)
ARG0(o,v)
mod(v,a)
ARG1(v,h2)
ARG2(h2,a2)
ARG0-of(h2,c)
ARG1(c,r)
ARG0(r,h2)
ARG2(r,y)

# ::snt It is the right day , but this is not the place . "
instance(c,contrast-01)
instance(d,day)
instance(r,right-06)
instance(p,place)
instance(t,this)
ARG1(c,d)
ARG2-of(d,r)
ARG2(d,p)
domain(p,t)

# ::snt I continued my walk toward the wall .
instance(c,continue-01)
instance(i,i)
instance(w,walk-01)
instance(t,toward)
instance(w2,wall)
ARG0(c,i)
ARG1(c,w)
ARG0(w,i)
direction(i,t)
op1(t,w2)

# ::snt At no time did I see or hear anyone .
instance(o,or)
instance(s,see-01)
instance(i,i)
instance(a,anyone)
instance(h,hear-01)
instance(e,ever)
op1(o,s)
ARG0(s,i)
ARG1(s,a)
op2(s,h)
ARG0(h,i)
ARG1(i,a)
time(i,e)

# ::snt The little prince , however , replied once again : " -- Exactly .
instance(c,contrast-01)
instance(r,reply-01)
instance(p,prince)
instance(l,little)
instance(e,exact)
instance(a,again)
instance(o,once)
ARG2(c,r)
ARG0(r,p)
mod(p,l)
ARG2(p,e)
mod(p,a)
mod(a,o)

# ::snt You will see where my track begins , in the sand .
instance(s,see-01)
instance(y2,you)
instance(b2,begin-01)
instance(t2,track)
instance(i,i)
instance(s3,sand)
ARG0(s,y2)
ARG1(s,b2)
ARG1(b2,t2)
poss(t2,i)
location(t2,s3)

# ::snt You have nothing to do but wait for me there .
instance(h2,have-03)
instance(y,you)
instance(n,nothing)
instance(d,do-02)
instance(c,contrast-01)
instance(w2,wait-01)
instance(i,i)
instance(t2,there)
ARG0(h2,y)
ARG1(h2,n)
ARG1-of(n,d)
ARG0(d,y)
ARG1-of(d,c)
ARG2(c,w2)
ARG1(w2,y)
ARG2(y,i)
location(y,t2)

# ::snt I shall be there tonight . "
instance(t,there)
instance(i,i)
instance(d,date-entity)
instance(n,night)
instance(t2,today)
location-of(t,i)
time(t,d)
dayperiod(d,n)
mod(d,t2)

# ::snt I was only twenty metres from the wall , and I still saw nothing .
instance(a,and)
instance(b,be-located-at-91)
instance(i,i)
instance(r,relative-position)
instance(w,wall)
instance(d,distance-quantity)
instance(m,meter)
instance(o,only)
instance(s,see-01)
instance(n,nothing)
instance(s2,still)
op1(a,b)
ARG1(b,i)
ARG2(b,r)
op1(r,w)
quant(r,d)
unit(d,m)
mod(d,o)
op2(d,s)
ARG0(s,i)
ARG1(i,n)
mod(i,s2)

# ::snt After a silence the little prince spoke again : " You have good poison ?
instance(s,speak-01)
instance(p,prince)
instance(l,little)
instance(t,truth-value)
instance(h,have-03)
instance(i,i)
instance(t2,thing)
instance(p2,poison-01)
instance(g,good-02)
instance(a,again)
instance(a2,after)
instance(s2,silent)
ARG0(s,p)
mod(p,l)
ARG1(p,t)
polarity-of(t,h)
ARG0(h,i)
ARG1(h,t2)
ARG0-of(t2,p2)
ARG1-of(p2,g)
mod(p2,a)
time(p2,a2)
op1(a2,s2)

# ::snt You are sure that it will not make me suffer too long ? "
instance(s2,sure-02)
instance(y,you)
instance(h,have-degree-91)
instance(s,suffer-01)
instance(i,i)
instance(i2,it)
instance(l,long-03)
instance(t,too)
instance(a,amr-unknown)
ARG0(s2,y)
ARG1(s2,h)
ARG1(h,s)
ARG0(s,i)
ARG1(s,i2)
ARG2(s,l)
ARG1(l,s)
ARG3(l,t)
polarity(l,a)

# ::snt I stopped in my tracks , my heart torn asunder ; but still I did not understand .
instance(c,contrast-01)
instance(a,and)
instance(s,stop-01)
instance(i,i)
instance(t,tear-01)
instance(h,heart)
instance(a2,asunder)
instance(u,understand-01)
instance(s2,still)
ARG1(c,a)
op1(a,s)
ARG1(s,i)
op2(s,t)
ARG1(t,h)
part-of(h,i)
mod(h,a2)
ARG2(h,u)
ARG0(u,i)
mod(i,s2)

# ::snt " Now go away , " said the little prince .
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(g,go-02)
instance(y,you)
instance(a,away)
instance(n,now)
ARG0(s,p)
mod(p,l)
ARG1(p,g)
ARG0(g,y)
ARG1(g,a)
time(g,n)

# ::snt " I want to get down from the wall . "
instance(w,want-01)
instance(i,i)
instance(g,get-05)
instance(r,relative-position)
instance(w2,wall)
instance(d,down)
ARG0(w,i)
ARG1(w,g)
ARG0(g,i)
ARG2(i,r)
op1(r,w2)
direction(r,d)

# ::snt I dropped my eyes , then , to the foot of the wall - - and I leaped into the air .
instance(a,and)
instance(d,drop-01)
instance(i,i)
instance(e,eye)
instance(f,foot)
instance(w,wall)
instance(t,then)
instance(l,leap-03)
instance(a2,air)
op1(a,d)
ARG0(d,i)
ARG1(d,e)
part-of(e,i)
ARG4(e,f)
part-of(f,w)
time(f,t)
op2(f,l)
ARG0(l,i)
destination(i,a2)

# ::snt There before me , facing the little prince , was one of those yellow snakes that take just thirty seconds to bring your life to an end .
instance(s3,snake)
instance(y,yellow-02)
instance(t,take-10)
instance(e,end-01)
instance(l2,life)
instance(y2,you)
instance(t2,temporal-quantity)
instance(s2,second)
instance(j,just)
instance(b,before)
instance(i,i)
instance(f,face-01)
instance(p,prince)
instance(l,little)
ARG1-of(s3,y)
ARG2-of(s3,t)
ARG0(t,e)
ARG1(e,l2)
poss(l2,y2)
ARG1(l2,t2)
unit(t2,s2)
mod(t2,j)
location(t2,b)
op1(b,i)
ARG0-of(b,f)
ARG1(f,p)
mod(p,l)

# ::snt Even as I was digging into my pocked to get out my revolver I made a running step back .
instance(s,step-01)
instance(i,i)
instance(b,back)
instance(r,run-02)
instance(e,even-as)
instance(d,dig-01)
instance(i,i)
instance(p,pocket)
instance(r2,r2)
instance(g,get-01)
instance(r2,revolver)
ARG1(s,i)
ARG2(i,b)
manner(i,r)
concession(i,e)
op1(e,d)
ARG0(d,i)
ARG2(d,p)
poss(p,i)
ARG3(p,r2)
purpose(r2,g)
ARG0(g,i)
ARG1(i,r2)
poss(r2,i)

# ::snt But , at the noise I made , the snake let himself flow easily across the sand like the dying spray of a fountain , and , in no apparent hurry , disappeared , with a light metallic sound , among the stones .
instance(c,contrast-01)
instance(a,and)
instance(l2,let-01)
instance(s3,snake)
instance(f,flow-01)
instance(e,easy-05)
instance(r,resemble-01)
instance(s5,spray)
instance(d2,die-down-02)
instance(f2,fountain)
instance(a3,across)
instance(s4,sand)
instance(c2,cause-01)
instance(n,noise)
instance(m2,make-01)
instance(i,i)
instance(d,disappear-01)
instance(h,hurry-01)
instance(a2,apparent)
instance(a4,among)
instance(s2,stone)
instance(s,sound-02)
instance(m,metallic)
instance(l,light-06)
ARG2(c,a)
op1(a,l2)
ARG0(l2,s3)
ARG1(l2,f)
ARG1(f,s3)
ARG1-of(s3,e)
ARG1-of(s3,r)
ARG2(r,s5)
ARG1-of(s5,d2)
poss(s5,f2)
path(s5,a3)
op1(a3,s4)
ARG1-of(a3,c2)
ARG0(c2,n)
ARG1-of(n,m2)
ARG0(m2,i)
op2(m2,d)
ARG1(d,s3)
ARG1-of(s3,h)
mod(h,a2)
location(h,a4)
op1(a4,s2)
ARG0-of(a4,s)
ARG3(s,m)
ARG1-of(s,l)

# ::snt I reached the wall just in time to catch my little man in my arms ; his face was white as snow .
instance(m,multi-sentence)
instance(r,reach-01)
instance(i,i)
instance(w2,wall)
instance(i2,in-time)
instance(c,catch-01)
instance(m2,man)
instance(l,little)
instance(j,just)
instance(a,arm)
instance(h,have-degree-91)
instance(f,face)
instance(w,white-03)
instance(e,equal)
instance(s,snow)
snt1(m,r)
ARG0(r,i)
ARG1(r,w2)
time(r,i2)
op1(i2,c)
ARG0(c,i)
ARG1(i,m2)
mod(m2,l)
poss(m2,i)
mod(m2,j)
location(m2,a)
part-of(a,i)
snt2(a,h)
ARG1(h,f)
part-of(f,m2)
ARG2(f,w)
ARG1(w,f)
ARG3(w,e)
ARG4(w,s)

# ::snt " What does this mean ? "
instance(m,mean-01)
instance(t,this)
instance(a,amr-unknown)
ARG1(m,t)
ARG2(m,a)

# ::snt I demanded .
instance(d,demand-01)
instance(i,i)
ARG0(d,i)

# ::snt " Why are you talking with snakes ? "
instance(t,talk-01)
instance(y,you)
instance(s,snake)
instance(a,amr-unknown)
ARG0(t,y)
ARG2(t,s)
purpose(t,a)

# ::snt I had loosened the golden muffler that he always wore .
instance(l,loosen-01)
instance(i,i)
instance(m,muffler)
instance(g,gold)
instance(w,wear-01)
instance(h,he)
instance(a,always)
ARG0(l,i)
ARG1(l,m)
consist-of(m,g)
ARG1-of(m,w)
ARG0(w,h)
time(w,a)

# ::snt I had moistened his temples , and had given him some water to drink .
instance(a,and)
instance(m,moisten-01)
instance(i,i)
instance(t,temple)
instance(h,he)
instance(g,give-01)
instance(w,water)
instance(s,some)
instance(d,drink-01)
op1(a,m)
ARG0(m,i)
ARG1(m,t)
poss(t,h)
op2(t,g)
ARG0(g,i)
ARG1(i,w)
quant(w,s)
purpose(w,d)
ARG2(w,h)

# ::snt And now I did not dare ask him any more questions .
instance(a,and)
instance(d,dare-01)
instance(i,i)
instance(q2,question-01)
instance(h,he)
instance(m,more)
instance(a3,any)
instance(n,now)
op2(a,d)
ARG1(d,i)
ARG2(d,q2)
ARG0(q2,i)
ARG2(i,h)
mod(i,m)
mod(m,a3)
time(m,n)

# ::snt He looked at me very gravely , and put his arms around my neck .
instance(a,and)
instance(l,look-01)
instance(h,he)
instance(i,i)
instance(g,grave)
instance(v,very)
instance(p,put-01)
instance(a2,arm)
instance(a3,around)
instance(n,neck)
op1(a,l)
ARG0(l,h)
ARG1(l,i)
manner(l,g)
degree(g,v)
op2(g,p)
ARG0(p,h)
ARG1(h,a2)
part-of(a2,h)
ARG2(a2,a3)
op1(a3,n)
part-of(n,i)

# ::snt I felt his heart beating like the heart of a dying bird , shot with someone 's rifle ...
instance(f,feel-01)
instance(i,i)
instance(h4,heart)
instance(h2,he)
instance(b,beat-01)
instance(r,resemble-01)
instance(h3,heart)
instance(b2,bird)
instance(d,die-01)
instance(s,shoot-02)
instance(r2,rifle)
instance(s2,someone)
ARG0(f,i)
ARG1(f,h4)
part-of(h4,h2)
ARG1-of(h4,b)
ARG1-of(b,r)
ARG2(r,h3)
part-of(h3,b2)
ARG1-of(b2,d)
ARG1-of(b2,s)
ARG2(s,r2)
poss(r2,s2)

# ::snt " I am glad that you have found what was the matter with your engine , " he said .
instance(s,say-01)
instance(h,he)
instance(g,glad-02)
instance(f,find-01)
instance(y,you)
instance(p,problem)
instance(e,engine)
instance(i,i)
ARG0(s,h)
ARG1(s,g)
ARG0(g,f)
ARG0(f,y)
ARG1(f,p)
topic(p,e)
poss(e,y)
ARG1(e,i)

# ::snt " Now you can go back home - - "
instance(p,possible-01)
instance(g,go-02)
instance(y,you)
instance(h,home)
instance(b,back)
instance(n,now)
ARG1(p,g)
ARG0(g,y)
ARG4(g,h)
direction(g,b)
time(g,n)

# ::snt " How do you know about that ? "
instance(k,know-01)
instance(y,you)
instance(t,that)
instance(a,amr-unknown)
ARG0(k,y)
ARG1(k,t)
manner(k,a)

# ::snt I was just coming to tell him that my work had been successful , beyond anything that I had dared to hope .
instance(c,come-01)
instance(i,i)
instance(t,tell-01)
instance(s2,succeed-01)
instance(w,work-01)
instance(b,beyond)
instance(a,anything)
instance(h2,hope-01)
instance(d,dare-01)
instance(h,he)
instance(j,just)
ARG1(c,i)
purpose(c,t)
ARG0(t,i)
ARG1(i,s2)
ARG1(s2,w)
ARG0(w,i)
degree(w,b)
op1(b,a)
ARG1-of(a,h2)
ARG0(h2,i)
ARG2-of(i,d)
ARG1(d,i)
ARG2(d,h)
mod(d,j)

# ::snt He made no answer to my question , but he added : " I , too , am going back home today ... "
instance(c,contrast-01)
instance(m,make-01)
instance(h,h)
instance(a,answer-01)
instance(h,he)
instance(q,question-01)
instance(i,i)
instance(a2,add-01)
instance(r,return-01)
instance(h2,home)
instance(t,today)
instance(t2,too)
ARG1(c,m)
ARG0(m,h)
ARG1(h,a)
ARG0(a,h)
ARG1(a,q)
ARG0(q,i)
ARG2(q,a2)
ARG0(a2,h)
ARG1(h,r)
ARG1(r,h)
ARG4(h,h2)
time(h,t)
mod(h,t2)

# ::snt Then , sadly - - " It is much farther ... it is much more difficult ... "
instance(s,say-01)
instance(a,and)
instance(h,have-degree-91)
instance(i2,it)
instance(f,far)
instance(m4,more)
instance(m3,much)
instance(h2,have-degree-91)
instance(d,difficult)
instance(m,more)
instance(m2,much)
instance(t,then)
instance(s2,sad-02)
ARG1(s,a)
op1(a,h)
ARG1(h,i2)
ARG2(h,f)
ARG3(h,m4)
quant(m4,m3)
op2(m4,h2)
ARG1(h2,i2)
ARG2(i2,d)
ARG3(i2,m)
quant(m,m2)
time(m,t)
manner(m,s2)

# ::snt I realised clearly that something extraordinary was happening .
instance(r,realize-01)
instance(i,i)
instance(e2,event)
instance(e,extraordinary)
instance(c,clear-06)
ARG0(r,i)
ARG1(r,e2)
mod(e2,e)
ARG1-of(e2,c)

# ::snt I was holding him close in my arms as if he were a little child ; and yet it seemed to me that he was rushing headlong toward an abyss from which I could do nothing to restrain him ...
instance(a,and)
instance(h,hold-01)
instance(i,i)
instance(h2,he)
instance(c,close-10)
instance(a2,arm)
instance(r,resemble-01)
instance(c2,child)
instance(l,little)
instance(s,seem-01)
instance(r2,rush-01)
instance(t,toward)
instance(a3,abyss)
instance(r3,restrain-01)
instance(h3,headlong)
instance(y,yet)
op1(a,h)
ARG0(h,i)
ARG1(h,h2)
ARG1-of(h,c)
location(h,a2)
part-of(a2,i)
ARG1-of(a2,r)
ARG2(r,c2)
mod(c2,l)
domain(c2,h2)
op2(c2,s)
ARG1(s,r2)
ARG1(r2,h2)
ARG2(h2,t)
op1(t,a3)
ARG2-of(a3,r3)
ARG0(r3,i)
ARG1(i,h2)
mod(i,h3)
ARG2(i,i)
mod(i,y)

# ::snt His look was very serious , like some one lost far away .
instance(l,look-01)
instance(h,he)
instance(s,serious-01)
instance(v,very)
instance(r,resemble-01)
instance(s2,someone)
instance(l2,lose-02)
instance(a,away)
instance(f,far)
ARG0(l,h)
ARG2-of(l,s)
degree(s,v)
ARG1-of(s,r)
ARG2(r,s2)
ARG1-of(s2,l2)
direction(l2,a)
extent(a,f)

# ::snt " I have your sheep .
instance(h,have-03)
instance(i,i)
instance(s,sheep)
instance(y,you)
ARG0(h,i)
ARG1(h,s)
poss(s,y)

# ::snt And I have the sheep 's box .
instance(a,and)
instance(h,have-03)
instance(i,i)
instance(b,box)
instance(s,sheep)
op2(a,h)
ARG0(h,i)
ARG1(h,b)
poss(b,s)

# ::snt And I have the muzzle ... "
instance(a,and)
instance(h,have-03)
instance(i,i)
instance(m,muzzle)
op2(a,h)
ARG0(h,i)
ARG1(h,m)

# ::snt And he gave me a sad smile .
instance(a,and)
instance(g,give-01)
instance(h,he)
instance(s,smile)
instance(s2,sad-02)
instance(i,i)
op2(a,g)
ARG0(g,h)
ARG1(g,s)
ARG1-of(s,s2)
ARG2(s,i)

# ::snt I waited a long time .
instance(w,wait-01)
instance(i,i)
instance(l,long-03)
ARG1(w,i)
ARG1-of(w,l)

# ::snt I could see that he was reviving little by little .
instance(p,possible-01)
instance(s,see-01)
instance(i,i)
instance(r,revive-01)
instance(h,he)
instance(l,little-by-little)
ARG1(p,s)
ARG0(s,i)
ARG1(s,r)
ARG1(r,h)
manner(r,l)

# ::snt " Dear little man , "
instance(m2,man)
instance(l2,little)
instance(d,dear)
mod(m2,l2)
mod(m2,d)

# ::snt I said to him , " you are afraid ... "
instance(s,say-01)
instance(i,i)
instance(f,fear-01)
instance(h,h)
instance(h,he)
ARG0(s,i)
ARG1(s,f)
ARG0(f,h)
ARG2(f,h)

# ::snt He was afraid , there was no doubt about that .
instance(f,fear-01)
instance(h,he)
instance(c,certain)
ARG0(f,h)
mod(f,c)

# ::snt But he laughed lightly .
instance(c,contrast-01)
instance(l,laugh-01)
instance(h,he)
instance(l2,light-06)
ARG2(c,l)
ARG0(l,h)
manner(l,l2)

# ::snt " I shall be much more afraid this evening ... "
instance(h,have-degree-91)
instance(i,i)
instance(f,fear-01)
instance(m,more)
instance(m2,much)
instance(d,date-entity)
instance(e,evening)
instance(t,today)
ARG1(h,i)
ARG2(h,f)
ARG0(f,i)
ARG3(f,m)
quant(m,m2)
time(m,d)
dayperiod(d,e)
mod(d,t)

# ::snt Once again I felt myself frozen by the sense of something irreparable .
instance(f,feel-01)
instance(i,i)
instance(f2,freeze-01)
instance(s,sense-01)
instance(s2,something)
instance(r,repair-01)
instance(p,possible-01)
instance(a,again)
instance(o,once)
ARG0(f,i)
ARG1(f,f2)
ARG0(f2,s)
ARG0(s,i)
ARG1(i,s2)
ARG1-of(s2,r)
ARG1-of(r,p)
ARG1(r,i)
mod(r,a)
mod(a,o)

# ::snt And I knew that I could not bear the thought of never hearing that laughter any more .
instance(a,and)
instance(k,know-01)
instance(i,i)
instance(p,possible-01)
instance(b,bear-01)
instance(t,think-01)
instance(h,hear-01)
instance(l,laugh-01)
instance(e,ever)
instance(m,more)
instance(a2,any)
op2(a,k)
ARG0(k,i)
ARG1(k,p)
ARG1(p,b)
ARG1(b,t)
ARG1(t,h)
ARG1(h,l)
time(h,e)
mod(h,m)
mod(m,a2)

# ::snt For me , it was like a spring of fresh water in the desert .
instance(r,resemble-01)
instance(i,it)
instance(s,spring)
instance(w,water)
instance(f,fresh-04)
instance(d,desert)
instance(i2,i)
ARG1(r,i)
ARG2(r,s)
source-of(s,w)
ARG1-of(w,f)
location(w,d)
beneficiary(w,i2)

# ::snt " Little man , "
instance(m,man)
instance(l,little)
mod(m,l)

# ::snt I said , " I want to hear you laugh again . "
instance(s,say-01)
instance(i,i)
instance(w,want-01)
instance(i,i)
instance(h,hear-01)
instance(l,laugh-01)
instance(y,you)
instance(a,again)
ARG0(s,i)
ARG1(i,w)
ARG0(w,i)
ARG1(w,h)
ARG0(h,i)
ARG1(i,l)
ARG0(l,y)
mod(l,a)

# ::snt But he said to me : " Tonight , it will be a year ... my star , then , can be found right above the place where I came to the Earth , a year ago ... "
instance(c,contrast-01)
instance(s,say-01)
instance(h,he)
instance(p,possible-01)
instance(f,find-01)
instance(s2,star)
instance(a,above)
instance(p2,place)
instance(e,earth)
instance(c2,come-01)
instance(b,before)
instance(n,now)
instance(t3,temporal-quantity)
instance(y2,year)
instance(r,right)
instance(d,date-entity)
instance(y,year)
instance(t2,then)
instance(i,i)
ARG2(c,s)
ARG0(s,h)
ARG1(s,p)
ARG1(p,f)
ARG1(f,s2)
poss(s2,h)
location(s2,a)
op1(a,p2)
location(p2,e)
ARG4-of(p2,c2)
time(c2,b)
op1(b,n)
quant(b,t3)
unit(t3,y2)
mod(t3,r)
time(t3,d)
duration(t3,y)
mod(t3,t2)
ARG2(t3,i)

# ::snt " Little man , "
instance(m,man)
instance(l,little)
mod(m,l)

# ::snt I said , " tell me that it is only a bad dream - - this affair of the snake , and the meeting - place , and the star ... "
instance(s,say-01)
instance(i,i)
instance(t,tell-01)
instance(y,you)
instance(d,dream-01)
instance(a,and)
instance(a2,affair-02)
instance(s2,snake)
instance(t2,this)
instance(m,meet-01)
instance(p,place)
instance(s3,star)
instance(b,bad-07)
instance(o,only)
ARG0(s,i)
ARG1(s,t)
ARG0(t,y)
ARG1(t,d)
ARG0(d,i)
ARG1(i,a)
op1(a,a2)
ARG1(a2,s2)
ARG2(a2,t2)
op2(a2,m)
location(m,p)
op3(m,s3)
ARG1-of(m,b)
mod(m,o)
ARG2(m,i)

# ::snt But he did not answer my plea .
instance(c,contrast-01)
instance(a,answer-01)
instance(h,he)
instance(p,plea)
instance(i,i)
instance(-,-)
ARG2(c,a)
ARG0(a,h)
ARG1(a,p)
poss(p,i)
polarity(p,-)

# ::snt He said to me , instead : " The thing that is important is the thing that is not seen ... "
instance(s3,say-01)
instance(h,he)
instance(i2,important-01)
instance(t,thing)
instance(s2,see-01)
instance(i3,i)
instance(i,instead-of-91)
ARG0(s3,h)
ARG1(s3,i2)
ARG1(i2,t)
ARG1-of(t,s2)
ARG2(t,i3)
ARG1-of(t,i)

# ::snt " Yes , I know ... "
instance(k,know-01)
instance(i,i)
ARG0(k,i)

# ::snt " It is just as it is with the flower .
instance(r,resemble-01)
instance(i,it)
instance(f,flower)
instance(j,just)
ARG1(r,i)
ARG2(r,f)
mod(r,j)

# ::snt If you love a flower that lives on a star , it is sweet to look at the sky at night .
instance(l,look-01)
instance(s2,sky)
instance(d,date-entity)
instance(s,sweet-04)
instance(l2,love-01)
instance(y,you)
instance(f,flower)
instance(l3,live-01)
instance(s3,star)
ARG1(l,s2)
time(s2,d)
ARG1-of(s2,s)
condition(s2,l2)
ARG0(l2,y)
ARG1(l2,f)
ARG0-of(f,l3)
location(l3,s3)

# ::snt All the stars are a - bloom with flowers ... "
instance(b,bloom-01)
instance(f,flower)
instance(s,star)
instance(a,all)
ARG0(b,f)
location(b,s)
mod(s,a)

# ::snt " Yes , I know ... "
instance(k,know-01)
instance(i,i)
ARG0(k,i)

# ::snt " It is just as it is with the water .
instance(r,resemble-01)
instance(i,it)
instance(w,water)
instance(j,just)
ARG1(r,i)
ARG2(r,w)
mod(r,j)

# ::snt Because of the pulley , and the rope , what you gave me to drink was like music .
instance(c,cause-01)
instance(a,and)
instance(p,pulley)
instance(r,rope)
instance(r2,resemble-01)
instance(t,thing)
instance(g,give-01)
instance(y,you)
instance(i,i)
instance(d,drink-01)
instance(m,music)
ARG0(c,a)
op1(a,p)
op2(a,r)
ARG1(a,r2)
ARG1(r2,t)
ARG1-of(t,g)
ARG0(g,y)
ARG2(g,i)
purpose(g,d)
ARG0(d,i)
ARG2(d,m)

# ::snt You remember - - how good it was . "
instance(r,remember-01)
instance(y,you)
instance(g,good-02)
instance(i,it)
instance(s,so)
ARG0(r,y)
ARG1(r,g)
ARG1(g,i)
degree(g,s)

# ::snt " Yes , I know ... "
instance(k,know-01)
instance(i,i)
ARG0(k,i)

# ::snt " And at night you will look up at the stars .
instance(a,and)
instance(l,look-01)
instance(y,you)
instance(s,star)
instance(u,up)
instance(d,date-entity)
op2(a,l)
ARG0(l,y)
ARG1(l,s)
direction(l,u)
time(l,d)

# ::snt Where I live everything is so small that I can not show you where my star is to be found .
instance(h,have-degree-91)
instance(e,everything)
instance(l2,live-01)
instance(i,i)
instance(s3,small)
instance(s4,so)
instance(p,possible-01)
instance(s,show-01)
instance(i,i)
instance(l,location)
instance(f,find-01)
instance(s2,star)
instance(y2,you)
ARG1(h,e)
location(e,l2)
ARG0(l2,i)
ARG2(l2,s3)
ARG3(l2,s4)
ARG6(l2,p)
ARG1(p,s)
ARG0(s,i)
ARG1(s,l)
location-of(l,f)
ARG1(f,s2)
poss(s2,i)
ARG2(s2,y2)

# ::snt It is better , like that .
instance(h,have-degree-91)
instance(i2,it)
instance(g,good-02)
instance(m,more)
instance(r,resemble-01)
instance(t,that)
ARG1(h,i2)
ARG2(h,g)
ARG1(g,i2)
ARG3(g,m)
condition(g,r)
ARG1(r,i2)
ARG2(i2,t)

# ::snt My star will just be one of the stars , for you .
instance(s,star)
instance(y,you)
instance(i,i)
instance(i2,include-91)
instance(s2,star)
instance(j,just)
beneficiary(s,y)
poss(s,i)
ARG1-of(s,i2)
ARG2(i2,s2)
mod(i2,j)

# ::snt And so you will love to watch all the stars in the heavens ... they will all be your friends .
instance(a,and)
instance(l,love-01)
instance(y,you)
instance(w,watch-01)
instance(s,star)
instance(h,heaven)
instance(a2,all)
instance(h2,have-rel-role-91)
instance(f,friend)
op2(a,l)
ARG0(l,y)
ARG1(l,w)
ARG0(w,y)
ARG1(y,s)
location(s,h)
mod(s,a2)
ARG0-of(s,h2)
ARG1(h2,y)
ARG2(y,f)

# ::snt And , besides , I am going to make you a present ... "
instance(a,and)
instance(m,make-01)
instance(i,i)
instance(p,present)
instance(y,you)
op1(a,m)
ARG0(m,i)
ARG1(m,p)
ARG3(m,y)

# ::snt He laughed again .
instance(l,laugh-01)
instance(h,he)
instance(a,again)
ARG0(l,h)
mod(l,a)

# ::snt " Ah , little prince , dear little prince !
instance(a,and)
instance(p2,prince)
instance(l2,little)
instance(d,dear)
op2(a,p2)
mod(p2,l2)
mod(p2,d)

# ::snt I love to hear that laughter ! "
instance(l,love-01)
instance(i,i)
instance(h,hear-01)
instance(l2,laugh-01)
instance(t,that)
ARG0(l,i)
ARG1(l,h)
ARG0(h,i)
ARG1(i,l2)
mod(l2,t)

# ::snt " That is my present .
instance(p,present-01)
instance(i,i)
instance(t,that)
ARG0(p,i)
ARG1(p,t)

# ::snt Just that .
instance(t,that)
instance(j,just)
mod(t,j)

# ::snt It will be as it was when we drank the water ... "
instance(r,resemble-01)
instance(i,it)
instance(t,time)
instance(d,drink-01)
instance(w,we)
instance(w2,water)
ARG1(r,i)
ARG2(r,t)
time-of(t,d)
ARG0(d,w)
ARG1(d,w2)

# ::snt " What are you trying to say ? "
instance(t,try-01)
instance(y,you)
instance(s,say-01)
instance(a,amr-unknown)
ARG0(t,y)
ARG1(t,s)
ARG0(s,y)
ARG1(y,a)

# ::snt " All men have the stars , " he answered , " but they are not the same things for different people .
instance(a,answer-01)
instance(h,he)
instance(c,contrast-01)
instance(h2,have-03)
instance(m,man)
instance(a2,all)
instance(s,star)
instance(t,thing)
instance(s2,same-01)
instance(p,person)
instance(d2,differ-02)
ARG0(a,h)
ARG2(a,c)
ARG1(c,h2)
ARG0(h2,m)
mod(m,a2)
ARG1(m,s)
ARG2(m,t)
ARG1-of(t,s2)
ARG2(s2,s)
ARG3(s,p)
ARG1-of(p,d2)

# ::snt For some , who are travelers , the stars are guides .
instance(g,guide-01)
instance(s,star)
instance(s2,some)
instance(t,travel-01)
ARG0(g,s)
ARG1(g,s2)
ARG0-of(s2,t)

# ::snt For others they are no more than little lights in the sky .
instance(o2,opine-01)
instance(p,person)
instance(o,other)
instance(l,light)
instance(l2,little)
instance(s,sky)
instance(o3,only)
instance(t,they)
ARG0(o2,p)
mod(p,o)
ARG1(p,l)
mod(l,l2)
location(l,s)
mod(l,o3)
domain(l,t)

# ::snt For others , who are scholars , they are problems .
instance(o,opine-01)
instance(s,scholar)
instance(p,problem)
instance(t,they)
ARG0(o,s)
ARG1(o,p)
domain(p,t)

# ::snt For my businessman they were wealth .
instance(o,opine-01)
instance(b,businessman)
instance(i,i)
instance(w,wealth)
instance(t,they)
ARG0(o,b)
poss(b,i)
ARG1(b,w)
domain(w,t)

# ::snt But all these stars are silent .
instance(c,contrast-01)
instance(s2,silent)
instance(s,star)
instance(t,this)
instance(a,all)
ARG2(c,s2)
domain(s2,s)
mod(s,t)
mod(t,a)

# ::snt You - - you alone - - will have the stars as no one else has them - - "
instance(h,have-03)
instance(y,you)
instance(a,alone)
instance(s,star)
instance(r,resemble-01)
instance(h2,have-03)
instance(a2,anyone)
instance(e,else)
ARG0(h,y)
mod(y,a)
ARG1(y,s)
ARG1-of(y,r)
ARG2(r,h2)
ARG0(h2,a2)
mod(a2,e)
ARG1(a2,s)

# ::snt " What are you trying to say ? "
instance(t,try-01)
instance(y,you)
instance(s,say-01)
instance(a,amr-unknown)
ARG0(t,y)
ARG1(t,s)
ARG0(s,y)
ARG1(y,a)

# ::snt " In one of the stars I shall be living .
instance(l,live-01)
instance(i,i)
instance(s,star)
instance(i2,include-91)
instance(s2,star)
ARG0(l,i)
location(l,s)
ARG1-of(s,i2)
ARG2(i2,s2)

# ::snt In one of them I shall be laughing .
instance(l,laugh-01)
instance(i,i)
instance(s,star)
instance(i2,include-91)
instance(t,they)
ARG0(l,i)
location(l,s)
ARG1-of(s,i2)
ARG2(i2,t)

# ::snt And so it will be as if all the stars were laughing , when you look at the sky at night ... you - - only you - - will have stars that can laugh ! "
instance(a,and)
instance(r,resemble-01)
instance(i2,it)
instance(l2,laugh-01)
instance(s,star)
instance(a3,all)
instance(l3,look-01)
instance(y,you)
instance(o2,only)
instance(s2,sky)
instance(d,date-entity)
instance(n,night)
instance(h,have-03)
instance(s3,star)
instance(l,laugh-01)
instance(p,possible-01)
op2(a,r)
ARG1(r,i2)
ARG2(r,l2)
ARG0(l2,s)
mod(s,a3)
time(s,l3)
ARG0(l3,y)
mod(y,o2)
ARG1(y,s2)
time(y,d)
dayperiod(d,n)
time-of(d,h)
ARG0(h,y)
ARG1(y,s3)
ARG0-of(s3,l)
ARG1-of(l,p)

# ::snt And he laughed again .
instance(a,and)
instance(l,laugh-01)
instance(h,he)
instance(a2,again)
op2(a,l)
ARG0(l,h)
mod(l,a2)

# ::snt " And when your sorrow is comforted ( time soothes all sorrows ) you will be content that you have known me .
instance(a,and)
instance(c,content-01)
instance(y,you)
instance(k,know-02)
instance(i,i)
instance(c2,comfort-01)
instance(s,sorrow-01)
instance(s2,soothe-01)
instance(t,time)
instance(a2,all)
op2(a,c)
ARG1(c,y)
ARG2(c,k)
ARG0(k,y)
ARG1(y,i)
time(y,c2)
ARG1(c2,s)
ARG0(s,y)
ARG1-of(y,s2)
ARG0(s2,t)
mod(s2,a2)

# ::snt You will always be my friend .
instance(h,have-rel-role-91)
instance(y,you)
instance(i,i)
instance(f,friend)
instance(a,always)
ARG0(h,y)
ARG1(h,i)
ARG2(h,f)
time(h,a)

# ::snt You will want to laugh with me .
instance(w,want-01)
instance(y,you)
instance(l,laugh-01)
instance(i,i)
ARG0(w,y)
ARG1(w,l)
ARG0(l,y)
accompanier(y,i)

# ::snt And you will sometimes open your window , so , for that pleasure ... and your friends will be properly astonished to see you laughing as you look up at the sky !
instance(a,and)
instance(o,open-01)
instance(y,you)
instance(w,window)
instance(s,sometimes)
instance(p,pleasure)
instance(t,that)
instance(a2,astonish-01)
instance(s2,see-01)
instance(p3,p3)
instance(l,laugh-01)
instance(l2,look-01)
instance(s3,sky)
instance(u,up)
instance(p3,person)
instance(h,have-rel-role-91)
instance(f,friend)
instance(p2,proper)
op1(a,o)
ARG0(o,y)
ARG1(o,w)
poss(w,y)
time(w,s)
purpose(w,p)
mod(p,t)
op2(p,a2)
ARG0(a2,s2)
ARG0(s2,p3)
ARG1(p3,l)
ARG0(l,y)
time(y,l2)
ARG1(l2,s3)
direction(l2,u)
ARG1(l2,p3)
ARG0-of(p3,h)
ARG1(h,y)
ARG2(y,f)
manner(y,p2)

# ::snt Then you will say to them , ' Yes , the stars always make me laugh ! ' And they will think you are crazy .
instance(a,and)
instance(s,say-01)
instance(y,you)
instance(a3,and)
instance(y2,yes)
instance(m,make-02)
instance(s3,star)
instance(l2,laugh-01)
instance(i,i)
instance(a2,always)
instance(t2,they)
instance(t,then)
instance(t3,think-01)
instance(c,crazy-03)
op1(a,s)
ARG0(s,y)
ARG1(s,a3)
op1(a3,y2)
op2(a3,m)
ARG0(m,s3)
ARG1(m,l2)
ARG0(l2,i)
time(l2,a2)
ARG2(l2,t2)
time(l2,t)
op2(l2,t3)
ARG0(t3,t2)
ARG1(t2,c)
ARG1(c,y)

# ::snt It will be a very shabby trick that I shall have played on you ... "
instance(t3,trick-01)
instance(i,i)
instance(y,you)
instance(s2,shabby)
instance(v2,very)
ARG0(t3,i)
ARG1(t3,y)
mod(t3,s2)
degree(s2,v2)

# ::snt And he laughed again .
instance(a,and)
instance(l,laugh-01)
instance(h,he)
instance(a2,again)
op2(a,l)
ARG0(l,h)
mod(l,a2)

# ::snt " It will be as if , in place of the stars , I had given you a great number of little bells that knew how to laugh ... "
instance(r,resemble-01)
instance(g,give-01)
instance(i,i)
instance(b2,bell)
instance(l3,little)
instance(g2,great)
instance(k,know-01)
instance(l2,laugh-01)
instance(y,you)
instance(i2,instead-of-91)
instance(g3,give-01)
instance(s2,star)
ARG1(r,g)
ARG0(g,i)
ARG1(g,b2)
mod(b2,l3)
quant(b2,g2)
ARG0-of(b2,k)
ARG1(k,l2)
ARG2(k,y)
ARG1-of(k,i2)
ARG2(i2,g3)
ARG0(g3,i)
ARG1(i,s2)
ARG2(i,y)

# ::snt And he laughed again .
instance(a,and)
instance(l,laugh-01)
instance(h,he)
instance(a2,again)
op2(a,l)
ARG0(l,h)
mod(l,a2)

# ::snt Then he quickly became serious : " Tonight - - you know ... do not come , " said the little prince .
instance(s,say-01)
instance(p,prince)
instance(l,little)
instance(b,become-01)
instance(s2,serious-01)
instance(q,quick-02)
instance(t,then)
instance(c,come-01)
instance(y,you)
instance(d,date-entity)
ARG0(s,p)
mod(p,l)
ARG1-of(p,b)
ARG2(b,s2)
ARG1(s2,p)
ARG1-of(s2,q)
time(s2,t)
ARG1(s2,c)
ARG1(c,y)
time(c,d)

# ::snt " I shall not leave you , "
instance(l,leave-15)
instance(i,i)
instance(y,you)
ARG0(l,i)
ARG1(l,y)

# ::snt I said .
instance(s,say-01)
instance(i,i)
ARG0(s,i)

# ::snt " I shall look as if I were suffering .
instance(l,look-02)
instance(i,i)
instance(h,have-manner-91)
instance(s2,suffer-01)
ARG0(l,i)
ARG1(l,h)
ARG2(h,s2)

# ::snt I shall look a little as if I were dying .
instance(l,look-02)
instance(i,i)
instance(h,have-manner-91)
instance(d2,die-01)
instance(l3,little)
ARG0(l,i)
ARG1(l,h)
ARG2(h,d2)
degree(h,l3)

# ::snt It is like that .
instance(r,resemble-01)
instance(i,it)
instance(t,that)
ARG1(r,i)
ARG2(r,t)

# ::snt Do not come to see that .
instance(c,come-01)
instance(y,you)
instance(s,see-01)
instance(t,that)
ARG1(c,y)
purpose(c,s)
ARG0(s,y)
ARG1(y,t)

# ::snt It is not worth the trouble ... "
instance(w,worth-02)
instance(i,it)
instance(t,trouble-05)
ARG1(w,i)
ARG2(w,t)
ARG2(t,i)

# ::snt " I shall not leave you . "
instance(l,leave-15)
instance(i,i)
instance(y,you)
ARG0(l,i)
ARG1(l,y)

# ::snt But he was worried .
instance(c,contrast-01)
instance(w2,worry-01)
instance(h,he)
ARG2(c,w2)
ARG1(w2,h)

# ::snt " I tell you - - it is also because of the snake .
instance(t,tell-01)
instance(i,i)
instance(c,cause-01)
instance(s,snake)
instance(a,also)
instance(y,you)
ARG0(t,i)
ARG1(t,c)
ARG0(c,s)
mod(c,a)
ARG2(c,y)

# ::snt He must not bite you .
instance(o2,obligate-01)
instance(b2,bite-01)
instance(h2,he)
instance(y2,you)
ARG1(o2,b2)
ARG0(b2,h2)
ARG1(b2,y2)

# ::snt Snakes - - they are malicious creatures .
instance(s,snake)
instance(c,creature)
instance(m,malicious)
mod(s,c)
mod(c,m)

# ::snt This one might bite you just for fun ... "
instance(p,possible-01)
instance(b,bite-01)
instance(o,one)
instance(t,this)
instance(y,you)
instance(f,fun-01)
instance(j,just)
ARG1(p,b)
ARG0(b,o)
mod(o,t)
ARG1(o,y)
purpose(o,f)
mod(f,j)

# ::snt " I shall not leave you . "
instance(l,leave-15)
instance(i,i)
instance(y,you)
ARG0(l,i)
ARG1(l,y)

# ::snt But a thought came to reassure him : " It is true that they have no more poison for a second bite . "
instance(c,contrast-01)
instance(c2,come-01)
instance(t,think-01)
instance(t3,true-01)
instance(h2,have-03)
instance(t2,they)
instance(p,poison)
instance(b,bite-01)
instance(o,ordinal-entity)
instance(m,more)
instance(r,reassure-01)
instance(h,he)
ARG2(c,c2)
ARG1(c2,t)
ARG1(t,t3)
ARG1(t3,h2)
ARG0(h2,t2)
ARG1(h2,p)
purpose(p,b)
ord(b,o)
quant(b,m)
purpose(b,r)
ARG1(r,h)

# ::snt That night I did not see him set out on his way .
instance(s,see-01)
instance(i,i)
instance(s2,set-out-07)
instance(h,he)
instance(w,way)
instance(d,date-entity)
instance(n,night)
instance(t,that)
ARG0(s,i)
ARG1(s,s2)
ARG0(s2,h)
ARG1(s2,w)
poss(w,h)
time(w,d)
dayperiod(d,n)
mod(d,t)

# ::snt He got away from me without making a sound .
instance(g,get-away-08)
instance(h,he)
instance(i,i)
instance(s2,sound-02)
ARG0(g,h)
source(g,i)
manner(g,s2)
ARG1(s2,h)

# ::snt When I succeeded in catching up with him he was walking along with a quick and resolute step .
instance(s,succeed-01)
instance(i,i)
instance(c,catch-up-04)
instance(h,he)
instance(w,walk-01)
instance(q,quick-02)
instance(r2,resolute)
ARG0(s,i)
ARG1(s,c)
ARG1(c,i)
ARG2(i,h)
time(i,w)
ARG0(w,h)
ARG1-of(h,q)
manner(h,r2)

# ::snt He said to me merely : " Ah !
instance(s,say-01)
instance(h,he)
instance(a,ah)
instance(i,i)
instance(m,mere)
ARG0(s,h)
ARG1(s,a)
ARG2(s,i)
manner(s,m)

# ::snt You are there ... "
instance(y,you)
instance(t,there)
location(y,t)

# ::snt And he took me by the hand .
instance(a,and)
instance(t,take-01)
instance(h,he)
instance(i,i)
instance(h2,hand)
op2(a,t)
ARG0(t,h)
ARG1(t,i)
manner(t,h2)

# ::snt But he was still worrying .
instance(c,contrast-01)
instance(w,worry-01)
instance(h,he)
instance(s2,still)
ARG2(c,w)
ARG1(w,h)
time(w,s2)

# ::snt " It was wrong of you to come .
instance(c,come-01)
instance(y,you)
instance(w,wrong-02)
ARG1(c,y)
ARG1-of(c,w)

# ::snt You will suffer .
instance(s,suffer-01)
instance(y,you)
ARG0(s,y)

# ::snt I shall look as if I were dead ; and that will not be true ... "
instance(a,and)
instance(r,resemble-01)
instance(i,i)
instance(i2,i)
instance(d2,die-01)
instance(t,true-01)
op1(a,r)
ARG1(r,i)
ARG2(r,i2)
ARG1-of(i2,d2)
op2(i2,t)
ARG1(t,r)

# ::snt I said nothing .
instance(s,say-01)
instance(i,i)
instance(n,nothing)
ARG0(s,i)
ARG1(s,n)

# ::snt " You understand ... it is too far .
instance(u,understand-01)
instance(y,you)
instance(h,have-degree-91)
instance(i2,it)
instance(f,far)
instance(t,too)
ARG0(u,y)
ARG1(u,h)
ARG1(h,i2)
ARG2(h,f)
ARG3(h,t)

# ::snt I can not carry this body with me .
instance(p,possible-01)
instance(c,carry-01)
instance(i,i)
instance(b,body)
instance(t,this)
ARG1(p,c)
ARG0(c,i)
ARG1(c,b)
mod(b,t)
ARG3(b,i)

# ::snt It is too heavy . "
instance(h,have-degree-91)
instance(i2,it)
instance(h2,heavy)
instance(t,too)
ARG1(h,i2)
ARG2(h,h2)
ARG3(h,t)

# ::snt I said nothing .
instance(s,say-01)
instance(i,i)
instance(n,nothing)
ARG0(s,i)
ARG1(s,n)

# ::snt " But it will be like an old abandoned shell .
instance(c,contrast-01)
instance(r,resemble-01)
instance(i,it)
instance(s,shell)
instance(a,abandon-01)
instance(o,old)
ARG2(c,r)
ARG1(r,i)
ARG2(r,s)
ARG1-of(s,a)
mod(s,o)

# ::snt There is nothing sad about old shells ... "
instance(s,sad-02)
instance(s2,shell)
instance(o,old)
ARG0(s,s2)
mod(s2,o)

# ::snt I said nothing .
instance(s,say-01)
instance(i,i)
instance(n,nothing)
ARG0(s,i)
ARG1(s,n)

# ::snt He was a little discouraged .
instance(d,discourage-01)
instance(h,he)
instance(l,little)
ARG1(d,h)
degree(d,l)

# ::snt But he made one more effort : " You know , it will be very nice .
instance(c,contrast-01)
instance(e,effort-01)
instance(h,he)
instance(n,nice-01)
instance(i,it)
instance(v,very)
instance(m2,more)
ARG2(c,e)
ARG0(e,h)
ARG1(e,n)
ARG1(n,i)
degree(n,v)
mod(n,m2)

# ::snt I , too , shall look at the stars .
instance(l,look-01)
instance(i,i)
instance(t,too)
instance(s,star)
ARG0(l,i)
mod(i,t)
ARG1(i,s)

# ::snt All the stars will be wells with a rusty pulley .
instance(s,star)
instance(w,well)
instance(h,have-03)
instance(p,pulley)
instance(r,rust)
instance(a,all)
domain(s,w)
ARG0-of(w,h)
ARG1(h,p)
mod(p,r)
mod(p,a)

# ::snt All the stars will pour out fresh water for me to drink ... "
instance(p,pour-01)
instance(s,star)
instance(a,all)
instance(w,water)
instance(f,fresh-04)
instance(d,drink-01)
instance(i,i)
instance(o,out)
ARG0(p,s)
mod(s,a)
ARG1(s,w)
ARG1-of(w,f)
purpose(w,d)
ARG0(d,i)
ARG1(d,w)
direction(d,o)

# ::snt I said nothing .
instance(s,say-01)
instance(i,i)
instance(n,nothing)
ARG0(s,i)
ARG1(s,n)

# ::snt " That will be so amusing !
instance(a,amuse-01)
instance(t,that)
instance(s,so)
ARG0(a,t)
degree(a,s)

# ::snt You will have five hundred million little bells , and I shall have five hundred million springs of fresh water ... "
instance(a,and)
instance(h,have-03)
instance(y,you)
instance(b,bell)
instance(l,little)
instance(h2,have-03)
instance(i,i)
instance(s,spring)
instance(w,water)
instance(f,fresh-04)
op1(a,h)
ARG0(h,y)
ARG1(h,b)
mod(b,l)
op2(b,h2)
ARG0(h2,i)
ARG1(h2,s)
source-of(s,w)
ARG1-of(w,f)

# ::snt And he too said nothing more , because he was crying ...
instance(a,and)
instance(s,say-01)
instance(h,he)
instance(t,too)
instance(n,nothing)
instance(m,more)
instance(c,cause-01)
instance(c2,cry-02)
op2(a,s)
ARG0(s,h)
mod(h,t)
ARG1(h,n)
mod(n,m)
ARG1-of(n,c)
ARG0(c,c2)
ARG0(c2,h)

# ::snt " Here it is .
instance(i,it)
instance(h,here)
location(i,h)

# ::snt Let me go on by myself . "
instance(a,allow-01)
instance(y,you)
instance(g,go-on-15)
instance(i,i)
instance(b,by-oneself)
ARG0(a,y)
ARG1(a,g)
ARG1(g,i)
mod(g,b)

# ::snt And he sat down , because he was afraid .
instance(a,and)
instance(s,sit-down-02)
instance(h,he)
instance(c,cause-01)
instance(f,fear-01)
op2(a,s)
ARG1(s,h)
ARG1-of(s,c)
ARG0(c,f)
ARG0(f,h)

# ::snt Then he said , again : " You know - - my flower ...
instance(s,say-01)
instance(h,he)
instance(f,flower)
instance(t,then)
instance(a,again)
ARG0(s,h)
ARG1(s,f)
poss(f,h)
time(f,t)
mod(f,a)

# ::snt I am responsible for her .
instance(r,responsible-03)
instance(i,i)
instance(s,she)
ARG0(r,i)
ARG2(r,s)

# ::snt And she is so weak !
instance(a,and)
instance(w,weak-02)
instance(s,she)
instance(s2,so)
op2(a,w)
ARG1(w,s)
degree(w,s2)

# ::snt She is so naïve !
instance(n,naive)
instance(s2,so)
instance(s,she)
degree(n,s2)
domain(n,s)

# ::snt She has four thorns , of no use at all , to protect herself against all the world ... "
instance(h,have-03)
instance(s,she)
instance(t,thorn)
instance(u,use-01)
instance(a2,at-all)
instance(p,protect-01)
instance(w,world)
instance(a,all)
ARG0(h,s)
ARG1(h,t)
ARG1-of(t,u)
degree(u,a2)
purpose(u,p)
ARG0(p,t)
ARG1(t,s)
ARG2(s,w)
mod(w,a)

# ::snt I too sat down , because I was not able to stand up any longer .
instance(s,sit-down-02)
instance(i,i)
instance(t,too)
instance(c,cause-01)
instance(p,possible-01)
instance(s2,stand-up-07)
instance(l,long-03)
instance(a,any)
ARG1(s,i)
mod(i,t)
ARG1-of(i,c)
ARG0(c,p)
ARG1(p,s2)
ARG1(s2,i)
ARG1-of(i,l)
mod(l,a)

# ::snt " There now - - that is all ... "
instance(t,that)
instance(a,all)
instance(n,now)
mod(t,a)
time(t,n)

# ::snt He still hesitated a little ; then he got up .
instance(m,multi-sentence)
instance(h,hesitate-01)
instance(h2,he)
instance(s,still)
instance(l,little)
instance(g,get-05)
instance(u,up)
instance(t,then)
snt1(m,h)
ARG0(h,h2)
mod(h,s)
degree(h,l)
snt2(h,g)
ARG1(g,h2)
ARG2(h2,u)
time(h2,t)

# ::snt He took one step .
instance(s,step-01)
instance(h,he)
ARG1(s,h)

# ::snt I could not move .
instance(p,possible-01)
instance(m,move-01)
instance(i,i)
instance(-,-)
ARG1(p,m)
ARG1(m,i)
polarity(m,-)

# ::snt There was nothing but a flash of yellow close to his ankle .
instance(f,flash)
instance(y,yellow-02)
instance(c2,close-10)
instance(a,ankle)
instance(h,he)
instance(n2,nothing-but)
ARG1-of(f,y)
ARG1-of(f,c2)
ARG2(c2,a)
part-of(a,h)
mod(a,n2)

# ::snt He remained motionless for an instant .
instance(r,remain-01)
instance(h,he)
instance(i,instant)
instance(m,move-01)
ARG1(r,h)
duration(r,i)
manner(r,m)

# ::snt He did not cry out .
instance(c,cry-out-03)
instance(h,he)
instance(-,-)
ARG0(c,h)
polarity(c,-)

# ::snt He fell as gently as a tree falls .
instance(h2,have-degree-91)
instance(f,fall-01)
instance(h,he)
instance(g,gentle)
instance(e,equal)
instance(f2,fall-01)
instance(t,tree)
ARG1(h2,f)
ARG1(f,h)
ARG2(f,g)
ARG3(f,e)
ARG4(f,f2)
ARG1(f2,t)

# ::snt There was not even any sound , because of the sand .
instance(s,sound-02)
instance(a,any)
instance(e,even)
instance(c,cause-01)
instance(s2,sand)
mod(s,a)
mod(a,e)
ARG1-of(a,c)
ARG0(c,s2)

# ::snt Chapter 27 .
instance(c,chapter)

# ::snt And now six years have already gone by ...
instance(a,and)
instance(g,go-on-15)
instance(t,temporal-quantity)
instance(y,year)
instance(a2,already)
instance(n,now)
op2(a,g)
ARG1(g,t)
unit(t,y)
time(t,a2)
time(t,n)

# ::snt I have never yet told this story .
instance(t,tell-01)
instance(i,i)
instance(s,story)
instance(t2,this)
instance(e,ever)
instance(y,yet)
ARG0(t,i)
ARG1(t,s)
mod(s,t2)
time(s,e)
time(s,y)

# ::snt The companions who met me on my return were well content to see me alive .
instance(c,content-01)
instance(s,see-01)
instance(c2,c2)
instance(l,live-01)
instance(i,i)
instance(c2,companion)
instance(m,meet-03)
instance(r,return-01)
instance(w,well)
ARG0(c,s)
ARG0(s,c2)
ARG1(c2,l)
ARG0(l,i)
ARG1(l,c2)
ARG0-of(c2,m)
ARG1(m,i)
time(i,r)
ARG1(r,i)
mod(r,w)

# ::snt I was sad , but I told them : " I am tired . "
instance(c,contrast-01)
instance(s,sad-02)
instance(i,i)
instance(t,tell-01)
instance(i,i)
instance(t3,tire-01)
instance(t2,they)
ARG1(c,s)
ARG1(s,i)
ARG2(s,t)
ARG0(t,i)
ARG1(t,t3)
ARG1(t3,i)
ARG2(t3,t2)

# ::snt Now my sorrow is comforted a little .
instance(c,comfort-01)
instance(s,sorrow-01)
instance(i,i)
instance(n,now)
instance(l,little)
ARG1(c,s)
ARG0(s,i)
time(s,n)
degree(s,l)

# ::snt That is to say - - not entirely .
instance(s,say-01)
instance(e,entire)
instance(-,-)
ARG1(s,e)
polarity(e,-)

# ::snt But I know that he did go back to his planet , because I did not find his body at daybreak .
instance(c,contrast-01)
instance(k,know-01)
instance(i,i)
instance(g,go-back-19)
instance(h,he)
instance(p,planet)
instance(c2,cause-01)
instance(f,find-01)
instance(b,body)
instance(-,-)
instance(d,daybreak)
ARG2(c,k)
ARG0(k,i)
ARG1(k,g)
ARG1(g,h)
ARG2(g,p)
poss(p,h)
ARG1-of(p,c2)
ARG0(c2,f)
ARG0(f,i)
ARG1(i,b)
poss(b,h)
polarity(b,-)
time(-,d)

# ::snt It was not such a heavy body ... and at night I love to listen to the stars .
instance(a,and)
instance(b,body)
instance(h,heavy)
instance(s,such)
instance(l,love-01)
instance(i,i)
instance(l2,listen-01)
instance(s2,star)
instance(d,date-entity)
op1(a,b)
mod(b,h)
mod(h,s)
op2(h,l)
ARG0(l,i)
ARG1(l,l2)
ARG0(l2,i)
ARG1(i,s2)
time(i,d)

# ::snt It is like five hundred million little bells ...
instance(r,resemble-01)
instance(i,it)
instance(b,bell)
instance(l,little)
ARG1(r,i)
ARG2(r,b)
mod(b,l)

# ::snt But there is one extraordinary thing ... when I drew the muzzle for the little prince , I forgot to add the leather strap to it .
instance(c,contrast-01)
instance(t,thing)
instance(e,extraordinary)
instance(d,draw-01)
instance(i,i)
instance(f,forget-01)
instance(a,add-on-05)
instance(s,strap)
instance(l2,leather)
instance(m,m)
instance(m,muzzle)
instance(p,prince)
instance(l,little)
ARG2(c,t)
mod(t,e)
time(t,d)
ARG0(d,i)
ARG0-of(i,f)
ARG1(f,a)
ARG0(a,i)
ARG1(i,s)
consist-of(s,l2)
ARG2(s,m)
ARG1(s,m)
ARG2(s,p)
mod(p,l)

# ::snt He will never have been able to fasten it on his sheep .
instance(p,possible-01)
instance(e,ever)
instance(f,fasten-01)
instance(h,he)
instance(i,it)
instance(s,sheep)
time(p,e)
ARG1(p,f)
ARG0(f,h)
ARG1(f,i)
ARG2(f,s)
poss(s,h)

# ::snt So now I keep wondering : what is happening on his planet ?
instance(k,keep-02)
instance(w,wonder-01)
instance(i,i)
instance(e,event)
instance(a,amr-unknown)
instance(p,planet)
instance(h,he)
instance(n,now)
ARG1(k,w)
ARG0(w,i)
ARG1(w,e)
mod(e,a)
location(e,p)
poss(p,h)
time(p,n)

# ::snt Perhaps the sheep has eaten the flower ...
instance(p2,possible-01)
instance(e,eat-01)
instance(s,sheep)
instance(f,flower)
ARG1(p2,e)
ARG0(e,s)
ARG1(e,f)

# ::snt At one time I say to myself : " Surely not !
instance(s,say-01)
instance(i,i)
instance(h,have-polarity-91)
instance(-,-)
instance(s2,sure-02)
instance(o,one)
ARG0(s,i)
ARG1(s,h)
ARG2(h,-)
ARG1-of(-,s2)
ARG2(-,i)
time(i,o)

# ::snt The little prince shuts his flower under her glass globe every night , and he watches over his sheep very carefully ... "
instance(a,and)
instance(s,shut-01)
instance(p,prince)
instance(l,little)
instance(g,globe)
instance(g2,glass)
instance(s2,she)
instance(u,under)
instance(f2,flower)
instance(l2,little)
instance(r,rate-entity-91)
instance(n,night)
instance(w,watch-01)
instance(s3,sheep)
instance(c,careful)
instance(v,very)
op1(a,s)
ARG0(s,p)
mod(p,l)
ARG1(p,g)
consist-of(g,g2)
poss(g,s2)
op1-of(g,u)
location-of(u,f2)
mod(f2,l2)
poss(f2,p)
time(f2,r)
ARG4(r,n)
op2(r,w)
ARG0(w,p)
ARG1(p,s3)
manner(p,c)
degree(c,v)

# ::snt Then I am happy .
instance(h,happy-01)
instance(i,i)
instance(t,then)
ARG1(h,i)
time(h,t)

# ::snt And there is sweetness in the laughter of all the stars .
instance(a,and)
instance(s,sweet-05)
instance(l,laugh-01)
instance(s2,star)
instance(a2,all)
op2(a,s)
ARG1(s,l)
ARG0(l,s2)
mod(s2,a2)

# ::snt But at another time I say to myself : " At some moment or other one is absent - minded , and that is enough !
instance(c,contrast-01)
instance(s,say-01)
instance(i,i)
instance(a2,and)
instance(o,one)
instance(a3,absent-minded)
instance(o2,or)
instance(m,moment)
instance(s2,some)
instance(o3,other)
instance(e,enough)
instance(t2,that)
instance(t,time)
instance(a,another)
ARG2(c,s)
ARG0(s,i)
ARG1(s,a2)
op1(a2,o)
mod(o,a3)
time(o,o2)
op1(o2,m)
mod(m,s2)
op2(m,o3)
op2(m,e)
domain(e,t2)
ARG2(e,i)
time(i,t)
mod(t,a)

# ::snt On some one evening he forgot the glass globe , or the sheep got out , without making any noise , in the night ... "
instance(o,or)
instance(f,forget-01)
instance(h,he)
instance(g,globe)
instance(g2,glass)
instance(e,escape-01)
instance(s,sheep)
instance(d,date-entity)
instance(n,night)
instance(s3,sound-02)
instance(a2,any)
instance(d2,date-entity)
instance(e2,evening)
instance(s2,some)
op1(o,f)
ARG0(f,h)
ARG1(f,g)
consist-of(g,g2)
op2(g,e)
ARG0(e,s)
time(e,d)
dayperiod(d,n)
manner(d,s3)
ARG1(s3,s)
mod(s,a2)
time(s,d2)
dayperiod(d2,e2)
mod(d2,s2)

# ::snt And then the little bells are changed to tears ...
instance(a,and)
instance(c,change-01)
instance(b,bell)
instance(l,little)
instance(t2,tear-03)
instance(t,then)
op2(a,c)
ARG1(c,b)
mod(b,l)
ARG2(b,t2)
time(b,t)

# ::snt Here , then , is a great mystery .
instance(m,mystery)
instance(g,great)
instance(t,then)
instance(h,here)
mod(m,g)
time(m,t)
location(m,h)

# ::snt For you who also love the little prince , and for me , nothing in the universe can be the same if somewhere , we do not know where , a sheep that we never saw has - - yes or no ? -- eaten a rose ...
instance(d,determine-01)
instance(t,truth-value)
instance(e,eat-01)
instance(s2,sheep)
instance(s3,see-01)
instance(w2,we)
instance(e2,ever)
instance(r,rose)
instance(s4,somewhere)
instance(k,know-01)
instance(t2,truth-value)
instance(p,possible-01)
instance(s,same-01)
instance(n,nothing)
instance(u,universe)
instance(a,and)
instance(y,you)
instance(l,love-01)
instance(p2,prince)
instance(l2,little)
instance(a2,also)
instance(i,i)
ARG0(d,t)
polarity-of(t,e)
ARG0(e,s2)
ARG1-of(s2,s3)
ARG0(s3,w2)
time(s3,e2)
ARG1(s3,r)
location(s3,s4)
ARG1-of(s4,k)
ARG0(k,w2)
ARG1(k,t2)
polarity-of(t2,p)
ARG1(p,s)
ARG1(s,n)
location(n,u)
ARG3(n,a)
op1(a,y)
ARG0-of(y,l)
ARG1(l,p2)
mod(p2,l2)
mod(p2,a2)
op2(p2,i)

# ::snt Look up at the sky .
instance(l,look-01)
instance(y,you)
instance(s,sky)
instance(u,up)
ARG0(l,y)
ARG1(l,s)
direction(l,u)

# ::snt Ask yourselves : is it yes or no ?
instance(a,ask-01)
instance(y,you)
instance(t,truth-value)
ARG0(a,y)
ARG1(a,t)
ARG2(a,y)

# ::snt Has the sheep eaten the flower ?
instance(e,eat-01)
instance(s,sheep)
instance(f,flower)
instance(a,amr-unknown)
ARG0(e,s)
ARG1(e,f)
polarity(e,a)

# ::snt And you will see how everything changes ...
instance(a,and)
instance(s,see-01)
instance(y,you)
instance(h,have-manner-91)
instance(c,change-01)
instance(e,everything)
op2(a,s)
ARG0(s,y)
ARG1(s,h)
ARG2(h,c)
ARG1(c,e)

# ::snt And no grown - up will ever understand that this is a matter of so much importance !
instance(a,and)
instance(u,understand-01)
instance(g,grown-up)
instance(t,this)
instance(m,matter-01)
instance(i,important-01)
instance(m2,much)
instance(s,so)
instance(e2,ever)
op2(a,u)
ARG0(u,g)
ARG1(u,t)
ARG1-of(t,m)
ARG1-of(m,i)
mod(i,m2)
degree(m2,s)
time(m2,e2)

# ::snt This is , to me , the loveliest and saddest landscape in the world .
instance(o,opine-01)
instance(i,i)
instance(l,landscape)
instance(t,this)
instance(h,have-degree-91)
instance(l2,lovely)
instance(m,most)
instance(w,world)
instance(h2,have-degree-91)
instance(s,sad-02)
instance(m2,most)
ARG0(o,i)
ARG1(o,l)
domain(l,t)
ARG1-of(l,h)
ARG2(h,l2)
ARG3(h,m)
ARG5(h,w)
ARG1-of(h,h2)
ARG2(h2,s)
ARG1(s,l)
ARG3(s,m2)
ARG5(s,w)

# ::snt It is the same as that on the preceding page , but I have drawn it again to impress it on your memory .
instance(c,contrast-01)
instance(s,same-01)
instance(i,it)
instance(t,that)
instance(p,page)
instance(p2,precede-01)
instance(d,draw-01)
instance(a,again)
instance(i2,impress-01)
instance(m,memory)
instance(y,you)
ARG1(c,s)
ARG1(s,i)
ARG2(s,t)
location(t,p)
ARG1-of(p,p2)
ARG2(p,d)
ARG0(d,i)
ARG1(i,i)
mod(i,a)
purpose(i,i2)
ARG0(i2,i)
ARG1(i,m)
poss(m,y)

# ::snt It is here that the little prince appeared on Earth , and disappeared .
instance(a,and)
instance(a2,appear-01)
instance(p,prince)
instance(l,little)
instance(e,earth)
instance(d,disappear-01)
instance(h,here)
op1(a,a2)
ARG1(a2,p)
mod(p,l)
location(p,e)
op2(p,d)
ARG1(d,p)
location(d,h)

# ::snt Look at it carefully so that you will be sure to recognise it in case you travel some day to the African desert .
instance(l,look-01)
instance(y,y)
instance(i,it)
instance(c,careful)
instance(r,recognize-02)
instance(y,you)
instance(e,ensure-01)
instance(t,travel-01)
instance(d,desert)
instance(c2,continent)
instance(d2,day)
instance(s2,some)
ARG0(l,y)
ARG1(y,i)
manner(y,c)
purpose(y,r)
ARG0(r,y)
ARG1(r,i)
ARG1-of(i,e)
condition(i,t)
ARG0(t,y)
ARG4(y,d)
location(d,c2)
time(d,d2)
mod(d2,s2)

# ::snt And , if you should come upon this spot , please do not hurry on .
instance(a,and)
instance(h,hurry-01)
instance(y,y)
instance(c,come-upon-26)
instance(y,you)
instance(s,spot)
instance(t,this)
op2(a,h)
ARG0(h,y)
ARG1(y,y)
condition(y,c)
ARG0(c,y)
ARG1(c,s)
mod(s,t)

# ::snt Wait for a time , exactly under the star .
instance(w,wait-01)
instance(y,you)
instance(t,time)
instance(u,under)
instance(s,star)
instance(e,exact)
ARG1(w,y)
duration(w,t)
location(w,u)
op1(u,s)
manner(u,e)

# ::snt Then , if a little man appears who laughs , who has golden hair and who refuses to answer questions , you will know who he is .
instance(k,know-01)
instance(y,you)
instance(m,m)
instance(a,appear-01)
instance(m,man)
instance(l,little)
instance(l2,laugh-01)
instance(h,have-03)
instance(h2,hair)
instance(g,golden)
instance(r,refuse-01)
instance(a2,answer-01)
instance(q,question-01)
instance(t,then)
ARG0(k,y)
ARG1(k,m)
condition(m,a)
ARG1(a,m)
mod(m,l)
ARG0-of(m,l2)
ARG0-of(m,h)
ARG1(h,h2)
mod(h2,g)
ARG0-of(h2,r)
ARG1(r,a2)
ARG1(a2,q)
time(a2,t)

# ::snt If this should happen , please comfort me .
instance(c,comfort-01)
instance(y,you)
instance(i,i)
instance(t,this)
ARG0(c,y)
ARG1(c,i)
condition(c,t)

# ::snt Send me word that he has come back .
